{"componentChunkName":"component---src-templates-page-js","path":"/stringify/options/escape_formulas/","result":{"data":{"page":{"html":"<h1 id=\"option-code-classlanguage-textescape_formulascode\" style=\"position:relative;\"><a href=\"#option-code-classlanguage-textescape_formulascode\" aria-label=\"option code classlanguage textescape_formulascode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Option <code class=\"language-text\">escape_formulas</code></h1>\n<p>Escape values that start with <code class=\"language-text\">=</code>, <code class=\"language-text\">+</code>, <code class=\"language-text\">-</code>, <code class=\"language-text\">@</code>, <code class=\"language-text\">\\t</code>, or <code class=\"language-text\">\\r</code> with <code class=\"language-text\">'</code> and defend against CSV injection attacks.</p>\n<ul>\n<li>Type: <code class=\"language-text\">Boolean</code></li>\n<li>Optional</li>\n<li>Default: <code class=\"language-text\">false</code></li>\n<li>Since: 6.3.0</li>\n<li>Related: <code class=\"language-text\">quote</code>, <a href=\"/stringify/options/escape/\"><code class=\"language-text\">escape</code></a> â€” see <a href=\"/parse/options/#available-options\">Available Options</a></li>\n</ul>\n<h2 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<p>In the <a href=\"https://github.com/adaltas/node-csv/tree/master/packages/csv-stringify/samples/option.escape_formulas.js\">escape formulas example</a>, every field wich starts with the values <code class=\"language-text\">=</code> and <code class=\"language-text\">@</code> is escaped by prefixing its value with <code class=\"language-text\">'</code>.</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> stringify <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-stringify/sync\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"node:assert\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> records <span class=\"token operator\">=</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"=1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"=4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"6\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">escape_formulas</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">,</span> <span class=\"token string\">\"'=1,'@2,3\\n'=4,'@5,6\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-stringify/samples/option.escape_formulas.js\">./packages/csv-stringify/samples/option.escape_formulas.js</a></div></div></p>","frontmatter":{"title":"Option escape_formulas","description":"Escape values that start with `=`, `+`, `-`, `@`, `\\t`, or `\\r` with a `'` and defend against CSV injection attacks.","keywords":["csv","stringify","options","escape_formulas","quotes","escape"]},"headings":[{"id":"example","depth":2,"value":"Example"}],"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/stringify/options/escape_formulas.md","slug":"/stringify/options/escape_formulas/"}}},"pageContext":{}},"staticQueryHashes":["421902736"],"slicesMap":{}}