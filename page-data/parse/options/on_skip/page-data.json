{"componentChunkName":"component---src-templates-page-js","path":"/parse/options/on_skip/","result":{"data":{"page":{"html":"<h1 id=\"option-code-classlanguage-texton_skipcode\" style=\"position:relative;\"><a href=\"#option-code-classlanguage-texton_skipcode\" aria-label=\"option code classlanguage texton_skipcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Option <code class=\"language-text\">on_skip</code></h1>\n<p>The <code class=\"language-text\">on_skip</code> option provides a way to track invalid records without interrupting the parsing process. It defines a function called when records are skipped due to parsing errors.</p>\n<ul>\n<li>Type: <code class=\"language-text\">function</code></li>\n<li>Optional</li>\n<li>Default: <code class=\"language-text\">undefined</code></li>\n<li>Since: 5.1.0</li>\n<li>Related: <a href=\"/parse/options/on_record/\"><code class=\"language-text\">on_record</code></a>, <a href=\"/parse/options/raw/\"><code class=\"language-text\">skip_records_with_error</code></a>, <a href=\"/parse/options/skip_records_with_error/\"><code class=\"language-text\">raw</code></a> â€” see <a href=\"/parse/options/#available-options\">Available Options</a></li>\n</ul>\n<p>The <code class=\"language-text\">on_skip</code> option works at the record level and requires the <code class=\"language-text\">skip_records_with_error</code> option to be enabled.</p>\n<h2 id=\"use-cases\" style=\"position:relative;\"><a href=\"#use-cases\" aria-label=\"use cases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use cases</h2>\n<p>Use this option to:</p>\n<ul>\n<li>Log skipped records for later analysis</li>\n<li>Track parsing errors while maintaining the parsing process</li>\n<li>Monitor data quality issues in your CSV files</li>\n</ul>\n<h2 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>The user function receives the error object as an argument. If the <code class=\"language-text\">raw</code> option is enabled, a second argument contains the CSV string being currently processed.</p>\n<ul>\n<li><code class=\"language-text\">error</code>: Error encountered during parsing\n<ul>\n<li><code class=\"language-text\">message</code>: A descriptive error message</li>\n<li><code class=\"language-text\">code</code>: The error code (e.g., \"CSV_RECORD_INCONSISTENT_FIELDS_LENGTH\")</li>\n<li><code class=\"language-text\">record</code>: The raw record that caused the error</li>\n</ul>\n</li>\n<li><code class=\"language-text\">buffer</code>: Current processing buffer encoded as an UTF-8 string</li>\n</ul>\n<h2 id=\"example-with-inconsistent-field-lengths\" style=\"position:relative;\"><a href=\"#example-with-inconsistent-field-lengths\" aria-label=\"example with inconsistent field lengths permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example with inconsistent field lengths</h2>\n<p>The following example demonstrates how to handle records with inconsistent field counts:</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"node:assert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> dedent <span class=\"token keyword\">from</span> <span class=\"token string\">\"dedent\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> parse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-parse\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>\n  dedent<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    a,b,c\n    invalid\n    d,e,f\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">skip_records_with_error</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">on_skip</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> message<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> record <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid Record Length: expect 3, got 1 on line 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CSV_RECORD_INCONSISTENT_FIELDS_LENGTH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      assert<span class=\"token punctuation\">.</span><span class=\"token function\">deepStrictEqual</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"invalid\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> records</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    assert<span class=\"token punctuation\">.</span><span class=\"token function\">deepStrictEqual</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/option.on_skip.js\">./packages/csv-parse/samples/option.on_skip.js</a></div></div></p>\n<h2 id=\"error-handling\" style=\"position:relative;\"><a href=\"#error-handling\" aria-label=\"error handling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error handling</h2>\n<p>The <code class=\"language-text\">on_skip</code> function is called after the parser has determined that a record should be skipped. It works in conjunction with the <code class=\"language-text\">skip_records_with_error</code> option:</p>\n<ol>\n<li>When <code class=\"language-text\">skip_records_with_error</code> is <code class=\"language-text\">true</code>, invalid records are skipped and trigger the <code class=\"language-text\">on_skip</code> callback</li>\n<li>When <code class=\"language-text\">skip_records_with_error</code> is <code class=\"language-text\">false</code> (default), parsing errors will cause the parser to emit an error and stop</li>\n</ol>\n<h2 id=\"error-behaviour\" style=\"position:relative;\"><a href=\"#error-behaviour\" aria-label=\"error behaviour permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error behaviour</h2>\n<p>Errors thrown inside the <code class=\"language-text\">on_skip</code> function are caught by the parser and handled as if <code class=\"language-text\">skip_records_with_error</code> was not enabled. It's recommended to implement proper error handling within your callback function to prevent the parsing process from being interrupted.</p>","frontmatter":{"title":"Option on_skip","description":"Option \"on_skip\" provides a callback to handle skipped records that contain invalid data.","keywords":["csv","parse","options","skip","error","invalid","record"]},"headings":[{"id":"use-cases","depth":2,"value":"Use cases"},{"id":"usage","depth":2,"value":"Usage"},{"id":"example-with-inconsistent-field-lengths","depth":2,"value":"Example with inconsistent field lengths"},{"id":"error-handling","depth":2,"value":"Error handling"},{"id":"error-behaviour","depth":2,"value":"Error behaviour"}],"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/parse/options/on_skip.md","slug":"/parse/options/on_skip/"}}},"pageContext":{}},"staticQueryHashes":["421902736"],"slicesMap":{}}