{"componentChunkName":"component---src-templates-page-js","path":"/parse/options/ignore_last_delimiters/","result":{"data":{"page":{"html":"<h1 id=\"option-code-classlanguage-textignore_last_delimiterscode\" style=\"position:relative;\"><a href=\"#option-code-classlanguage-textignore_last_delimiterscode\" aria-label=\"option code classlanguage textignore_last_delimiterscode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Option <code class=\"language-text\">ignore_last_delimiters</code></h1>\n<ul>\n<li>Type: <code class=\"language-text\">boolean|integer</code></li>\n<li>Optional</li>\n<li>Default: <code class=\"language-text\">false</code></li>\n<li>Since: 4.15.0</li>\n<li>Related: <a href=\"/parse/options/columns/\"><code class=\"language-text\">columns</code></a>, <a href=\"/parse/options/delimiter/\"><code class=\"language-text\">delimiter</code></a> â€” see <a href=\"/parse/options/#available-options\">Available Options</a></li>\n</ul>\n<p>The <code class=\"language-text\">ignore_last_delimiters</code> option disregard any <a href=\"/parse/options/delimiter/\">delimiters</a> present in the last field of the record. It requires the presence of the <code class=\"language-text\">column</code> option to know how many fields are expected when it is defined as <code class=\"language-text\">true</code>.</p>\n<p>Some formats which claim to be partially compatible with csv formats assume that it's ok to have unescaped commas in the last field because the number of fields was registered when the header line was parsed.</p>\n<p>For example, <a href=\"https://en.wikipedia.org/wiki/SubStation_Alpha\">Advanced SubStation Alpha (ASS)</a>, technically SSA v4+, is a subtitle file format.  You can see such behavior in its specification:</p>\n<blockquote>\n<p>The format line specifies how SSA will interpret all following Event lines. The field names must be spelled correctly, and are as follows:</p>\n</blockquote>\n<p>Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text.\nThe last field will always be the Text field, so that it can contain commas.</p>\n<p>and here:</p>\n<blockquote>\n<p>The information fields in each line are separated by a commas.</p>\n</blockquote>\n<p>This makes it illegal to use commas in character names and style names (SSA prevents you putting commas in these). It also makes it quite easy to load chunks of an SSA script into a spreadsheet as a CSV file, and chop out columns of information you need for another subtitling program.</p>\n<h2 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<p>In this <a href=\"/https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/option.ignore_last_delimiters.js\">example</a>, the CSV data is made of 2 fields, <code class=\"language-text\">format</code> and <code class=\"language-text\">description</code>. Fields are separated by commans, the default <a href=\"/parse/options/delimiter/\">delimiter</a>. The last field, <code class=\"language-text\">description</code>, can contains any number of commas without breaking the record.</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"node:assert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> parse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-parse\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nformat;description\nCSV;CSV delimited text file that uses a comma, by default, to separate values.\nSSA;SSA is a subtitle file format that allows for more advanced subtitles than the conventional SRT and similar formats.\nASS;Advanced SubStation Alpha (ASS), technically SSA v4+, is a script for more advanced subtitles than SSA.\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">delimiter</span><span class=\"token operator\">:</span> <span class=\"token string\">\";\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ignore_last_delimiters</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> records</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    assert<span class=\"token punctuation\">.</span><span class=\"token function\">deepStrictEqual</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CSV\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span>\n          <span class=\"token string\">\"CSV delimited text file that uses a comma, by default, to separate values.\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"SSA\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span>\n          <span class=\"token string\">\"SSA is a subtitle file format that allows for more advanced subtitles than the conventional SRT and similar formats.\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ASS\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span>\n          <span class=\"token string\">\"Advanced SubStation Alpha (ASS), technically SSA v4+, is a script for more advanced subtitles than SSA.\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/option.ignore_last_delimiters.js\">./packages/csv-parse/samples/option.ignore_last_delimiters.js</a></div></div></p>","frontmatter":{"title":"Option ignore_last_delimiters","description":"Option \"ignore_last_delimiters\" handles records starting from a requested line number.","keywords":["csv","parse","options","columns","ssa"]},"headings":[{"id":"example","depth":2,"value":"Example"}],"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/parse/options/ignore_last_delimiters.md","slug":"/parse/options/ignore_last_delimiters/"}}},"pageContext":{}},"staticQueryHashes":["421902736"],"slicesMap":{}}