{"componentChunkName":"component---src-templates-page-js","path":"/parse/options/objname/","result":{"data":{"page":{"html":"<h1 id=\"option-code-classlanguage-textobjnamecode\" style=\"position:relative;\"><a href=\"#option-code-classlanguage-textobjnamecode\" aria-label=\"option code classlanguage textobjnamecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Option <code class=\"language-text\">objname</code></h1>\n<p>The <code class=\"language-text\">objname</code> option associates records using one of the fields as keys.</p>\n<p>With the <code class=\"language-text\">columns</code> option, the field is identified by its column name. It must be a string or a buffer. Without the <code class=\"language-text\">column</code> option, the field is identified by its index position. It must be a number.</p>\n<ul>\n<li>Type: <code class=\"language-text\">string</code> | <code class=\"language-text\">Buffer</code> | <code class=\"language-text\">number</code></li>\n<li>Optional</li>\n<li>Default: <code class=\"language-text\">undefined</code></li>\n<li>Since: early days</li>\n<li>Related: <a href=\"/parse/options/column/\"><code class=\"language-text\">column</code></a>, <a href=\"/parse/options/info/\"><code class=\"language-text\">info</code></a>, <a href=\"/parse/options/raw/\"><code class=\"language-text\">raw</code></a> â€” see <a href=\"/parse/options/#available-options\">Available Options</a></li>\n</ul>\n<p>The option is compatible with the <code class=\"language-text\">raw</code> and <code class=\"language-text\">info</code> options.</p>\n<h2 id=\"as-a-column-name\" style=\"position:relative;\"><a href=\"#as-a-column-name\" aria-label=\"as a column name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>As a column name</h2>\n<p>Field names reference one of the record property. Thus, they require the usage of the column option to generate records as object literal instead of array.</p>\n<p>Below, <a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/option.objname.column.js\">the <code class=\"language-text\">objname</code> option is a string</a> and it defines the <code class=\"language-text\">c2</code> column:</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"node:assert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> parse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-parse/sync\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> records <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1,c2,c3\\na,b,c\\nd,e,f\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">objname</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c2\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">deepStrictEqual</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">c1</span><span class=\"token operator\">:</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c2</span><span class=\"token operator\">:</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c3</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">e</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">c1</span><span class=\"token operator\">:</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c2</span><span class=\"token operator\">:</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c3</span><span class=\"token operator\">:</span> <span class=\"token string\">\"f\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/option.objname.column.js\">./packages/csv-parse/samples/option.objname.column.js</a></div></div></p>\n<h2 id=\"as-an-index-name\" style=\"position:relative;\"><a href=\"#as-an-index-name\" aria-label=\"as an index name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>As an index name</h2>\n<p>Index names reference a record field by its position. Thus, records must be generated as arrays.</p>\n<p>Below, <a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/option.objname.index.js\">the <code class=\"language-text\">objname</code> option is a number</a> and it defined the field in the second postion at index <code class=\"language-text\">1</code>:</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"node:assert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> parse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-parse/sync\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> records <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a,b,c\\nd,e,f\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">objname</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">deepStrictEqual</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">e</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/option.objname.column.js\">./packages/csv-parse/samples/option.objname.column.js</a></div></div></p>","frontmatter":{"title":"Option objname","description":"Option \"objname\" associates records using one of the fields as keys.","keywords":["csv","parse","options","objname","index","position","name","field"]},"headings":[{"id":"as-a-column-name","depth":2,"value":"As a column name"},{"id":"as-an-index-name","depth":2,"value":"As an index name"}],"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/parse/options/objname.md","slug":"/parse/options/objname/"}}},"pageContext":{}},"staticQueryHashes":["421902736"],"slicesMap":{}}