{"componentChunkName":"component---src-templates-page-js","path":"/parse/info/","result":{"data":{"page":{"html":"<h1 id=\"csv-parse-info-properties\" style=\"position:relative;\"><a href=\"#csv-parse-info-properties\" aria-label=\"csv parse info properties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSV Parse info properties</h1>\n<p>Info properties report internal information such as the number of records which have been processed.</p>\n<p>Information have multiple level of granularity depending on how and where you access them. They apply to the overall dataset, a record or a field. Record information extends data information. Field information extends record and dataset information.</p>\n<h2 id=\"dataset-information\" style=\"position:relative;\"><a href=\"#dataset-information\" aria-label=\"dataset information permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dataset information</h2>\n<p>They are available in the <code class=\"language-text\">info</code> object of a parser instance and are also exported as the third argument of the user callback.</p>\n<ul>\n<li><code class=\"language-text\">bytes</code> (number)<br>\nNumber of processed bytes.</li>\n<li><code class=\"language-text\">columns</code> (boolean || object)<br>\nNormalized verion of <code class=\"language-text\">options.columns</code>.</li>\n<li><code class=\"language-text\">comment_lines</code> (number)<br>\nCount the number of lines being fully commented.</li>\n<li><code class=\"language-text\">empty_lines</code> (number)<br>\nCount the number of processed empty lines; was <code class=\"language-text\">empty_line_count</code> until version 3; work only with the <code class=\"language-text\">skip_empty_lines</code> option or an error will be thrown if an empty line is found.</li>\n<li><code class=\"language-text\">invalid_field_length</code> (number)<br>\nNumber of non uniform records when <code class=\"language-text\">relax_column_count</code> is true; was <code class=\"language-text\">skipped_line_count</code> until version 3.</li>\n<li><code class=\"language-text\">lines</code> (number)<br>\nNumber of lines encountered in the source dataset, start at 1 for the first line.</li>\n<li><code class=\"language-text\">records</code> (number)<br>\nCount the number of processed records.</li>\n</ul>\n<h2 id=\"record-information\" style=\"position:relative;\"><a href=\"#record-information\" aria-label=\"record information permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record information</h2>\n<p>It is exposed with the <a href=\"/parse/options/info/\"><code class=\"language-text\">info</code> option</a> and the <a href=\"/parse/options/on_record/\"><code class=\"language-text\">on_record</code> option</a>. Refers to their respective documentation to learn their usage as well as any additionnal properties they might expose.</p>\n<p>It contains all the dataset information with additionnal properties:</p>\n<ul>\n<li><code class=\"language-text\">error</code> (Error)<br>\nThe error that was encountered, useful with the variuos relax options.</li>\n<li><code class=\"language-text\">header</code> (boolean)<br>\nTrue when the <a href=\"/parse/options/columns/\"><code class=\"language-text\">columns</code> option</a> is activated and the current record is interpreted as a header instead of a data record.</li>\n<li><code class=\"language-text\">index</code> (number)<br>\nPosition of the last processed field.</li>\n</ul>\n<h2 id=\"field-information\" style=\"position:relative;\"><a href=\"#field-information\" aria-label=\"field information permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Field information</h2>\n<p>It is exposed by the <a href=\"/parse/options/cast/\"><code class=\"language-text\">cast</code> option</a> and <a href=\"/parse/options/cast_date/\"><code class=\"language-text\">cast_date</code> option</a> when defined as functions.</p>\n<p>Runtime errors are enriched with the field information as well as some additionnal properties when appropriate.</p>\n<p>It contains all the dataset and record information with additionnal properties:</p>\n<ul>\n<li><code class=\"language-text\">column</code> (string || index)<br>\nThe column name if the <code class=\"language-text\">columns</code> option is active or the field index position in the record.</li>\n<li><code class=\"language-text\">quoting</code> (boolean)<br>\nIndicates that the field is surrounded by quotes.</li>\n</ul>\n<h2 id=\"accessing-the-internal-code-classlanguage-textinfocode-object\" style=\"position:relative;\"><a href=\"#accessing-the-internal-code-classlanguage-textinfocode-object\" aria-label=\"accessing the internal code classlanguage textinfocode object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessing the internal <code class=\"language-text\">info</code> object</h2>\n<p>The <code class=\"language-text\">info</code> object is directly available from the parser instance. Don't modify the object, some properties are used internally by the parser.</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"node:assert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> parse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-parse\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> parser <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1,2,3\\na,b,c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Report information for every record</span>\nparser<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readable\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>parser<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> lines<span class=\"token punctuation\">,</span> records <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Note, `lines` might equal `2` even for the first record because</span>\n    <span class=\"token comment\">// the parser already processed the second line at the time we get here.</span>\n    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>\n      <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Current state is \\d lines and \\d records\\.</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Current state is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lines<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> lines and </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>records<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> records.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Report information when the process is finished</span>\nparser<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> lines<span class=\"token punctuation\">,</span> records <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">;</span>\n  assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">There are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lines<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> lines with </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>records<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> records.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"There are 2 lines with 2 records.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/api.info.internal.js\">./packages/csv-parse/samples/api.info.internal.js</a></div></div></p>\n<h2 id=\"accessing-code-classlanguage-textinfocode-in-the-callback\" style=\"position:relative;\"><a href=\"#accessing-code-classlanguage-textinfocode-in-the-callback\" aria-label=\"accessing code classlanguage textinfocode in the callback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessing <code class=\"language-text\">info</code> in the callback</h2>\n<p>The <code class=\"language-text\">info</code> object in provided in the third argument of the callback, after the <code class=\"language-text\">error</code> and <code class=\"language-text\">data</code> arguments.</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"node:assert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> parse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-parse\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1,2,3\\na,b,c\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> lines<span class=\"token punctuation\">,</span> records <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">There are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lines<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> lines with </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>records<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> records.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"There are 2 lines with 2 records.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/api.info.internal.js\">./packages/csv-parse/samples/api.info.internal.js</a></div></div></p>","frontmatter":{"title":"Info properties","description":"CSV Parse - info properties","keywords":["csv","parse","count","counter","information","lines","records"]},"headings":[{"id":"dataset-information","depth":2,"value":"Dataset information"},{"id":"record-information","depth":2,"value":"Record information"},{"id":"field-information","depth":2,"value":"Field information"},{"id":"accessing-the-internal-code-classlanguage-textinfocode-object","depth":2,"value":"Accessing the internal <code class=\"language-text\">info</code> object"},{"id":"accessing-code-classlanguage-textinfocode-in-the-callback","depth":2,"value":"Accessing <code class=\"language-text\">info</code> in the callback"}],"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/parse/info.md","slug":"/parse/info/"}}},"pageContext":{}},"staticQueryHashes":["421902736"],"slicesMap":{}}