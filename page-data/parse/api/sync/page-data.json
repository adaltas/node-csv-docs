{"componentChunkName":"component---src-templates-page-js","path":"/parse/api/sync/","result":{"data":{"page":{"html":"<h1 id=\"sync-api\" style=\"position:relative;\"><a href=\"#sync-api\" aria-label=\"sync api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sync API</h1>\n<p>The sync API exposes a function, which expects as input a full dataset as text, and which returns the full result set as an array or an object.</p>\n<p>To summarise, it is a regular direct synchronous call to a function: you pass CSV content and it returns records. Because of its simplicity, this is the recommended approach if you don't need scalability and if your dataset fit in memory.</p>\n<p>Choose the sync API for simplicity, readability and convenience at the expense of not being scalable.</p>\n<p>Import or require the <code class=\"language-text\">csv-parse/sync</code> module to use it. The exported function signature is <code class=\"language-text\">const records = parse(data, [options])</code>.</p>\n<p>The <a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/api.sync.js\">synchronous example</a> illustrates how to use the synchronous module. This example is available with the command <code class=\"language-text\">node samples/api.sync.js</code>.</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"node:assert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> parse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-parse/sync\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\"key_1\",\"key_2\"\n\"value 1\",\"value 2\"\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> records <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">skip_empty_lines</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">deepStrictEqual</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">key_1</span><span class=\"token operator\">:</span> <span class=\"token string\">\"value 1\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">key_2</span><span class=\"token operator\">:</span> <span class=\"token string\">\"value 2\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-parse/samples/api.sync.js\">./packages/csv-parse/samples/api.sync.js</a></div></div></p>","frontmatter":{"title":"Sync API","description":"The sync API exposes a function, which expects as input a full dataset as text, and which returns the full result set as an array or an object.","keywords":["csv","parse","api","sync","memory","function"]},"headings":[],"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/parse/api/sync.md","slug":"/parse/api/sync/"}}},"pageContext":{}},"staticQueryHashes":["421902736"],"slicesMap":{}}