{"componentChunkName":"component---src-templates-page-js","path":"/generate/examples/","result":{"data":{"page":{"html":"<h1 id=\"csv-generate-examples\" style=\"position:relative;\"><a href=\"#csv-generate-examples\" aria-label=\"csv generate examples permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSV Generate examples</h1>\n<p>This package proposes different API flavors. Every example is available on <a href=\"https://github.com/adaltas/node-csv/tree/master/packages/csv-generate/samples\">GitHub</a>.</p>\n<h2 id=\"using-the-pipe-function\" style=\"position:relative;\"><a href=\"#using-the-pipe-function\" aria-label=\"using the pipe function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using the pipe function</h2>\n<p>One useful function part of the Stream API is <code class=\"language-text\">pipe</code> to interact between\nmultiple streams. You may use this function to pipe a <code class=\"language-text\">stream.Readable</code>\nsource to a <code class=\"language-text\">stream.Writable</code> destination.</p>\n<p>The <a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-generate/samples/pipe.js\">pipe example</a>, generates a dataset of 2 rows with 2 columns. The first columns contains integer values and the second column contains boolean values. It prints the generated dataset to stdout. the function <code class=\"language-text\">generate</code> return a readable stream which is then piped to <code class=\"language-text\">process.stdout</code> which is a writable stream.</p>\n<p><div class=\"gatsby-highlight display-embed-file-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> generate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csv-generate\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">generate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"int\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bool\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"display-embed-file\"><a href=\"https://github.com/adaltas/node-csv/blob/master/packages/csv-generate/samples/pipe.js\">./packages/csv-generate/samples/pipe.js</a></div></div></p>","frontmatter":{"title":"Examples","description":"Examples on how to generate CSV data sets and streams","keywords":["csv","generate","example","sample","stream","pipe","callback","sync","async"]},"headings":[{"id":"using-the-pipe-function","depth":2,"value":"Using the pipe function"}],"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/generate/examples.md","slug":"/generate/examples/"}}},"pageContext":{}},"staticQueryHashes":["421902736"],"slicesMap":{}}