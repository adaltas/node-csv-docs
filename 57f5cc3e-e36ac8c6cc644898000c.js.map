{"version":3,"file":"57f5cc3e-e36ac8c6cc644898000c.js","mappings":"oKAAA,IAAIA,EAA8B,oBAAXC,OAAyBA,OACpB,oBAATC,KAAuBA,KACZ,oBAAXC,OAAyBA,OAAS,CAAC,EAElDC,EAAS,GACTC,EAAY,GACZC,EAA4B,oBAAfC,WAA6BA,WAAaC,MACvDC,GAAS,EACb,SAASC,IACPD,GAAS,EAET,IADA,IAAIE,EAAO,mEACFC,EAAI,EAAsBA,EAAbD,KAAwBC,EAC5CR,EAAOQ,GAAKD,EAAKC,GACjBP,EAAUM,EAAKE,WAAWD,IAAMA,EAGlCP,EAAU,IAAIQ,WAAW,IAAM,GAC/BR,EAAU,IAAIQ,WAAW,IAAM,EACjC,CAmDA,SAASC,EAAaC,EAAOC,EAAOC,GAGlC,IAFA,IAAIC,EALoBC,EAMpBC,EAAS,GACJR,EAAII,EAAOJ,EAAIK,EAAKL,GAAK,EAChCM,GAAOH,EAAMH,IAAM,KAAOG,EAAMH,EAAI,IAAM,GAAMG,EAAMH,EAAI,GAC1DQ,EAAOC,KARFjB,GADiBe,EASMD,IART,GAAK,IAAQd,EAAOe,GAAO,GAAK,IAAQf,EAAOe,GAAO,EAAI,IAAQf,EAAa,GAANe,IAU9F,OAAOC,EAAOE,KAAK,GACrB,CAEA,SAASC,EAAeR,GAItB,IAAIG,EAHCT,GACHC,IAUF,IAPA,IAAIc,EAAMT,EAAMU,OACZC,EAAaF,EAAM,EACnBJ,EAAS,GACTO,EAAQ,GACRC,EAAiB,MAGZhB,EAAI,EAAGiB,EAAOL,EAAME,EAAYd,EAAIiB,EAAMjB,GAAKgB,EACtDD,EAAMN,KAAKP,EAAYC,EAAOH,EAAIA,EAAIgB,EAAkBC,EAAOA,EAAQjB,EAAIgB,IAmB7E,OAfmB,IAAfF,GACFR,EAAMH,EAAMS,EAAM,GAClBJ,GAAUhB,EAAOc,GAAO,GACxBE,GAAUhB,EAAQc,GAAO,EAAK,IAC9BE,GAAU,MACc,IAAfM,IACTR,GAAOH,EAAMS,EAAM,IAAM,GAAMT,EAAMS,EAAM,GAC3CJ,GAAUhB,EAAOc,GAAO,IACxBE,GAAUhB,EAAQc,GAAO,EAAK,IAC9BE,GAAUhB,EAAQc,GAAO,EAAK,IAC9BE,GAAU,KAGZO,EAAMN,KAAKD,GAEJO,EAAML,KAAK,GACpB,CAEA,SAASQ,EAAQC,EAAQC,EAAQC,EAAMC,EAAMC,GAC3C,IAAIC,EAAGC,EACHC,EAAgB,EAATH,EAAaD,EAAO,EAC3BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACT7B,EAAIqB,EAAQE,EAAS,EAAK,EAC1BO,EAAIT,GAAQ,EAAI,EAChBU,EAAIZ,EAAOC,EAASpB,GAOxB,IALAA,GAAK8B,EAELN,EAAIO,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGL,EAAQ,IAAJA,EAAUL,EAAOC,EAASpB,GAAIA,GAAK8B,EAAGD,GAAS,GAKrE,IAHAJ,EAAID,GAAM,IAAOK,GAAU,EAC3BL,KAAQK,EACRA,GAASP,EACFO,EAAQ,EAAGJ,EAAQ,IAAJA,EAAUN,EAAOC,EAASpB,GAAIA,GAAK8B,EAAGD,GAAS,GAErE,GAAU,IAANL,EACFA,EAAI,EAAII,MACH,IAAIJ,IAAMG,EACf,OAAOF,EAAIO,IAAsBC,KAAdF,GAAK,EAAI,GAE5BN,GAAQS,KAAKC,IAAI,EAAGb,GACpBE,GAAQI,CACV,CACA,OAAQG,GAAK,EAAI,GAAKN,EAAIS,KAAKC,IAAI,EAAGX,EAAIF,EAC5C,CAEA,SAASc,EAAOjB,EAAQkB,EAAOjB,EAAQC,EAAMC,EAAMC,GACjD,IAAIC,EAAGC,EAAGa,EACNZ,EAAgB,EAATH,EAAaD,EAAO,EAC3BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBY,EAAe,KAATjB,EAAcY,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1DnC,EAAIqB,EAAO,EAAKE,EAAS,EACzBO,EAAIT,EAAO,GAAK,EAChBU,EAAIM,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQH,KAAKM,IAAIH,GAEbI,MAAMJ,IAAUA,IAAUJ,KAC5BR,EAAIgB,MAAMJ,GAAS,EAAI,EACvBb,EAAIG,IAEJH,EAAIU,KAAKQ,MAAMR,KAAKS,IAAIN,GAASH,KAAKU,KAClCP,GAASC,EAAIJ,KAAKC,IAAI,GAAIX,IAAM,IAClCA,IACAc,GAAK,IAGLD,GADEb,EAAII,GAAS,EACNW,EAAKD,EAELC,EAAKL,KAAKC,IAAI,EAAG,EAAIP,IAEpBU,GAAK,IACfd,IACAc,GAAK,GAGHd,EAAII,GAASD,GACfF,EAAI,EACJD,EAAIG,GACKH,EAAII,GAAS,GACtBH,GAAKY,EAAQC,EAAI,GAAKJ,KAAKC,IAAI,EAAGb,GAClCE,GAAQI,IAERH,EAAIY,EAAQH,KAAKC,IAAI,EAAGP,EAAQ,GAAKM,KAAKC,IAAI,EAAGb,GACjDE,EAAI,IAIDF,GAAQ,EAAGH,EAAOC,EAASpB,GAAS,IAAJyB,EAAUzB,GAAK8B,EAAGL,GAAK,IAAKH,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACDI,EAAO,EAAGP,EAAOC,EAASpB,GAAS,IAAJwB,EAAUxB,GAAK8B,EAAGN,GAAK,IAAKE,GAAQ,GAE1EP,EAAOC,EAASpB,EAAI8B,IAAU,IAAJC,CAC5B,CAEA,IAAIc,EAAW,CAAC,EAAEA,SAEdC,EAAYlD,MAAMmD,SAAW,SAAUC,GACzC,MAA6B,kBAAtBH,EAASI,KAAKD,EACvB,EAqCA,SAASE,IACP,OAAOC,EAAOC,oBACV,WACA,UACN,CAEA,SAASC,EAAcC,EAAMzC,GAC3B,GAAIqC,IAAerC,EACjB,MAAM,IAAI0C,WAAW,8BAcvB,OAZIJ,EAAOC,qBAETE,EAAO,IAAI3D,WAAWkB,IACjB2C,UAAYL,EAAOM,WAGX,OAATH,IACFA,EAAO,IAAIH,EAAOtC,IAEpByC,EAAKzC,OAASA,GAGTyC,CACT,CAYA,SAASH,EAAQO,EAAKC,EAAkB9C,GACtC,KAAKsC,EAAOC,qBAAyBQ,gBAAgBT,GACnD,OAAO,IAAIA,EAAOO,EAAKC,EAAkB9C,GAI3C,GAAmB,iBAAR6C,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIE,MACR,qEAGJ,OAAOC,EAAYF,KAAMF,EAC3B,CACA,OAAOK,EAAKH,KAAMF,EAAKC,EAAkB9C,EAC3C,CAUA,SAASkD,EAAMT,EAAMjB,EAAOsB,EAAkB9C,GAC5C,GAAqB,iBAAVwB,EACT,MAAM,IAAI2B,UAAU,yCAGtB,MAA2B,oBAAhBC,aAA+B5B,aAAiB4B,YAuH7D,SAA0BX,EAAMY,EAAOC,EAAYtD,GAGjD,GAFAqD,EAAME,WAEFD,EAAa,GAAKD,EAAME,WAAaD,EACvC,MAAM,IAAIZ,WAAW,6BAGvB,GAAIW,EAAME,WAAaD,GAActD,GAAU,GAC7C,MAAM,IAAI0C,WAAW,6BAIrBW,OADiBG,IAAfF,QAAuCE,IAAXxD,EACtB,IAAIlB,WAAWuE,QACHG,IAAXxD,EACD,IAAIlB,WAAWuE,EAAOC,GAEtB,IAAIxE,WAAWuE,EAAOC,EAAYtD,GAGxCsC,EAAOC,qBAETE,EAAOY,GACFV,UAAYL,EAAOM,UAGxBH,EAAOgB,EAAchB,EAAMY,GAE7B,OAAOZ,CACT,CAlJWiB,CAAgBjB,EAAMjB,EAAOsB,EAAkB9C,GAGnC,iBAAVwB,EAkFb,SAAqBiB,EAAMkB,EAAQC,GACT,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKtB,EAAOuB,WAAWD,GACrB,MAAM,IAAIT,UAAU,8CAGtB,IAAInD,EAAwC,EAA/BuD,EAAWI,EAAQC,GAChCnB,EAAOD,EAAaC,EAAMzC,GAE1B,IAAI8D,EAASrB,EAAKlB,MAAMoC,EAAQC,GAE5BE,IAAW9D,IAIbyC,EAAOA,EAAKsB,MAAM,EAAGD,IAGvB,OAAOrB,CACT,CAvGWuB,CAAWvB,EAAMjB,EAAOsB,GAgJnC,SAAqBL,EAAMwB,GACzB,GAAIC,EAAiBD,GAAM,CACzB,IAAIlE,EAA4B,EAAtBoE,EAAQF,EAAIjE,QAGtB,OAAoB,KAFpByC,EAAOD,EAAaC,EAAM1C,IAEjBC,QAITiE,EAAIG,KAAK3B,EAAM,EAAG,EAAG1C,GAHZ0C,CAKX,CAEA,GAAIwB,EAAK,CACP,GAA4B,oBAAhBb,aACRa,EAAI3D,kBAAkB8C,aAAgB,WAAYa,EACpD,MAA0B,iBAAfA,EAAIjE,SAy8CLqE,EAz8CkCJ,EAAIjE,SA08CrCqE,EAz8CF7B,EAAaC,EAAM,GAErBgB,EAAchB,EAAMwB,GAG7B,GAAiB,WAAbA,EAAIK,MAAqBrC,EAAUgC,EAAIM,MACzC,OAAOd,EAAchB,EAAMwB,EAAIM,KAEnC,CAg8CF,IAAgBF,EA97Cd,MAAM,IAAIlB,UAAU,qFACtB,CAzKSqB,CAAW/B,EAAMjB,EAC1B,CAqBA,SAASiD,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIvB,UAAU,oCACf,GAAIuB,EAAO,EAChB,MAAM,IAAIhC,WAAW,uCAEzB,CA0BA,SAASO,EAAaR,EAAMiC,GAG1B,GAFAD,EAAWC,GACXjC,EAAOD,EAAaC,EAAMiC,EAAO,EAAI,EAAoB,EAAhBP,EAAQO,KAC5CpC,EAAOC,oBACV,IAAK,IAAIpD,EAAI,EAAGA,EAAIuF,IAAQvF,EAC1BsD,EAAKtD,GAAK,EAGd,OAAOsD,CACT,CAuCA,SAASgB,EAAehB,EAAMY,GAC5B,IAAIrD,EAASqD,EAAMrD,OAAS,EAAI,EAA4B,EAAxBmE,EAAQd,EAAMrD,QAClDyC,EAAOD,EAAaC,EAAMzC,GAC1B,IAAK,IAAIb,EAAI,EAAGA,EAAIa,EAAQb,GAAK,EAC/BsD,EAAKtD,GAAgB,IAAXkE,EAAMlE,GAElB,OAAOsD,CACT,CA8DA,SAAS0B,EAASnE,GAGhB,GAAIA,GAAUqC,IACZ,MAAM,IAAIK,WAAW,0DACaL,IAAaL,SAAS,IAAM,UAEhE,OAAgB,EAAThC,CACT,CAEA,SAASkE,EAAkBS,GACzB,QAAe,MAALA,IAAaA,EAAEC,UAC3B,CA0EA,SAASrB,EAAYI,EAAQC,GAC3B,GAAIM,EAAiBP,GACnB,OAAOA,EAAO3D,OAEhB,GAA2B,oBAAhBoD,aAA6D,mBAAvBA,YAAYyB,SACxDzB,YAAYyB,OAAOlB,IAAWA,aAAkBP,aACnD,OAAOO,EAAOJ,WAEM,iBAAXI,IACTA,EAAS,GAAKA,GAGhB,IAAI5D,EAAM4D,EAAO3D,OACjB,GAAY,IAARD,EAAW,OAAO,EAItB,IADA,IAAI+E,GAAc,IAEhB,OAAQlB,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO7D,EACT,IAAK,OACL,IAAK,QACL,UAAKyD,EACH,OAAOuB,EAAYpB,GAAQ3D,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAAND,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOiF,EAAcrB,GAAQ3D,OAC/B,QACE,GAAI8E,EAAa,OAAOC,EAAYpB,GAAQ3D,OAC5C4D,GAAY,GAAKA,GAAUqB,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAActB,EAAUrE,EAAOC,GACtC,IAAIsF,GAAc,EAclB,SALctB,IAAVjE,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQwD,KAAK/C,OACf,MAAO,GAOT,SAJYwD,IAARhE,GAAqBA,EAAMuD,KAAK/C,UAClCR,EAAMuD,KAAK/C,QAGTR,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKqE,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOuB,EAASpC,KAAMxD,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAO4F,EAAUrC,KAAMxD,EAAOC,GAEhC,IAAK,QACH,OAAO6F,EAAWtC,KAAMxD,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAO8F,EAAYvC,KAAMxD,EAAOC,GAElC,IAAK,SACH,OAAO+F,EAAYxC,KAAMxD,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOgG,EAAazC,KAAMxD,EAAOC,GAEnC,QACE,GAAIsF,EAAa,MAAM,IAAI3B,UAAU,qBAAuBS,GAC5DA,GAAYA,EAAW,IAAIqB,cAC3BH,GAAc,EAGtB,CAMA,SAASW,EAAMd,EAAGe,EAAG9E,GACnB,IAAIzB,EAAIwF,EAAEe,GACVf,EAAEe,GAAKf,EAAE/D,GACT+D,EAAE/D,GAAKzB,CACT,CAkIA,SAASwG,EAAsBrF,EAAQ+D,EAAKf,EAAYM,EAAUgC,GAEhE,GAAsB,IAAlBtF,EAAON,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfsD,GACTM,EAAWN,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACV1B,MAAM0B,KAERA,EAAasC,EAAM,EAAKtF,EAAON,OAAS,GAItCsD,EAAa,IAAGA,EAAahD,EAAON,OAASsD,GAC7CA,GAAchD,EAAON,OAAQ,CAC/B,GAAI4F,EAAK,OAAQ,EACZtC,EAAahD,EAAON,OAAS,CACpC,MAAO,GAAIsD,EAAa,EAAG,CACzB,IAAIsC,EACC,OAAQ,EADJtC,EAAa,CAExB,CAQA,GALmB,iBAARe,IACTA,EAAM/B,EAAOY,KAAKmB,EAAKT,IAIrBM,EAAiBG,GAEnB,OAAmB,IAAfA,EAAIrE,QACE,EAEH6F,EAAavF,EAAQ+D,EAAKf,EAAYM,EAAUgC,GAClD,GAAmB,iBAARvB,EAEhB,OADAA,GAAY,IACR/B,EAAOC,qBACiC,mBAAjCzD,WAAW8D,UAAUkD,QAC1BF,EACK9G,WAAW8D,UAAUkD,QAAQ1D,KAAK9B,EAAQ+D,EAAKf,GAE/CxE,WAAW8D,UAAUmD,YAAY3D,KAAK9B,EAAQ+D,EAAKf,GAGvDuC,EAAavF,EAAQ,CAAE+D,GAAOf,EAAYM,EAAUgC,GAG7D,MAAM,IAAIzC,UAAU,uCACtB,CAEA,SAAS0C,EAAc1D,EAAKkC,EAAKf,EAAYM,EAAUgC,GACrD,IA0BIzG,EA1BA6G,EAAY,EACZC,EAAY9D,EAAInC,OAChBkG,EAAY7B,EAAIrE,OAEpB,QAAiBwD,IAAbI,IAEe,UADjBA,EAAWuC,OAAOvC,GAAUqB,gBACY,UAAbrB,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIzB,EAAInC,OAAS,GAAKqE,EAAIrE,OAAS,EACjC,OAAQ,EAEVgG,EAAY,EACZC,GAAa,EACbC,GAAa,EACb5C,GAAc,CAChB,CAGF,SAAS8C,EAAMC,EAAKlH,GAClB,OAAkB,IAAd6G,EACKK,EAAIlH,GAEJkH,EAAIC,aAAanH,EAAI6G,EAEhC,CAGA,GAAIJ,EAAK,CACP,IAAIW,GAAc,EAClB,IAAKpH,EAAImE,EAAYnE,EAAI8G,EAAW9G,IAClC,GAAIiH,EAAKjE,EAAKhD,KAAOiH,EAAK/B,GAAqB,IAAhBkC,EAAoB,EAAIpH,EAAIoH,IAEzD,IADoB,IAAhBA,IAAmBA,EAAapH,GAChCA,EAAIoH,EAAa,IAAML,EAAW,OAAOK,EAAaP,OAEtC,IAAhBO,IAAmBpH,GAAKA,EAAIoH,GAChCA,GAAc,CAGpB,MAEE,IADIjD,EAAa4C,EAAYD,IAAW3C,EAAa2C,EAAYC,GAC5D/G,EAAImE,EAAYnE,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIqH,GAAQ,EACHC,EAAI,EAAGA,EAAIP,EAAWO,IAC7B,GAAIL,EAAKjE,EAAKhD,EAAIsH,KAAOL,EAAK/B,EAAKoC,GAAI,CACrCD,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAOrH,CACpB,CAGF,OAAQ,CACV,CAcA,SAASuH,EAAUL,EAAK1C,EAAQpD,EAAQP,GACtCO,EAASoG,OAAOpG,IAAW,EAC3B,IAAIqG,EAAYP,EAAIrG,OAASO,EACxBP,GAGHA,EAAS2G,OAAO3G,IACH4G,IACX5G,EAAS4G,GAJX5G,EAAS4G,EASX,IAAIC,EAASlD,EAAO3D,OACpB,GAAI6G,EAAS,GAAM,EAAG,MAAM,IAAI1D,UAAU,sBAEtCnD,EAAS6G,EAAS,IACpB7G,EAAS6G,EAAS,GAEpB,IAAK,IAAI1H,EAAI,EAAGA,EAAIa,IAAUb,EAAG,CAC/B,IAAI2H,EAASC,SAASpD,EAAOqD,OAAW,EAAJ7H,EAAO,GAAI,IAC/C,GAAIyC,MAAMkF,GAAS,OAAO3H,EAC1BkH,EAAI9F,EAASpB,GAAK2H,CACpB,CACA,OAAO3H,CACT,CAEA,SAAS8H,EAAWZ,EAAK1C,EAAQpD,EAAQP,GACvC,OAAOkH,EAAWnC,EAAYpB,EAAQ0C,EAAIrG,OAASO,GAAS8F,EAAK9F,EAAQP,EAC3E,CAEA,SAASmH,EAAYd,EAAK1C,EAAQpD,EAAQP,GACxC,OAAOkH,EAq6BT,SAAuBE,GAErB,IADA,IAAIC,EAAY,GACPlI,EAAI,EAAGA,EAAIiI,EAAIpH,SAAUb,EAEhCkI,EAAUzH,KAAyB,IAApBwH,EAAIhI,WAAWD,IAEhC,OAAOkI,CACT,CA56BoBC,CAAa3D,GAAS0C,EAAK9F,EAAQP,EACvD,CAEA,SAASuH,EAAalB,EAAK1C,EAAQpD,EAAQP,GACzC,OAAOmH,EAAWd,EAAK1C,EAAQpD,EAAQP,EACzC,CAEA,SAASwH,EAAanB,EAAK1C,EAAQpD,EAAQP,GACzC,OAAOkH,EAAWlC,EAAcrB,GAAS0C,EAAK9F,EAAQP,EACxD,CAEA,SAASyH,EAAWpB,EAAK1C,EAAQpD,EAAQP,GACvC,OAAOkH,EAk6BT,SAAyBE,EAAKM,GAG5B,IAFA,IAAIjG,EAAGkG,EAAIC,EACPP,EAAY,GACPlI,EAAI,EAAGA,EAAIiI,EAAIpH,WACjB0H,GAAS,GAAK,KADavI,EAIhCwI,GADAlG,EAAI2F,EAAIhI,WAAWD,KACT,EACVyI,EAAKnG,EAAI,IACT4F,EAAUzH,KAAKgI,GACfP,EAAUzH,KAAK+H,GAGjB,OAAON,CACT,CAh7BoBQ,CAAelE,EAAQ0C,EAAIrG,OAASO,GAAS8F,EAAK9F,EAAQP,EAC9E,CAiFA,SAASuF,EAAac,EAAK9G,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQ6G,EAAIrG,OACtBF,EAAcuG,GAEdvG,EAAcuG,EAAItC,MAAMxE,EAAOC,GAE1C,CAEA,SAAS4F,EAAWiB,EAAK9G,EAAOC,GAC9BA,EAAM6B,KAAKyG,IAAIzB,EAAIrG,OAAQR,GAI3B,IAHA,IAAIuI,EAAM,GAEN5I,EAAII,EACDJ,EAAIK,GAAK,CACd,IAQMwI,EAAYC,EAAWC,EAAYC,EARrCC,EAAY/B,EAAIlH,GAChBkJ,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,EAEJ,GAAIjJ,EAAImJ,GAAoB9I,EAG1B,OAAQ8I,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,MAAV,KADlBJ,EAAa3B,EAAIlH,EAAI,OAEnBgJ,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa3B,EAAIlH,EAAI,GACrB8I,EAAY5B,EAAIlH,EAAI,GACQ,MAAV,IAAb6I,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa3B,EAAIlH,EAAI,GACrB8I,EAAY5B,EAAIlH,EAAI,GACpB+I,EAAa7B,EAAIlH,EAAI,GACO,MAAV,IAAb6I,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAInI,KAAKyI,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAInI,KAAKyI,GACTlJ,GAAKmJ,CACP,CAEA,OAQF,SAAgCC,GAC9B,IAAIxI,EAAMwI,EAAWvI,OACrB,GAAID,GAAOyI,EACT,OAAOrC,OAAOsC,aAAaC,MAAMvC,OAAQoC,GAI3C,IAAIR,EAAM,GACN5I,EAAI,EACR,KAAOA,EAAIY,GACTgI,GAAO5B,OAAOsC,aAAaC,MACzBvC,OACAoC,EAAWxE,MAAM5E,EAAGA,GAAKqJ,IAG7B,OAAOT,CACT,CAxBSY,CAAsBZ,EAC/B,CA15BAzF,EAAOC,yBAAuDiB,IAAjCjF,EAASgE,qBAClChE,EAASgE,oBAMbF,IAsDAC,EAAOsG,SAAW,KAGlBtG,EAAOuG,SAAW,SAAU1G,GAE1B,OADAA,EAAIQ,UAAYL,EAAOM,UAChBT,CACT,EA0BAG,EAAOY,KAAO,SAAU1B,EAAOsB,EAAkB9C,GAC/C,OAAOkD,EAAK,KAAM1B,EAAOsB,EAAkB9C,EAC7C,EAEIsC,EAAOC,sBACTD,EAAOM,UAAUD,UAAY7D,WAAW8D,UACxCN,EAAOK,UAAY7D,WACG,oBAAXgK,QAA0BA,OAAOC,SACxCzG,EAAOwG,OAAOC,UA+BpBzG,EAAO0G,MAAQ,SAAUtE,EAAMuE,EAAMrF,GACnC,OArBF,SAAgBnB,EAAMiC,EAAMuE,EAAMrF,GAEhC,OADAa,EAAWC,GACPA,GAAQ,EACHlC,EAAaC,EAAMiC,QAEflB,IAATyF,EAIyB,iBAAbrF,EACVpB,EAAaC,EAAMiC,GAAMuE,KAAKA,EAAMrF,GACpCpB,EAAaC,EAAMiC,GAAMuE,KAAKA,GAE7BzG,EAAaC,EAAMiC,EAC5B,CAOSsE,CAAM,KAAMtE,EAAMuE,EAAMrF,EACjC,EAgBAtB,EAAOW,YAAc,SAAUyB,GAC7B,OAAOzB,EAAY,KAAMyB,EAC3B,EAIApC,EAAO4G,gBAAkB,SAAUxE,GACjC,OAAOzB,EAAY,KAAMyB,EAC3B,EAwGApC,EAAO6G,SAAWC,GAKlB9G,EAAO+G,QAAU,SAAkBC,EAAG3E,GACpC,IAAKT,EAAiBoF,KAAOpF,EAAiBS,GAC5C,MAAM,IAAIxB,UAAU,6BAGtB,GAAImG,IAAM3E,EAAG,OAAO,EAKpB,IAHA,IAAI4E,EAAID,EAAEtJ,OACNwJ,EAAI7E,EAAE3E,OAEDb,EAAI,EAAGY,EAAMsB,KAAKyG,IAAIyB,EAAGC,GAAIrK,EAAIY,IAAOZ,EAC/C,GAAImK,EAAEnK,KAAOwF,EAAExF,GAAI,CACjBoK,EAAID,EAAEnK,GACNqK,EAAI7E,EAAExF,GACN,KACF,CAGF,OAAIoK,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EAEAjH,EAAOuB,WAAa,SAAqBD,GACvC,OAAQuC,OAAOvC,GAAUqB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEA3C,EAAOmH,OAAS,SAAiBC,EAAM1J,GACrC,IAAKiC,EAAUyH,GACb,MAAM,IAAIvG,UAAU,+CAGtB,GAAoB,IAAhBuG,EAAK1J,OACP,OAAOsC,EAAO0G,MAAM,GAGtB,IAAI7J,EACJ,QAAeqE,IAAXxD,EAEF,IADAA,EAAS,EACJb,EAAI,EAAGA,EAAIuK,EAAK1J,SAAUb,EAC7Ba,GAAU0J,EAAKvK,GAAGa,OAItB,IAAIM,EAASgC,EAAOW,YAAYjD,GAC5B2J,EAAM,EACV,IAAKxK,EAAI,EAAGA,EAAIuK,EAAK1J,SAAUb,EAAG,CAChC,IAAIkH,EAAMqD,EAAKvK,GACf,IAAK+E,EAAiBmC,GACpB,MAAM,IAAIlD,UAAU,+CAEtBkD,EAAIjC,KAAK9D,EAAQqJ,GACjBA,GAAOtD,EAAIrG,MACb,CACA,OAAOM,CACT,EA6CAgC,EAAOiB,WAAaA,EA0EpBjB,EAAOM,UAAUgC,WAAY,EAQ7BtC,EAAOM,UAAUgH,OAAS,WACxB,IAAI7J,EAAMgD,KAAK/C,OACf,GAAID,EAAM,GAAM,EACd,MAAM,IAAI2C,WAAW,6CAEvB,IAAK,IAAIvD,EAAI,EAAGA,EAAIY,EAAKZ,GAAK,EAC5BsG,EAAK1C,KAAM5D,EAAGA,EAAI,GAEpB,OAAO4D,IACT,EAEAT,EAAOM,UAAUiH,OAAS,WACxB,IAAI9J,EAAMgD,KAAK/C,OACf,GAAID,EAAM,GAAM,EACd,MAAM,IAAI2C,WAAW,6CAEvB,IAAK,IAAIvD,EAAI,EAAGA,EAAIY,EAAKZ,GAAK,EAC5BsG,EAAK1C,KAAM5D,EAAGA,EAAI,GAClBsG,EAAK1C,KAAM5D,EAAI,EAAGA,EAAI,GAExB,OAAO4D,IACT,EAEAT,EAAOM,UAAUkH,OAAS,WACxB,IAAI/J,EAAMgD,KAAK/C,OACf,GAAID,EAAM,GAAM,EACd,MAAM,IAAI2C,WAAW,6CAEvB,IAAK,IAAIvD,EAAI,EAAGA,EAAIY,EAAKZ,GAAK,EAC5BsG,EAAK1C,KAAM5D,EAAGA,EAAI,GAClBsG,EAAK1C,KAAM5D,EAAI,EAAGA,EAAI,GACtBsG,EAAK1C,KAAM5D,EAAI,EAAGA,EAAI,GACtBsG,EAAK1C,KAAM5D,EAAI,EAAGA,EAAI,GAExB,OAAO4D,IACT,EAEAT,EAAOM,UAAUZ,SAAW,WAC1B,IAAIhC,EAAuB,EAAd+C,KAAK/C,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArB+J,UAAU/J,OAAqBoF,EAAUrC,KAAM,EAAG/C,GAC/CkF,EAAawD,MAAM3F,KAAMgH,UAClC,EAEAzH,EAAOM,UAAUoH,OAAS,SAAiBrF,GACzC,IAAKT,EAAiBS,GAAI,MAAM,IAAIxB,UAAU,6BAC9C,OAAIJ,OAAS4B,GACsB,IAA5BrC,EAAO+G,QAAQtG,KAAM4B,EAC9B,EAEArC,EAAOM,UAAUqH,QAAU,WACzB,IAAI7C,EAAM,GAMV,OAJIrE,KAAK/C,OAAS,IAChBoH,EAAMrE,KAAKf,SAAS,MAAO,EAhiBP,IAgiBekI,MAAM,SAASrK,KAAK,KACnDkD,KAAK/C,OAjiBW,KAiiBGoH,GAAO,UAEzB,WAAaA,EAAM,GAC5B,EAEA9E,EAAOM,UAAUyG,QAAU,SAAkBc,EAAQ5K,EAAOC,EAAK4K,EAAWC,GAC1E,IAAKnG,EAAiBiG,GACpB,MAAM,IAAIhH,UAAU,6BAgBtB,QAbcK,IAAVjE,IACFA,EAAQ,QAEEiE,IAARhE,IACFA,EAAM2K,EAASA,EAAOnK,OAAS,QAEfwD,IAAd4G,IACFA,EAAY,QAEE5G,IAAZ6G,IACFA,EAAUtH,KAAK/C,QAGbT,EAAQ,GAAKC,EAAM2K,EAAOnK,QAAUoK,EAAY,GAAKC,EAAUtH,KAAK/C,OACtE,MAAM,IAAI0C,WAAW,sBAGvB,GAAI0H,GAAaC,GAAW9K,GAASC,EACnC,OAAO,EAET,GAAI4K,GAAaC,EACf,OAAQ,EAEV,GAAI9K,GAASC,EACX,OAAO,EAQT,GAAIuD,OAASoH,EAAQ,OAAO,EAS5B,IAPA,IAAIZ,GAJJc,KAAa,IADbD,KAAe,GAMXZ,GAPJhK,KAAS,IADTD,KAAW,GASPQ,EAAMsB,KAAKyG,IAAIyB,EAAGC,GAElBc,EAAWvH,KAAKgB,MAAMqG,EAAWC,GACjCE,EAAaJ,EAAOpG,MAAMxE,EAAOC,GAE5BL,EAAI,EAAGA,EAAIY,IAAOZ,EACzB,GAAImL,EAASnL,KAAOoL,EAAWpL,GAAI,CACjCoK,EAAIe,EAASnL,GACbqK,EAAIe,EAAWpL,GACf,KACF,CAGF,OAAIoK,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EA4HAjH,EAAOM,UAAU4H,SAAW,SAAmBnG,EAAKf,EAAYM,GAC9D,OAAoD,IAA7Cb,KAAK+C,QAAQzB,EAAKf,EAAYM,EACvC,EAEAtB,EAAOM,UAAUkD,QAAU,SAAkBzB,EAAKf,EAAYM,GAC5D,OAAO+B,EAAqB5C,KAAMsB,EAAKf,EAAYM,GAAU,EAC/D,EAEAtB,EAAOM,UAAUmD,YAAc,SAAsB1B,EAAKf,EAAYM,GACpE,OAAO+B,EAAqB5C,KAAMsB,EAAKf,EAAYM,GAAU,EAC/D,EAiDAtB,EAAOM,UAAUrB,MAAQ,SAAgBoC,EAAQpD,EAAQP,EAAQ4D,GAE/D,QAAeJ,IAAXjD,EACFqD,EAAW,OACX5D,EAAS+C,KAAK/C,OACdO,EAAS,OAEJ,QAAeiD,IAAXxD,GAA0C,iBAAXO,EACxCqD,EAAWrD,EACXP,EAAS+C,KAAK/C,OACdO,EAAS,MAEJ,KAAIkK,SAASlK,GAWlB,MAAM,IAAIyC,MACR,2EAXFzC,GAAkB,EACdkK,SAASzK,IACXA,GAAkB,OACDwD,IAAbI,IAAwBA,EAAW,UAEvCA,EAAW5D,EACXA,OAASwD,EAOb,CAEA,IAAIoD,EAAY7D,KAAK/C,OAASO,EAG9B,SAFeiD,IAAXxD,GAAwBA,EAAS4G,KAAW5G,EAAS4G,GAEpDjD,EAAO3D,OAAS,IAAMA,EAAS,GAAKO,EAAS,IAAOA,EAASwC,KAAK/C,OACrE,MAAM,IAAI0C,WAAW,0CAGlBkB,IAAUA,EAAW,QAG1B,IADA,IAAIkB,GAAc,IAEhB,OAAQlB,GACN,IAAK,MACH,OAAO8C,EAAS3D,KAAMY,EAAQpD,EAAQP,GAExC,IAAK,OACL,IAAK,QACH,OAAOiH,EAAUlE,KAAMY,EAAQpD,EAAQP,GAEzC,IAAK,QACH,OAAOmH,EAAWpE,KAAMY,EAAQpD,EAAQP,GAE1C,IAAK,SACL,IAAK,SACH,OAAOuH,EAAYxE,KAAMY,EAAQpD,EAAQP,GAE3C,IAAK,SAEH,OAAOwH,EAAYzE,KAAMY,EAAQpD,EAAQP,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOyH,EAAU1E,KAAMY,EAAQpD,EAAQP,GAEzC,QACE,GAAI8E,EAAa,MAAM,IAAI3B,UAAU,qBAAuBS,GAC5DA,GAAY,GAAKA,GAAUqB,cAC3BH,GAAc,EAGtB,EAEAxC,EAAOM,UAAU8H,OAAS,WACxB,MAAO,CACLpG,KAAM,SACNC,KAAMxF,MAAM6D,UAAUmB,MAAM3B,KAAKW,KAAK4H,MAAQ5H,KAAM,GAExD,EAsFA,IAAIyF,EAAuB,KAoB3B,SAASnD,EAAYgB,EAAK9G,EAAOC,GAC/B,IAAIoL,EAAM,GACVpL,EAAM6B,KAAKyG,IAAIzB,EAAIrG,OAAQR,GAE3B,IAAK,IAAIL,EAAII,EAAOJ,EAAIK,IAAOL,EAC7ByL,GAAOzE,OAAOsC,aAAsB,IAATpC,EAAIlH,IAEjC,OAAOyL,CACT,CAEA,SAAStF,EAAae,EAAK9G,EAAOC,GAChC,IAAIoL,EAAM,GACVpL,EAAM6B,KAAKyG,IAAIzB,EAAIrG,OAAQR,GAE3B,IAAK,IAAIL,EAAII,EAAOJ,EAAIK,IAAOL,EAC7ByL,GAAOzE,OAAOsC,aAAapC,EAAIlH,IAEjC,OAAOyL,CACT,CAEA,SAASzF,EAAUkB,EAAK9G,EAAOC,GAC7B,IAAIO,EAAMsG,EAAIrG,SAETT,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMO,KAAKP,EAAMO,GAGxC,IADA,IAAI8K,EAAM,GACD1L,EAAII,EAAOJ,EAAIK,IAAOL,EAC7B0L,GAAOC,EAAMzE,EAAIlH,IAEnB,OAAO0L,CACT,CAEA,SAASrF,EAAca,EAAK9G,EAAOC,GAGjC,IAFA,IAAIuL,EAAQ1E,EAAItC,MAAMxE,EAAOC,GACzBuI,EAAM,GACD5I,EAAI,EAAGA,EAAI4L,EAAM/K,OAAQb,GAAK,EACrC4I,GAAO5B,OAAOsC,aAAasC,EAAM5L,GAAoB,IAAf4L,EAAM5L,EAAI,IAElD,OAAO4I,CACT,CAyCA,SAASiD,EAAazK,EAAQ0K,EAAKjL,GACjC,GAAKO,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAImC,WAAW,sBAC3D,GAAInC,EAAS0K,EAAMjL,EAAQ,MAAM,IAAI0C,WAAW,wCAClD,CA8JA,SAASwI,EAAU7E,EAAK7E,EAAOjB,EAAQ0K,EAAKE,EAAKrD,GAC/C,IAAK5D,EAAiBmC,GAAM,MAAM,IAAIlD,UAAU,+CAChD,GAAI3B,EAAQ2J,GAAO3J,EAAQsG,EAAK,MAAM,IAAIpF,WAAW,qCACrD,GAAInC,EAAS0K,EAAM5E,EAAIrG,OAAQ,MAAM,IAAI0C,WAAW,qBACtD,CAiDA,SAAS0I,EAAmB/E,EAAK7E,EAAOjB,EAAQ8K,GAC1C7J,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GACxC,IAAK,IAAIrC,EAAI,EAAGsH,EAAIpF,KAAKyG,IAAIzB,EAAIrG,OAASO,EAAQ,GAAIpB,EAAIsH,IAAKtH,EAC7DkH,EAAI9F,EAASpB,IAAMqC,EAAS,KAAS,GAAK6J,EAAelM,EAAI,EAAIA,MAClC,GAA5BkM,EAAelM,EAAI,EAAIA,EAE9B,CA4BA,SAASmM,EAAmBjF,EAAK7E,EAAOjB,EAAQ8K,GAC1C7J,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,IAAK,IAAIrC,EAAI,EAAGsH,EAAIpF,KAAKyG,IAAIzB,EAAIrG,OAASO,EAAQ,GAAIpB,EAAIsH,IAAKtH,EAC7DkH,EAAI9F,EAASpB,GAAMqC,IAAuC,GAA5B6J,EAAelM,EAAI,EAAIA,GAAU,GAEnE,CAiJA,SAASoM,EAAclF,EAAK7E,EAAOjB,EAAQ0K,EAAKE,EAAKrD,GACnD,GAAIvH,EAAS0K,EAAM5E,EAAIrG,OAAQ,MAAM,IAAI0C,WAAW,sBACpD,GAAInC,EAAS,EAAG,MAAM,IAAImC,WAAW,qBACvC,CAEA,SAAS8I,EAAYnF,EAAK7E,EAAOjB,EAAQ8K,EAAcI,GAKrD,OAJKA,GACHF,EAAalF,EAAK7E,EAAOjB,EAAQ,GAEnCgB,EAAM8E,EAAK7E,EAAOjB,EAAQ8K,EAAc,GAAI,GACrC9K,EAAS,CAClB,CAUA,SAASmL,EAAarF,EAAK7E,EAAOjB,EAAQ8K,EAAcI,GAKtD,OAJKA,GACHF,EAAalF,EAAK7E,EAAOjB,EAAQ,GAEnCgB,EAAM8E,EAAK7E,EAAOjB,EAAQ8K,EAAc,GAAI,GACrC9K,EAAS,CAClB,CAhdA+B,EAAOM,UAAUmB,MAAQ,SAAgBxE,EAAOC,GAC9C,IAoBImM,EApBA5L,EAAMgD,KAAK/C,OAqBf,IApBAT,IAAUA,GAGE,GACVA,GAASQ,GACG,IAAGR,EAAQ,GACdA,EAAQQ,IACjBR,EAAQQ,IANVP,OAAcgE,IAARhE,EAAoBO,IAAQP,GASxB,GACRA,GAAOO,GACG,IAAGP,EAAM,GACVA,EAAMO,IACfP,EAAMO,GAGJP,EAAMD,IAAOC,EAAMD,GAGnB+C,EAAOC,qBACToJ,EAAS5I,KAAK6I,SAASrM,EAAOC,IACvBmD,UAAYL,EAAOM,cACrB,CACL,IAAIiJ,EAAWrM,EAAMD,EACrBoM,EAAS,IAAIrJ,EAAOuJ,OAAUrI,GAC9B,IAAK,IAAIrE,EAAI,EAAGA,EAAI0M,IAAY1M,EAC9BwM,EAAOxM,GAAK4D,KAAK5D,EAAII,EAEzB,CAEA,OAAOoM,CACT,EAUArJ,EAAOM,UAAUkJ,WAAa,SAAqBvL,EAAQgD,EAAYkI,GACrElL,GAAkB,EAClBgD,GAA0B,EACrBkI,GAAUT,EAAYzK,EAAQgD,EAAYR,KAAK/C,QAKpD,IAHA,IAAIqE,EAAMtB,KAAKxC,GACXwL,EAAM,EACN5M,EAAI,IACCA,EAAIoE,IAAewI,GAAO,MACjC1H,GAAOtB,KAAKxC,EAASpB,GAAK4M,EAG5B,OAAO1H,CACT,EAEA/B,EAAOM,UAAUoJ,WAAa,SAAqBzL,EAAQgD,EAAYkI,GACrElL,GAAkB,EAClBgD,GAA0B,EACrBkI,GACHT,EAAYzK,EAAQgD,EAAYR,KAAK/C,QAKvC,IAFA,IAAIqE,EAAMtB,KAAKxC,IAAWgD,GACtBwI,EAAM,EACHxI,EAAa,IAAMwI,GAAO,MAC/B1H,GAAOtB,KAAKxC,IAAWgD,GAAcwI,EAGvC,OAAO1H,CACT,EAEA/B,EAAOM,UAAUqJ,UAAY,SAAoB1L,EAAQkL,GAEvD,OADKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QACpC+C,KAAKxC,EACd,EAEA+B,EAAOM,UAAUsJ,aAAe,SAAuB3L,EAAQkL,GAE7D,OADKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QACpC+C,KAAKxC,GAAWwC,KAAKxC,EAAS,IAAM,CAC7C,EAEA+B,EAAOM,UAAU0D,aAAe,SAAuB/F,EAAQkL,GAE7D,OADKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QACnC+C,KAAKxC,IAAW,EAAKwC,KAAKxC,EAAS,EAC7C,EAEA+B,EAAOM,UAAUuJ,aAAe,SAAuB5L,EAAQkL,GAG7D,OAFKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,SAElC+C,KAAKxC,GACTwC,KAAKxC,EAAS,IAAM,EACpBwC,KAAKxC,EAAS,IAAM,IACD,SAAnBwC,KAAKxC,EAAS,EACrB,EAEA+B,EAAOM,UAAUwJ,aAAe,SAAuB7L,EAAQkL,GAG7D,OAFKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QAEpB,SAAf+C,KAAKxC,IACTwC,KAAKxC,EAAS,IAAM,GACrBwC,KAAKxC,EAAS,IAAM,EACrBwC,KAAKxC,EAAS,GAClB,EAEA+B,EAAOM,UAAUyJ,UAAY,SAAoB9L,EAAQgD,EAAYkI,GACnElL,GAAkB,EAClBgD,GAA0B,EACrBkI,GAAUT,EAAYzK,EAAQgD,EAAYR,KAAK/C,QAKpD,IAHA,IAAIqE,EAAMtB,KAAKxC,GACXwL,EAAM,EACN5M,EAAI,IACCA,EAAIoE,IAAewI,GAAO,MACjC1H,GAAOtB,KAAKxC,EAASpB,GAAK4M,EAM5B,OAFI1H,IAFJ0H,GAAO,OAES1H,GAAOhD,KAAKC,IAAI,EAAG,EAAIiC,IAEhCc,CACT,EAEA/B,EAAOM,UAAU0J,UAAY,SAAoB/L,EAAQgD,EAAYkI,GACnElL,GAAkB,EAClBgD,GAA0B,EACrBkI,GAAUT,EAAYzK,EAAQgD,EAAYR,KAAK/C,QAKpD,IAHA,IAAIb,EAAIoE,EACJwI,EAAM,EACN1H,EAAMtB,KAAKxC,IAAWpB,GACnBA,EAAI,IAAM4M,GAAO,MACtB1H,GAAOtB,KAAKxC,IAAWpB,GAAK4M,EAM9B,OAFI1H,IAFJ0H,GAAO,OAES1H,GAAOhD,KAAKC,IAAI,EAAG,EAAIiC,IAEhCc,CACT,EAEA/B,EAAOM,UAAU2J,SAAW,SAAmBhM,EAAQkL,GAErD,OADKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QACtB,IAAf+C,KAAKxC,IAC0B,GAA5B,IAAOwC,KAAKxC,GAAU,GADKwC,KAAKxC,EAE3C,EAEA+B,EAAOM,UAAU4J,YAAc,SAAsBjM,EAAQkL,GACtDA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QAC3C,IAAIqE,EAAMtB,KAAKxC,GAAWwC,KAAKxC,EAAS,IAAM,EAC9C,OAAc,MAAN8D,EAAsB,WAANA,EAAmBA,CAC7C,EAEA/B,EAAOM,UAAU6J,YAAc,SAAsBlM,EAAQkL,GACtDA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QAC3C,IAAIqE,EAAMtB,KAAKxC,EAAS,GAAMwC,KAAKxC,IAAW,EAC9C,OAAc,MAAN8D,EAAsB,WAANA,EAAmBA,CAC7C,EAEA/B,EAAOM,UAAU8J,YAAc,SAAsBnM,EAAQkL,GAG3D,OAFKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QAEnC+C,KAAKxC,GACVwC,KAAKxC,EAAS,IAAM,EACpBwC,KAAKxC,EAAS,IAAM,GACpBwC,KAAKxC,EAAS,IAAM,EACzB,EAEA+B,EAAOM,UAAU+J,YAAc,SAAsBpM,EAAQkL,GAG3D,OAFKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QAEnC+C,KAAKxC,IAAW,GACrBwC,KAAKxC,EAAS,IAAM,GACpBwC,KAAKxC,EAAS,IAAM,EACpBwC,KAAKxC,EAAS,EACnB,EAEA+B,EAAOM,UAAUgK,YAAc,SAAsBrM,EAAQkL,GAE3D,OADKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QACpCK,EAAO0C,KAAMxC,GAAQ,EAAM,GAAI,EACxC,EAEA+B,EAAOM,UAAUiK,YAAc,SAAsBtM,EAAQkL,GAE3D,OADKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QACpCK,EAAO0C,KAAMxC,GAAQ,EAAO,GAAI,EACzC,EAEA+B,EAAOM,UAAUkK,aAAe,SAAuBvM,EAAQkL,GAE7D,OADKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QACpCK,EAAO0C,KAAMxC,GAAQ,EAAM,GAAI,EACxC,EAEA+B,EAAOM,UAAUmK,aAAe,SAAuBxM,EAAQkL,GAE7D,OADKA,GAAUT,EAAYzK,EAAQ,EAAGwC,KAAK/C,QACpCK,EAAO0C,KAAMxC,GAAQ,EAAO,GAAI,EACzC,EAQA+B,EAAOM,UAAUoK,YAAc,SAAsBxL,EAAOjB,EAAQgD,EAAYkI,IAC9EjK,GAASA,EACTjB,GAAkB,EAClBgD,GAA0B,EACrBkI,IAEHP,EAASnI,KAAMvB,EAAOjB,EAAQgD,EADflC,KAAKC,IAAI,EAAG,EAAIiC,GAAc,EACO,GAGtD,IAAIwI,EAAM,EACN5M,EAAI,EAER,IADA4D,KAAKxC,GAAkB,IAARiB,IACNrC,EAAIoE,IAAewI,GAAO,MACjChJ,KAAKxC,EAASpB,GAAMqC,EAAQuK,EAAO,IAGrC,OAAOxL,EAASgD,CAClB,EAEAjB,EAAOM,UAAUqK,YAAc,SAAsBzL,EAAOjB,EAAQgD,EAAYkI,IAC9EjK,GAASA,EACTjB,GAAkB,EAClBgD,GAA0B,EACrBkI,IAEHP,EAASnI,KAAMvB,EAAOjB,EAAQgD,EADflC,KAAKC,IAAI,EAAG,EAAIiC,GAAc,EACO,GAGtD,IAAIpE,EAAIoE,EAAa,EACjBwI,EAAM,EAEV,IADAhJ,KAAKxC,EAASpB,GAAa,IAARqC,IACVrC,GAAK,IAAM4M,GAAO,MACzBhJ,KAAKxC,EAASpB,GAAMqC,EAAQuK,EAAO,IAGrC,OAAOxL,EAASgD,CAClB,EAEAjB,EAAOM,UAAUsK,WAAa,SAAqB1L,EAAOjB,EAAQkL,GAMhE,OALAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,IAAM,GACjD+B,EAAOC,sBAAqBf,EAAQH,KAAKQ,MAAML,IACpDuB,KAAKxC,GAAmB,IAARiB,EACTjB,EAAS,CAClB,EAUA+B,EAAOM,UAAUuK,cAAgB,SAAwB3L,EAAOjB,EAAQkL,GAUtE,OATAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,MAAQ,GACpD+B,EAAOC,qBACTQ,KAAKxC,GAAmB,IAARiB,EAChBuB,KAAKxC,EAAS,GAAMiB,IAAU,GAE9B4J,EAAkBrI,KAAMvB,EAAOjB,GAAQ,GAElCA,EAAS,CAClB,EAEA+B,EAAOM,UAAUwK,cAAgB,SAAwB5L,EAAOjB,EAAQkL,GAUtE,OATAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,MAAQ,GACpD+B,EAAOC,qBACTQ,KAAKxC,GAAWiB,IAAU,EAC1BuB,KAAKxC,EAAS,GAAc,IAARiB,GAEpB4J,EAAkBrI,KAAMvB,EAAOjB,GAAQ,GAElCA,EAAS,CAClB,EASA+B,EAAOM,UAAUyK,cAAgB,SAAwB7L,EAAOjB,EAAQkL,GAYtE,OAXAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,WAAY,GACxD+B,EAAOC,qBACTQ,KAAKxC,EAAS,GAAMiB,IAAU,GAC9BuB,KAAKxC,EAAS,GAAMiB,IAAU,GAC9BuB,KAAKxC,EAAS,GAAMiB,IAAU,EAC9BuB,KAAKxC,GAAmB,IAARiB,GAEhB8J,EAAkBvI,KAAMvB,EAAOjB,GAAQ,GAElCA,EAAS,CAClB,EAEA+B,EAAOM,UAAU0K,cAAgB,SAAwB9L,EAAOjB,EAAQkL,GAYtE,OAXAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,WAAY,GACxD+B,EAAOC,qBACTQ,KAAKxC,GAAWiB,IAAU,GAC1BuB,KAAKxC,EAAS,GAAMiB,IAAU,GAC9BuB,KAAKxC,EAAS,GAAMiB,IAAU,EAC9BuB,KAAKxC,EAAS,GAAc,IAARiB,GAEpB8J,EAAkBvI,KAAMvB,EAAOjB,GAAQ,GAElCA,EAAS,CAClB,EAEA+B,EAAOM,UAAU2K,WAAa,SAAqB/L,EAAOjB,EAAQgD,EAAYkI,GAG5E,GAFAjK,GAASA,EACTjB,GAAkB,GACbkL,EAAU,CACb,IAAI+B,EAAQnM,KAAKC,IAAI,EAAG,EAAIiC,EAAa,GAEzC2H,EAASnI,KAAMvB,EAAOjB,EAAQgD,EAAYiK,EAAQ,GAAIA,EACxD,CAEA,IAAIrO,EAAI,EACJ4M,EAAM,EACN0B,EAAM,EAEV,IADA1K,KAAKxC,GAAkB,IAARiB,IACNrC,EAAIoE,IAAewI,GAAO,MAC7BvK,EAAQ,GAAa,IAARiM,GAAsC,IAAzB1K,KAAKxC,EAASpB,EAAI,KAC9CsO,EAAM,GAER1K,KAAKxC,EAASpB,IAAOqC,EAAQuK,EAAQ,GAAK0B,EAAM,IAGlD,OAAOlN,EAASgD,CAClB,EAEAjB,EAAOM,UAAU8K,WAAa,SAAqBlM,EAAOjB,EAAQgD,EAAYkI,GAG5E,GAFAjK,GAASA,EACTjB,GAAkB,GACbkL,EAAU,CACb,IAAI+B,EAAQnM,KAAKC,IAAI,EAAG,EAAIiC,EAAa,GAEzC2H,EAASnI,KAAMvB,EAAOjB,EAAQgD,EAAYiK,EAAQ,GAAIA,EACxD,CAEA,IAAIrO,EAAIoE,EAAa,EACjBwI,EAAM,EACN0B,EAAM,EAEV,IADA1K,KAAKxC,EAASpB,GAAa,IAARqC,IACVrC,GAAK,IAAM4M,GAAO,MACrBvK,EAAQ,GAAa,IAARiM,GAAsC,IAAzB1K,KAAKxC,EAASpB,EAAI,KAC9CsO,EAAM,GAER1K,KAAKxC,EAASpB,IAAOqC,EAAQuK,EAAQ,GAAK0B,EAAM,IAGlD,OAAOlN,EAASgD,CAClB,EAEAjB,EAAOM,UAAU+K,UAAY,SAAoBnM,EAAOjB,EAAQkL,GAO9D,OANAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,KAAO,KAClD+B,EAAOC,sBAAqBf,EAAQH,KAAKQ,MAAML,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCuB,KAAKxC,GAAmB,IAARiB,EACTjB,EAAS,CAClB,EAEA+B,EAAOM,UAAUgL,aAAe,SAAuBpM,EAAOjB,EAAQkL,GAUpE,OATAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,OAAS,OACrD+B,EAAOC,qBACTQ,KAAKxC,GAAmB,IAARiB,EAChBuB,KAAKxC,EAAS,GAAMiB,IAAU,GAE9B4J,EAAkBrI,KAAMvB,EAAOjB,GAAQ,GAElCA,EAAS,CAClB,EAEA+B,EAAOM,UAAUiL,aAAe,SAAuBrM,EAAOjB,EAAQkL,GAUpE,OATAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,OAAS,OACrD+B,EAAOC,qBACTQ,KAAKxC,GAAWiB,IAAU,EAC1BuB,KAAKxC,EAAS,GAAc,IAARiB,GAEpB4J,EAAkBrI,KAAMvB,EAAOjB,GAAQ,GAElCA,EAAS,CAClB,EAEA+B,EAAOM,UAAUkL,aAAe,SAAuBtM,EAAOjB,EAAQkL,GAYpE,OAXAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,YAAa,YACzD+B,EAAOC,qBACTQ,KAAKxC,GAAmB,IAARiB,EAChBuB,KAAKxC,EAAS,GAAMiB,IAAU,EAC9BuB,KAAKxC,EAAS,GAAMiB,IAAU,GAC9BuB,KAAKxC,EAAS,GAAMiB,IAAU,IAE9B8J,EAAkBvI,KAAMvB,EAAOjB,GAAQ,GAElCA,EAAS,CAClB,EAEA+B,EAAOM,UAAUmL,aAAe,SAAuBvM,EAAOjB,EAAQkL,GAapE,OAZAjK,GAASA,EACTjB,GAAkB,EACbkL,GAAUP,EAASnI,KAAMvB,EAAOjB,EAAQ,EAAG,YAAa,YACzDiB,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxCc,EAAOC,qBACTQ,KAAKxC,GAAWiB,IAAU,GAC1BuB,KAAKxC,EAAS,GAAMiB,IAAU,GAC9BuB,KAAKxC,EAAS,GAAMiB,IAAU,EAC9BuB,KAAKxC,EAAS,GAAc,IAARiB,GAEpB8J,EAAkBvI,KAAMvB,EAAOjB,GAAQ,GAElCA,EAAS,CAClB,EAeA+B,EAAOM,UAAUoL,aAAe,SAAuBxM,EAAOjB,EAAQkL,GACpE,OAAOD,EAAWzI,KAAMvB,EAAOjB,GAAQ,EAAMkL,EAC/C,EAEAnJ,EAAOM,UAAUqL,aAAe,SAAuBzM,EAAOjB,EAAQkL,GACpE,OAAOD,EAAWzI,KAAMvB,EAAOjB,GAAQ,EAAOkL,EAChD,EAUAnJ,EAAOM,UAAUsL,cAAgB,SAAwB1M,EAAOjB,EAAQkL,GACtE,OAAOC,EAAY3I,KAAMvB,EAAOjB,GAAQ,EAAMkL,EAChD,EAEAnJ,EAAOM,UAAUuL,cAAgB,SAAwB3M,EAAOjB,EAAQkL,GACtE,OAAOC,EAAY3I,KAAMvB,EAAOjB,GAAQ,EAAOkL,EACjD,EAGAnJ,EAAOM,UAAUwB,KAAO,SAAe+F,EAAQiE,EAAa7O,EAAOC,GAQjE,GAPKD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMuD,KAAK/C,QAC9BoO,GAAejE,EAAOnK,SAAQoO,EAAcjE,EAAOnK,QAClDoO,IAAaA,EAAc,GAC5B5O,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlB4K,EAAOnK,QAAgC,IAAhB+C,KAAK/C,OAAc,OAAO,EAGrD,GAAIoO,EAAc,EAChB,MAAM,IAAI1L,WAAW,6BAEvB,GAAInD,EAAQ,GAAKA,GAASwD,KAAK/C,OAAQ,MAAM,IAAI0C,WAAW,6BAC5D,GAAIlD,EAAM,EAAG,MAAM,IAAIkD,WAAW,2BAG9BlD,EAAMuD,KAAK/C,SAAQR,EAAMuD,KAAK/C,QAC9BmK,EAAOnK,OAASoO,EAAc5O,EAAMD,IACtCC,EAAM2K,EAAOnK,OAASoO,EAAc7O,GAGtC,IACIJ,EADAY,EAAMP,EAAMD,EAGhB,GAAIwD,OAASoH,GAAU5K,EAAQ6O,GAAeA,EAAc5O,EAE1D,IAAKL,EAAIY,EAAM,EAAGZ,GAAK,IAAKA,EAC1BgL,EAAOhL,EAAIiP,GAAerL,KAAK5D,EAAII,QAEhC,GAAIQ,EAAM,MAASuC,EAAOC,oBAE/B,IAAKpD,EAAI,EAAGA,EAAIY,IAAOZ,EACrBgL,EAAOhL,EAAIiP,GAAerL,KAAK5D,EAAII,QAGrCT,WAAW8D,UAAUyL,IAAIjM,KACvB+H,EACApH,KAAK6I,SAASrM,EAAOA,EAAQQ,GAC7BqO,GAIJ,OAAOrO,CACT,EAMAuC,EAAOM,UAAUqG,KAAO,SAAe5E,EAAK9E,EAAOC,EAAKoE,GAEtD,GAAmB,iBAARS,EAAkB,CAS3B,GARqB,iBAAV9E,GACTqE,EAAWrE,EACXA,EAAQ,EACRC,EAAMuD,KAAK/C,QACa,iBAARR,IAChBoE,EAAWpE,EACXA,EAAMuD,KAAK/C,QAEM,IAAfqE,EAAIrE,OAAc,CACpB,IAAId,EAAOmF,EAAIjF,WAAW,GACtBF,EAAO,MACTmF,EAAMnF,EAEV,CACA,QAAiBsE,IAAbI,GAA8C,iBAAbA,EACnC,MAAM,IAAIT,UAAU,6BAEtB,GAAwB,iBAAbS,IAA0BtB,EAAOuB,WAAWD,GACrD,MAAM,IAAIT,UAAU,qBAAuBS,EAE/C,KAA0B,iBAARS,IAChBA,GAAY,KAId,GAAI9E,EAAQ,GAAKwD,KAAK/C,OAAST,GAASwD,KAAK/C,OAASR,EACpD,MAAM,IAAIkD,WAAW,sBAGvB,GAAIlD,GAAOD,EACT,OAAOwD,KAQT,IAAI5D,EACJ,GANAI,KAAkB,EAClBC,OAAcgE,IAARhE,EAAoBuD,KAAK/C,OAASR,IAAQ,EAE3C6E,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKlF,EAAII,EAAOJ,EAAIK,IAAOL,EACzB4D,KAAK5D,GAAKkF,MAEP,CACL,IAAI0G,EAAQ7G,EAAiBG,GACzBA,EACAU,EAAY,IAAIzC,EAAO+B,EAAKT,GAAU5B,YACtCjC,EAAMgL,EAAM/K,OAChB,IAAKb,EAAI,EAAGA,EAAIK,EAAMD,IAASJ,EAC7B4D,KAAK5D,EAAII,GAASwL,EAAM5L,EAAIY,EAEhC,CAEA,OAAOgD,IACT,EAKA,IAAIuL,EAAoB,qBAmBxB,SAASxD,EAAOpF,GACd,OAAIA,EAAI,GAAW,IAAMA,EAAE1D,SAAS,IAC7B0D,EAAE1D,SAAS,GACpB,CAEA,SAAS+C,EAAapB,EAAQ+D,GAE5B,IAAIW,EADJX,EAAQA,GAAStG,IAMjB,IAJA,IAAIpB,EAAS2D,EAAO3D,OAChBuO,EAAgB,KAChBxD,EAAQ,GAEH5L,EAAI,EAAGA,EAAIa,IAAUb,EAAG,CAI/B,IAHAkJ,EAAY1E,EAAOvE,WAAWD,IAGd,OAAUkJ,EAAY,MAAQ,CAE5C,IAAKkG,EAAe,CAElB,GAAIlG,EAAY,MAAQ,EAEjBX,GAAS,IAAM,GAAGqD,EAAMnL,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAIT,EAAI,IAAMa,EAAQ,EAEtB0H,GAAS,IAAM,GAAGqD,EAAMnL,KAAK,IAAM,IAAM,KAC9C,QACF,CAGA2O,EAAgBlG,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjBX,GAAS,IAAM,GAAGqD,EAAMnL,KAAK,IAAM,IAAM,KAC9C2O,EAAgBlG,EAChB,QACF,CAGAA,EAAkE,OAArDkG,EAAgB,OAAU,GAAKlG,EAAY,MAC1D,MAAWkG,IAEJ7G,GAAS,IAAM,GAAGqD,EAAMnL,KAAK,IAAM,IAAM,KAMhD,GAHA2O,EAAgB,KAGZlG,EAAY,IAAM,CACpB,IAAKX,GAAS,GAAK,EAAG,MACtBqD,EAAMnL,KAAKyI,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKX,GAAS,GAAK,EAAG,MACtBqD,EAAMnL,KACJyI,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKX,GAAS,GAAK,EAAG,MACtBqD,EAAMnL,KACJyI,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIrF,MAAM,sBARhB,IAAK0E,GAAS,GAAK,EAAG,MACtBqD,EAAMnL,KACJyI,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAO0C,CACT,CA4BA,SAAS/F,EAAeoC,GACtB,OAh4DF,SAAsBoH,GAIpB,IAAIrP,EAAGsH,EAAGgI,EAAGhP,EAAKiP,EAAcvM,EAH3BnD,GACHC,IAGF,IAAIc,EAAMyO,EAAIxO,OAEd,GAAID,EAAM,EAAI,EACZ,MAAM,IAAIiD,MAAM,kDAQlB0L,EAAgC,MAAjBF,EAAIzO,EAAM,GAAa,EAAqB,MAAjByO,EAAIzO,EAAM,GAAa,EAAI,EAGrEoC,EAAM,IAAItD,EAAU,EAANkB,EAAU,EAAI2O,GAG5BD,EAAIC,EAAe,EAAI3O,EAAM,EAAIA,EAEjC,IAAI4O,EAAI,EAER,IAAKxP,EAAI,EAAGsH,EAAI,EAAGtH,EAAIsP,EAAGtP,GAAK,EAAGsH,GAAK,EACrChH,EAAOb,EAAU4P,EAAIpP,WAAWD,KAAO,GAAOP,EAAU4P,EAAIpP,WAAWD,EAAI,KAAO,GAAOP,EAAU4P,EAAIpP,WAAWD,EAAI,KAAO,EAAKP,EAAU4P,EAAIpP,WAAWD,EAAI,IAC/JgD,EAAIwM,KAAQlP,GAAO,GAAM,IACzB0C,EAAIwM,KAAQlP,GAAO,EAAK,IACxB0C,EAAIwM,KAAa,IAANlP,EAYb,OATqB,IAAjBiP,GACFjP,EAAOb,EAAU4P,EAAIpP,WAAWD,KAAO,EAAMP,EAAU4P,EAAIpP,WAAWD,EAAI,KAAO,EACjFgD,EAAIwM,KAAa,IAANlP,GACe,IAAjBiP,IACTjP,EAAOb,EAAU4P,EAAIpP,WAAWD,KAAO,GAAOP,EAAU4P,EAAIpP,WAAWD,EAAI,KAAO,EAAMP,EAAU4P,EAAIpP,WAAWD,EAAI,KAAO,EAC5HgD,EAAIwM,KAAQlP,GAAO,EAAK,IACxB0C,EAAIwM,KAAa,IAANlP,GAGN0C,CACT,CAq1DSyM,CAjIT,SAAsBxH,GAIpB,IAFAA,EAUF,SAAqBA,GACnB,OAAIA,EAAIyH,KAAazH,EAAIyH,OAClBzH,EAAI0H,QAAQ,aAAc,GACnC,CAbQC,CAAW3H,GAAK0H,QAAQR,EAAmB,KAEzCtO,OAAS,EAAG,MAAO,GAE3B,KAAOoH,EAAIpH,OAAS,GAAM,GACxBoH,GAAY,IAEd,OAAOA,CACT,CAuHqB4H,CAAY5H,GACjC,CAEA,SAASF,EAAY+H,EAAKC,EAAK3O,EAAQP,GACrC,IAAK,IAAIb,EAAI,EAAGA,EAAIa,KACbb,EAAIoB,GAAU2O,EAAIlP,QAAYb,GAAK8P,EAAIjP,UADhBb,EAE5B+P,EAAI/P,EAAIoB,GAAU0O,EAAI9P,GAExB,OAAOA,CACT,CAUA,SAASiK,GAAWnF,GAClB,OAAc,MAAPA,MAAkBA,EAAIW,WAAauK,GAAalL,IAQzD,SAAuBA,GACrB,MAAkC,mBAApBA,EAAI2I,aAAmD,mBAAd3I,EAAIF,OAAwBoL,GAAalL,EAAIF,MAAM,EAAG,GAC/G,CAViEqL,CAAanL,GAC9E,CAEA,SAASkL,GAAclL,GACrB,QAASA,EAAIoL,aAAmD,mBAA7BpL,EAAIoL,YAAYlG,UAA2BlF,EAAIoL,YAAYlG,SAASlF,EACzG,CAYA,SAASqL,KAAiB,CAG1B,SAASC,KACPA,GAAatQ,KAAKmD,KAAKW,KACzB,CAwCA,SAASyM,GAAiB/M,GACxB,YAA2Be,IAAvBf,EAAKgN,cACAF,GAAaG,oBACfjN,EAAKgN,aACd,CAgIA,SAASE,GAAaxF,EAAQ7F,EAAMsL,EAAUC,GAC5C,IAAIjP,EACAkP,EACAC,EA4DepP,EA1DnB,GAAwB,mBAAbiP,EACT,MAAM,IAAIzM,UAAU,0CAoBtB,IAlBA2M,EAAS3F,EAAO6F,UAOVF,EAAOG,cACT9F,EAAO+F,KAAK,cAAe5L,EACfsL,EAASA,SAAWA,EAASA,SAAWA,GAIpDE,EAAS3F,EAAO6F,SAElBD,EAAWD,EAAOxL,KAblBwL,EAAS3F,EAAO6F,QAAU,IAAIV,GAC9BnF,EAAOgG,aAAe,GAenBJ,GAmBH,GAdwB,mBAAbA,EAETA,EAAWD,EAAOxL,GAAQuL,EAAU,CAACD,EAAUG,GACX,CAACA,EAAUH,GAG3CC,EACFE,EAASK,QAAQR,GAEjBG,EAASnQ,KAAKgQ,IAKbG,EAASM,SACZzP,EAAI4O,GAAiBrF,KACZvJ,EAAI,GAAKmP,EAAS/P,OAASY,EAAG,CACrCmP,EAASM,QAAS,EAClB,IAAIC,EAAI,IAAItN,MAAM,+CACE+M,EAAS/P,OAAS,IAAMsE,EAD1B,qEAGlBgM,EAAEC,KAAO,8BACTD,EAAEE,QAAUrG,EACZmG,EAAEhM,KAAOA,EACTgM,EAAEG,MAAQV,EAAS/P,OAQNW,EAPD2P,EAQM,mBAAjBI,QAAQC,KAAsBD,QAAQC,KAAKhQ,GAAK+P,QAAQ5O,IAAInB,EAP/D,OA7BFoP,EAAWD,EAAOxL,GAAQsL,IACxBzF,EAAOgG,aAgCX,OAAOhG,CACT,CAeA,SAASyG,GAAUzG,EAAQ7F,EAAMsL,GAC/B,IAAIiB,GAAQ,EACZ,SAASC,IACP3G,EAAO4G,eAAezM,EAAMwM,GACvBD,IACHA,GAAQ,EACRjB,EAASlH,MAAMyB,EAAQJ,WAE3B,CAEA,OADA+G,EAAElB,SAAWA,EACNkB,CACT,CA0JA,SAASE,GAAgB1M,GACvB,IAAIwL,EAAS/M,KAAKiN,QAElB,GAAIF,EAAQ,CACV,IAAImB,EAAanB,EAAOxL,GAExB,GAA0B,mBAAf2M,EACT,OAAO,EACF,GAAIA,EACT,OAAOA,EAAWjR,MAEtB,CAEA,OAAO,CACT,CAaA,SAASkR,GAAW/O,EAAKhD,GAEvB,IADA,IAAIiF,EAAO,IAAIrF,MAAMI,GACdA,KACLiF,EAAKjF,GAAKgD,EAAIhD,GAChB,OAAOiF,CACT,CAaA,SAAS+M,KACL,MAAM,IAAInO,MAAM,kCACpB,CACA,SAASoO,KACL,MAAM,IAAIpO,MAAM,oCACpB,CApdAsM,GAAc1M,UAAYyO,OAAOC,OAAO,MAQxC/B,GAAaA,aAAeA,GAE5BA,GAAagC,cAAe,EAE5BhC,GAAa3M,UAAU4O,YAAShO,EAChC+L,GAAa3M,UAAUoN,aAAUxM,EACjC+L,GAAa3M,UAAU6M,mBAAgBjM,EAIvC+L,GAAaG,oBAAsB,GAEnCH,GAAatQ,KAAO,WAClB8D,KAAKyO,OAAS,KACVjC,GAAagC,cA5BfC,UA8BWC,OAGR1O,KAAKiN,SAAWjN,KAAKiN,UAAYqB,OAAOK,eAAe3O,MAAMiN,UAChEjN,KAAKiN,QAAU,IAAIV,GACnBvM,KAAKoN,aAAe,GAGtBpN,KAAK0M,cAAgB1M,KAAK0M,oBAAiBjM,CAC7C,EAIA+L,GAAa3M,UAAU+O,gBAAkB,SAAyBjM,GAChE,GAAiB,iBAANA,GAAkBA,EAAI,GAAK9D,MAAM8D,GAC1C,MAAM,IAAIvC,UAAU,0CAEtB,OADAJ,KAAK0M,cAAgB/J,EACd3C,IACT,EAQAwM,GAAa3M,UAAUgP,gBAAkB,WACvC,OAAOpC,GAAiBzM,KAC1B,EA2DAwM,GAAa3M,UAAUsN,KAAO,SAAc5L,GAC1C,IAAIuN,EAAIC,EAAS/R,EAAKgS,EAAM5S,EAAG2Q,EAAQ0B,EACnCQ,EAAoB,UAAT1N,EAGf,GADAwL,EAAS/M,KAAKiN,QAEZgC,EAAWA,GAA2B,MAAhBlC,EAAOmC,WAC1B,IAAKD,EACR,OAAO,EAKT,GAHAR,EAASzO,KAAKyO,OAGVQ,EAAS,CAEX,GADAH,EAAK9H,UAAU,IACXyH,EAOG,IAAIK,aAAc7O,MACvB,MAAM6O,EAGN,IAAIK,EAAM,IAAIlP,MAAM,yCAA2C6O,EAAK,KAEpE,MADAK,EAAIC,QAAUN,EACRK,CACR,CACA,OAdOL,IACHA,EAAK,IAAI7O,MAAM,wCACjB6O,EAAGO,cAAgBrP,KACnB8O,EAAGL,OAASA,EACZK,EAAGQ,cAAe,EAClBb,EAAOtB,KAAK,QAAS2B,IAShB,CACT,CAIA,KAFAC,EAAUhC,EAAOxL,IAGf,OAAO,EAET,IAAIgO,EAA0B,mBAAZR,EAElB,OADA/R,EAAMgK,UAAU/J,QAGd,KAAK,GA9FT,SAAkB8R,EAASQ,EAAM7T,GAC/B,GAAI6T,EACFR,EAAQ1P,KAAK3D,QAIb,IAFA,IAAIsB,EAAM+R,EAAQ9R,OACduS,EAAYrB,GAAWY,EAAS/R,GAC3BZ,EAAI,EAAGA,EAAIY,IAAOZ,EACzBoT,EAAUpT,GAAGiD,KAAK3D,EAExB,CAsFM+T,CAASV,EAASQ,EAAMvP,MACxB,MACF,KAAK,GAvFT,SAAiB+O,EAASQ,EAAM7T,EAAMgU,GACpC,GAAIH,EACFR,EAAQ1P,KAAK3D,EAAMgU,QAInB,IAFA,IAAI1S,EAAM+R,EAAQ9R,OACduS,EAAYrB,GAAWY,EAAS/R,GAC3BZ,EAAI,EAAGA,EAAIY,IAAOZ,EACzBoT,EAAUpT,GAAGiD,KAAK3D,EAAMgU,EAE9B,CA+EMC,CAAQZ,EAASQ,EAAMvP,KAAMgH,UAAU,IACvC,MACF,KAAK,GAhFT,SAAiB+H,EAASQ,EAAM7T,EAAMgU,EAAME,GAC1C,GAAIL,EACFR,EAAQ1P,KAAK3D,EAAMgU,EAAME,QAIzB,IAFA,IAAI5S,EAAM+R,EAAQ9R,OACduS,EAAYrB,GAAWY,EAAS/R,GAC3BZ,EAAI,EAAGA,EAAIY,IAAOZ,EACzBoT,EAAUpT,GAAGiD,KAAK3D,EAAMgU,EAAME,EAEpC,CAwEMC,CAAQd,EAASQ,EAAMvP,KAAMgH,UAAU,GAAIA,UAAU,IACrD,MACF,KAAK,GAzET,SAAmB+H,EAASQ,EAAM7T,EAAMgU,EAAME,EAAME,GAClD,GAAIP,EACFR,EAAQ1P,KAAK3D,EAAMgU,EAAME,EAAME,QAI/B,IAFA,IAAI9S,EAAM+R,EAAQ9R,OACduS,EAAYrB,GAAWY,EAAS/R,GAC3BZ,EAAI,EAAGA,EAAIY,IAAOZ,EACzBoT,EAAUpT,GAAGiD,KAAK3D,EAAMgU,EAAME,EAAME,EAE1C,CAiEMC,CAAUhB,EAASQ,EAAMvP,KAAMgH,UAAU,GAAIA,UAAU,GAAIA,UAAU,IACrE,MAEF,QAEE,IADAgI,EAAO,IAAIhT,MAAMgB,EAAM,GAClBZ,EAAI,EAAGA,EAAIY,EAAKZ,IACnB4S,EAAK5S,EAAI,GAAK4K,UAAU5K,IArEhC,SAAkB2S,EAASQ,EAAM7T,EAAMsT,GACrC,GAAIO,EACFR,EAAQpJ,MAAMjK,EAAMsT,QAIpB,IAFA,IAAIhS,EAAM+R,EAAQ9R,OACduS,EAAYrB,GAAWY,EAAS/R,GAC3BZ,EAAI,EAAGA,EAAIY,IAAOZ,EACzBoT,EAAUpT,GAAGuJ,MAAMjK,EAAMsT,EAE/B,CA6DMgB,CAASjB,EAASQ,EAAMvP,KAAMgP,GAGlC,OAAO,CACT,EAoEAxC,GAAa3M,UAAUoQ,YAAc,SAAqB1O,EAAMsL,GAC9D,OAAOD,GAAa5M,KAAMuB,EAAMsL,GAAU,EAC5C,EAEAL,GAAa3M,UAAUqQ,GAAK1D,GAAa3M,UAAUoQ,YAEnDzD,GAAa3M,UAAUsQ,gBACnB,SAAyB5O,EAAMsL,GAC7B,OAAOD,GAAa5M,KAAMuB,EAAMsL,GAAU,EAC5C,EAeJL,GAAa3M,UAAUuQ,KAAO,SAAc7O,EAAMsL,GAChD,GAAwB,mBAAbA,EACT,MAAM,IAAIzM,UAAU,0CAEtB,OADAJ,KAAKkQ,GAAG3O,EAAMsM,GAAU7N,KAAMuB,EAAMsL,IAC7B7M,IACT,EAEAwM,GAAa3M,UAAUwQ,oBACnB,SAA6B9O,EAAMsL,GACjC,GAAwB,mBAAbA,EACT,MAAM,IAAIzM,UAAU,0CAEtB,OADAJ,KAAKmQ,gBAAgB5O,EAAMsM,GAAU7N,KAAMuB,EAAMsL,IAC1C7M,IACT,EAGJwM,GAAa3M,UAAUmO,eACnB,SAAwBzM,EAAMsL,GAC5B,IAAIlG,EAAMoG,EAAQuD,EAAUlU,EAAGmU,EAE/B,GAAwB,mBAAb1D,EACT,MAAM,IAAIzM,UAAU,0CAGtB,KADA2M,EAAS/M,KAAKiN,SAEZ,OAAOjN,KAGT,KADA2G,EAAOoG,EAAOxL,IAEZ,OAAOvB,KAET,GAAI2G,IAASkG,GAAalG,EAAKkG,UAAYlG,EAAKkG,WAAaA,EAC/B,KAAtB7M,KAAKoN,aACTpN,KAAKiN,QAAU,IAAIV,WAEZQ,EAAOxL,GACVwL,EAAOiB,gBACThO,KAAKmN,KAAK,iBAAkB5L,EAAMoF,EAAKkG,UAAYA,SAElD,GAAoB,mBAATlG,EAAqB,CAGrC,IAFA2J,GAAY,EAEPlU,EAAIuK,EAAK1J,OAAQb,KAAM,GAC1B,GAAIuK,EAAKvK,KAAOyQ,GACXlG,EAAKvK,GAAGyQ,UAAYlG,EAAKvK,GAAGyQ,WAAaA,EAAW,CACvD0D,EAAmB5J,EAAKvK,GAAGyQ,SAC3ByD,EAAWlU,EACX,KACF,CAGF,GAAIkU,EAAW,EACb,OAAOtQ,KAET,GAAoB,IAAhB2G,EAAK1J,OAAc,CAErB,GADA0J,EAAK,QAAKlG,EACkB,KAAtBT,KAAKoN,aAET,OADApN,KAAKiN,QAAU,IAAIV,GACZvM,YAEA+M,EAAOxL,EAElB,MA+GR,SAAmBoF,EAAM6J,GACvB,IAAK,IAAIpU,EAAIoU,EAAOC,EAAIrU,EAAI,EAAGuG,EAAIgE,EAAK1J,OAAQwT,EAAI9N,EAAGvG,GAAK,EAAGqU,GAAK,EAClE9J,EAAKvK,GAAKuK,EAAK8J,GACjB9J,EAAK+J,KACP,CAlHUC,CAAUhK,EAAM2J,GAGdvD,EAAOiB,gBACThO,KAAKmN,KAAK,iBAAkB5L,EAAMgP,GAAoB1D,EAC1D,CAEA,OAAO7M,IACT,EAEJwM,GAAa3M,UAAU+Q,mBACnB,SAA4BrP,GAC1B,IAAIiO,EAAWzC,EAGf,KADAA,EAAS/M,KAAKiN,SAEZ,OAAOjN,KAGT,IAAK+M,EAAOiB,eAUV,OATyB,IAArBhH,UAAU/J,QACZ+C,KAAKiN,QAAU,IAAIV,GACnBvM,KAAKoN,aAAe,GACXL,EAAOxL,KACY,KAAtBvB,KAAKoN,aACTpN,KAAKiN,QAAU,IAAIV,UAEZQ,EAAOxL,IAEXvB,KAIT,GAAyB,IAArBgH,UAAU/J,OAAc,CAE1B,IADA,IACgB4T,EADZC,EAAOxC,OAAOwC,KAAK/D,GACd3Q,EAAI,EAAQA,EAAI0U,EAAK7T,SAAUb,EAE1B,oBADZyU,EAAMC,EAAK1U,KAEX4D,KAAK4Q,mBAAmBC,GAK1B,OAHA7Q,KAAK4Q,mBAAmB,kBACxB5Q,KAAKiN,QAAU,IAAIV,GACnBvM,KAAKoN,aAAe,EACbpN,IACT,CAIA,GAAyB,mBAFzBwP,EAAYzC,EAAOxL,IAGjBvB,KAAKgO,eAAezM,EAAMiO,QACrB,GAAIA,EAET,GACExP,KAAKgO,eAAezM,EAAMiO,EAAUA,EAAUvS,OAAS,UAChDuS,EAAU,IAGrB,OAAOxP,IACT,EAEJwM,GAAa3M,UAAU2P,UAAY,SAAmBjO,GACpD,IAAI2M,EAEAnB,EAAS/M,KAAKiN,QAclB,OAZKF,IAGHmB,EAAanB,EAAOxL,IAGW,mBAAf2M,EACR,CAACA,EAAWrB,UAAYqB,GAmDpC,SAAyB9O,GAEvB,IADA,IAAIyI,EAAM,IAAI7L,MAAMoD,EAAInC,QACfb,EAAI,EAAGA,EAAIyL,EAAI5K,SAAUb,EAChCyL,EAAIzL,GAAKgD,EAAIhD,GAAGyQ,UAAYzN,EAAIhD,GAElC,OAAOyL,CACT,CAvDYkJ,CAAgB7C,GARlB,EAYV,EAEA1B,GAAawE,cAAgB,SAASvD,EAASlM,GAC7C,MAAqC,mBAA1BkM,EAAQuD,cACVvD,EAAQuD,cAAczP,GAEtB0M,GAAgB5O,KAAKoO,EAASlM,EAEzC,EAEAiL,GAAa3M,UAAUmR,cAAgB/C,GAiBvCzB,GAAa3M,UAAUoR,WAAa,WAClC,OAAOjR,KAAKoN,aAAe,EAAI8D,QAAQC,QAAQnR,KAAKiN,SAAW,EACjE,EAiCA,IAAImE,GAAmBhD,GACnBiD,GAAqBhD,GAQzB,SAASiD,GAAWC,GAChB,GAAIH,KAAqBI,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKH,KAAqBhD,KAAqBgD,KAAqBI,WAEhE,OADAJ,GAAmBI,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOH,GAAiBG,EAAK,EACjC,CAAE,MAAM3T,GACJ,IAEI,OAAOwT,GAAiB/R,KAAK,KAAMkS,EAAK,EAC5C,CAAE,MAAM3T,GAEJ,OAAOwT,GAAiB/R,KAAKW,KAAMuR,EAAK,EAC5C,CACJ,CAGJ,CA/BmC,mBAAxB/V,EAASgW,aAChBJ,GAAmBI,YAEc,mBAA1BhW,EAASiW,eAChBJ,GAAqBI,cAuDzB,IAEIC,GAFAC,GAAQ,GACRC,IAAW,EAEXC,IAAc,EAElB,SAASC,KACAF,IAAaF,KAGlBE,IAAW,EACPF,GAAazU,OACb0U,GAAQD,GAAahL,OAAOiL,IAE5BE,IAAc,EAEdF,GAAM1U,QACN8U,KAER,CAEA,SAASA,KACL,IAAIH,GAAJ,CAGA,IAAII,EAAUV,GAAWQ,IACzBF,IAAW,EAGX,IADA,IAAI5U,EAAM2U,GAAM1U,OACVD,GAAK,CAGP,IAFA0U,GAAeC,GACfA,GAAQ,KACCE,GAAa7U,GACd0U,IACAA,GAAaG,IAAYI,MAGjCJ,IAAc,EACd7U,EAAM2U,GAAM1U,MAChB,CACAyU,GAAe,KACfE,IAAW,EAnEf,SAAyBM,GACrB,GAAIb,KAAuBI,aAEvB,OAAOA,aAAaS,GAGxB,IAAKb,KAAuBhD,KAAwBgD,KAAuBI,aAEvE,OADAJ,GAAqBI,aACdA,aAAaS,GAExB,IAEI,OAAOb,GAAmBa,EAC9B,CAAE,MAAOtU,GACL,IAEI,OAAOyT,GAAmBhS,KAAK,KAAM6S,EACzC,CAAE,MAAOtU,GAGL,OAAOyT,GAAmBhS,KAAKW,KAAMkS,EACzC,CACJ,CAIJ,CA0CIC,CAAgBH,EAlBhB,CAmBJ,CACA,SAASI,GAASb,GACd,IAAIvC,EAAO,IAAIhT,MAAMgL,UAAU/J,OAAS,GACxC,GAAI+J,UAAU/J,OAAS,EACnB,IAAK,IAAIb,EAAI,EAAGA,EAAI4K,UAAU/J,OAAQb,IAClC4S,EAAK5S,EAAI,GAAK4K,UAAU5K,GAGhCuV,GAAM9U,KAAK,IAAIwV,GAAKd,EAAKvC,IACJ,IAAjB2C,GAAM1U,QAAiB2U,IACvBN,GAAWS,GAEnB,CAEA,SAASM,GAAKd,EAAKjR,GACfN,KAAKuR,IAAMA,EACXvR,KAAKM,MAAQA,CACjB,CACA+R,GAAKxS,UAAUoS,IAAM,WACjBjS,KAAKuR,IAAI5L,MAAM,KAAM3F,KAAKM,MAC9B,EAWA,SAASgS,KAAQ,CAEjB,IAAIpC,GAAKoC,GACLrC,GAAcqC,GACdlC,GAAOkC,GACPC,GAAMD,GACNtE,GAAiBsE,GACjB1B,GAAqB0B,GACrBnF,GAAOmF,GAYX,IAAIE,GAAchX,EAASgX,aAAe,CAAC,EACvCC,GACFD,GAAYE,KACZF,GAAYG,QACZH,GAAYI,OACZJ,GAAYK,MACZL,GAAYM,WACZ,WAAY,OAAO,IAAKC,MAAQC,SAAU,EAmB5C,IAAIC,GAAY,IAAIF,KAOpB,IAAIG,GAAU,CACZd,SAAUA,GACVe,MAjEU,UAkEVC,SAhEY,EAiEZC,IAhEQ,CAAC,EAiETC,KAhES,GAiETC,QAhEY,GAiEZC,SAhEa,CAAC,EAiEdtD,GAAIA,GACJD,YAAaA,GACbG,KAAMA,GACNmC,IAAKA,GACLvE,eAAgBA,GAChB4C,mBAAoBA,GACpBzD,KAAMA,GACNsG,QA1DF,SAAiBjG,GACb,MAAM,IAAIvN,MAAM,mCACpB,EAyDEyT,IAvDF,WAAkB,MAAO,GAAI,EAwD3BC,MAvDF,SAAgB9Q,GACZ,MAAM,IAAI5C,MAAM,iCACpB,EAsDE2T,MAtDD,WAAmB,OAAO,CAAG,EAuD5BC,OAzCF,SAAgBC,GACd,IAAIC,EAA6C,KAAjCtB,GAAepT,KAAKmT,IAChCwB,EAAU1V,KAAKQ,MAAMiV,GACrBE,EAAc3V,KAAKQ,MAAOiV,EAAU,EAAG,KAS3C,OARID,IACFE,GAAoBF,EAAkB,IACtCG,GAA4BH,EAAkB,IAC9B,IACdE,IACAC,GAAe,MAGZ,CAACD,EAAQC,EAClB,EA6BEC,SAlFa,UAmFbC,QA7EY,CAAC,EA8EbC,OA7EW,CAAC,EA8EZC,OA7BF,WAGE,OAFkB,IAAItB,KACEE,IACX,GACf,GAmDIqB,GAtByB,mBAAlBhG,OAAOC,OACL,SAAkBgG,EAAMC,GAEjCD,EAAKE,OAASD,EACdD,EAAK1U,UAAYyO,OAAOC,OAAOiG,EAAU3U,UAAW,CAClDyM,YAAa,CACX7N,MAAO8V,EACPG,YAAY,EACZC,UAAU,EACVC,cAAc,IAGpB,EAEW,SAAkBL,EAAMC,GACjCD,EAAKE,OAASD,EACd,IAAIK,EAAW,WAAa,EAC5BA,EAAShV,UAAY2U,EAAU3U,UAC/B0U,EAAK1U,UAAY,IAAIgV,EACrBN,EAAK1U,UAAUyM,YAAciI,CAC/B,EAIEO,GAAe,WACnB,SAASC,GAAOC,GACd,IAAKC,GAASD,GAAI,CAEhB,IADA,IAAIE,EAAU,GACL9Y,EAAI,EAAGA,EAAI4K,UAAU/J,OAAQb,IACpC8Y,EAAQrY,KAAKqK,GAAQF,UAAU5K,KAEjC,OAAO8Y,EAAQpY,KAAK,IACtB,CAEIV,EAAI,EAmBR,IAnBA,IACI4S,EAAOhI,UACPhK,EAAMgS,EAAK/R,OACXoH,EAAMjB,OAAO4R,GAAGjJ,QAAQ+I,IAAc,SAAStO,GACjD,GAAU,OAANA,EAAY,MAAO,IACvB,GAAIpK,GAAKY,EAAK,OAAOwJ,EACrB,OAAQA,GACN,IAAK,KAAM,OAAOpD,OAAO4L,EAAK5S,MAC9B,IAAK,KAAM,OAAOwH,OAAOoL,EAAK5S,MAC9B,IAAK,KACH,IACE,OAAO+Y,KAAKC,UAAUpG,EAAK5S,KAC7B,CAAE,MAAOiZ,GACP,MAAO,YACT,CACF,QACE,OAAO7O,EAEb,IACSA,EAAIwI,EAAK5S,GAAIA,EAAIY,EAAKwJ,EAAIwI,IAAO5S,GACpCkZ,GAAO9O,KAAO+O,GAAS/O,GACzBnC,GAAO,IAAMmC,EAEbnC,GAAO,IAAM6C,GAAQV,GAGzB,OAAOnC,CACT,CAKA,SAASmR,GAAUC,EAAIC,GAErB,GAAIC,GAAYna,EAAS0X,SACvB,OAAO,WACL,OAAOsC,GAAUC,EAAIC,GAAK/P,MAAM3F,KAAMgH,UACxC,EAGF,IAA8B,IAA1BkM,GAAQ0C,cACV,OAAOH,EAGT,IAAInI,GAAS,EAeb,OAdA,WACE,IAAKA,EAAQ,CACX,GAAI4F,GAAQ2C,iBACV,MAAM,IAAI5V,MAAMyV,GACPxC,GAAQ4C,iBACjBnI,QAAQoI,MAAML,GAEd/H,QAAQuB,MAAMwG,GAEhBpI,GAAS,CACX,CACA,OAAOmI,EAAG9P,MAAM3F,KAAMgH,UACxB,CAGF,CAEA,IACIgP,GADAC,GAAS,CAAC,EAEd,SAASC,GAAS5K,GAIhB,GAHIqK,GAAYK,MACdA,GAAe9C,GAAQG,IAAI8C,YAAc,IAC3C7K,EAAMA,EAAI8K,eACLH,GAAO3K,GACV,GAAI,IAAI+K,OAAO,MAAQ/K,EAAM,MAAO,KAAKgL,KAAKN,IAAe,CAE3DC,GAAO3K,GAAO,WACZ,IAAIoK,EAAMX,GAAOpP,MAAM,KAAMqB,WAC7B2G,QAAQuB,MAAM,YAAa5D,EAHnB,EAG6BoK,EACvC,CACF,MACEO,GAAO3K,GAAO,WAAY,EAG9B,OAAO2K,GAAO3K,EAChB,CAUA,SAASpE,GAAQhG,EAAKqV,GAEpB,IAAIC,EAAM,CACRC,KAAM,GACNC,QAASC,IAkBX,OAfI3P,UAAU/J,QAAU,IAAGuZ,EAAII,MAAQ5P,UAAU,IAC7CA,UAAU/J,QAAU,IAAGuZ,EAAIK,OAAS7P,UAAU,IAC9C8P,GAAUP,GAEZC,EAAIO,WAAaR,EACRA,GAETS,GAAQR,EAAKD,GAGXZ,GAAYa,EAAIO,cAAaP,EAAIO,YAAa,GAC9CpB,GAAYa,EAAII,SAAQJ,EAAII,MAAQ,GACpCjB,GAAYa,EAAIK,UAASL,EAAIK,QAAS,GACtClB,GAAYa,EAAIS,iBAAgBT,EAAIS,eAAgB,GACpDT,EAAIK,SAAQL,EAAIE,QAAUQ,IACvBC,GAAYX,EAAKtV,EAAKsV,EAAII,MACnC,CAiCA,SAASM,GAAiB7S,EAAK+S,GAC7B,IAAIC,EAAQnQ,GAAQoQ,OAAOF,GAE3B,OAAIC,EACK,KAAYnQ,GAAQ2P,OAAOQ,GAAO,GAAK,IAAMhT,EAC7C,KAAY6C,GAAQ2P,OAAOQ,GAAO,GAAK,IAEvChT,CAEX,CAGA,SAASsS,GAAetS,EAAK+S,GAC3B,OAAO/S,CACT,CAcA,SAAS8S,GAAYX,EAAK/X,EAAO8Y,GAG/B,GAAIf,EAAIS,eACJxY,GACA+Y,GAAW/Y,EAAMyI,UAEjBzI,EAAMyI,UAAYA,MAEhBzI,EAAM6N,aAAe7N,EAAM6N,YAAYzM,YAAcpB,GAAQ,CACjE,IAAIoJ,EAAMpJ,EAAMyI,QAAQqQ,EAAcf,GAItC,OAHKvB,GAASpN,KACZA,EAAMsP,GAAYX,EAAK3O,EAAK0P,IAEvB1P,CACT,CAGA,IAAI4P,EA+FN,SAAyBjB,EAAK/X,GAC5B,GAAIkX,GAAYlX,GACd,OAAO+X,EAAIE,QAAQ,YAAa,aAClC,GAAIzB,GAASxW,GAAQ,CACnB,IAAIiZ,EAAS,IAAOvC,KAAKC,UAAU3W,GAAOsN,QAAQ,SAAU,IAClBA,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAAO,IACjE,OAAOyK,EAAIE,QAAQgB,EAAQ,SAC7B,CACA,GAAIC,GAASlZ,GACX,OAAO+X,EAAIE,QAAQ,GAAKjY,EAAO,UACjC,GAAIqY,GAAUrY,GACZ,OAAO+X,EAAIE,QAAQ,GAAKjY,EAAO,WAEjC,GAAI6W,GAAO7W,GACT,OAAO+X,EAAIE,QAAQ,OAAQ,OAC/B,CA/GkBkB,CAAgBpB,EAAK/X,GACrC,GAAIgZ,EACF,OAAOA,EAIT,IAAI3G,EAAOxC,OAAOwC,KAAKrS,GACnBoZ,EApCN,SAAqBvX,GACnB,IAAIwX,EAAO,CAAC,EAMZ,OAJAxX,EAAMyX,SAAQ,SAASzW,EAAK0W,GAC1BF,EAAKxW,IAAO,CACd,IAEOwW,CACT,CA4BoBG,CAAYnH,GAQ9B,GANI0F,EAAIO,aACNjG,EAAOxC,OAAO4J,oBAAoBzZ,IAKhC0Z,GAAQ1Z,KACJqS,EAAK/N,QAAQ,YAAc,GAAK+N,EAAK/N,QAAQ,gBAAkB,GACrE,OAAOqV,GAAY3Z,GAIrB,GAAoB,IAAhBqS,EAAK7T,OAAc,CACrB,GAAIua,GAAW/Y,GAAQ,CACrB,IAAI+O,EAAO/O,EAAM+O,KAAO,KAAO/O,EAAM+O,KAAO,GAC5C,OAAOgJ,EAAIE,QAAQ,YAAclJ,EAAO,IAAK,UAC/C,CACA,GAAI6K,GAAS5Z,GACX,OAAO+X,EAAIE,QAAQL,OAAOxW,UAAUZ,SAASI,KAAKZ,GAAQ,UAE5D,GAAI6Z,GAAO7Z,GACT,OAAO+X,EAAIE,QAAQ3D,KAAKlT,UAAUZ,SAASI,KAAKZ,GAAQ,QAE1D,GAAI0Z,GAAQ1Z,GACV,OAAO2Z,GAAY3Z,EAEvB,CAEA,IA2CI7B,EA3CA2b,EAAO,GAAIjY,GAAQ,EAAOkY,EAAS,CAAC,IAAK,MAGzCrZ,GAAQV,KACV6B,GAAQ,EACRkY,EAAS,CAAC,IAAK,MAIbhB,GAAW/Y,MAEb8Z,EAAO,cADC9Z,EAAM+O,KAAO,KAAO/O,EAAM+O,KAAO,IACf,KAkB5B,OAdI6K,GAAS5Z,KACX8Z,EAAO,IAAMlC,OAAOxW,UAAUZ,SAASI,KAAKZ,IAI1C6Z,GAAO7Z,KACT8Z,EAAO,IAAMxF,KAAKlT,UAAU4Y,YAAYpZ,KAAKZ,IAI3C0Z,GAAQ1Z,KACV8Z,EAAO,IAAMH,GAAY3Z,IAGP,IAAhBqS,EAAK7T,QAAkBqD,GAAyB,GAAhB7B,EAAMxB,OAItCsa,EAAe,EACbc,GAAS5Z,GACJ+X,EAAIE,QAAQL,OAAOxW,UAAUZ,SAASI,KAAKZ,GAAQ,UAEnD+X,EAAIE,QAAQ,WAAY,YAInCF,EAAIC,KAAK5Z,KAAK4B,GAIZ7B,EADE0D,EAsCN,SAAqBkW,EAAK/X,EAAO8Y,EAAcM,EAAa/G,GAE1D,IADA,IAAIlU,EAAS,GACJR,EAAI,EAAGsP,EAAIjN,EAAMxB,OAAQb,EAAIsP,IAAKtP,EACrCsc,GAAeja,EAAO2E,OAAOhH,IAC/BQ,EAAOC,KAAK8b,GAAenC,EAAK/X,EAAO8Y,EAAcM,EACjDzU,OAAOhH,IAAI,IAEfQ,EAAOC,KAAK,IAShB,OANAiU,EAAKiH,SAAQ,SAASlH,GACfA,EAAI1J,MAAM,UACbvK,EAAOC,KAAK8b,GAAenC,EAAK/X,EAAO8Y,EAAcM,EACjDhH,GAAK,GAEb,IACOjU,CACT,CAtDagc,CAAYpC,EAAK/X,EAAO8Y,EAAcM,EAAa/G,GAEnDA,EAAK+H,KAAI,SAAShI,GACzB,OAAO8H,GAAenC,EAAK/X,EAAO8Y,EAAcM,EAAahH,EAAKvQ,EACpE,IAGFkW,EAAIC,KAAK/F,MA6GX,SAA8B9T,EAAQ2b,EAAMC,GAC1C,IAAIvb,EAASL,EAAOkc,QAAO,SAASC,EAAMC,GAExC,OADIA,EAAIjW,QAAQ,MACTgW,EAAOC,EAAIjN,QAAQ,kBAAmB,IAAI9O,OAAS,CAC5D,GAAG,GAEH,GAAIA,EAAS,GACX,OAAOub,EAAO,IACG,KAATD,EAAc,GAAKA,EAAO,OAC3B,IACA3b,EAAOE,KAAK,SACZ,IACA0b,EAAO,GAGhB,OAAOA,EAAO,GAAKD,EAAO,IAAM3b,EAAOE,KAAK,MAAQ,IAAM0b,EAAO,EACnE,CA3HSS,CAAqBrc,EAAQ2b,EAAMC,IAxBjCA,EAAO,GAAKD,EAAOC,EAAO,EAyBrC,CAsBA,SAASJ,GAAY3Z,GACnB,MAAO,IAAMwB,MAAMJ,UAAUZ,SAASI,KAAKZ,GAAS,GACtD,CAuBA,SAASka,GAAenC,EAAK/X,EAAO8Y,EAAcM,EAAahH,EAAKvQ,GAClE,IAAIkN,EAAMnJ,EAAK6U,EAsCf,IArCAA,EAAO5K,OAAO6K,yBAAyB1a,EAAOoS,IAAQ,CAAEpS,MAAOA,EAAMoS,KAC5DuI,IAEL/U,EADE6U,EAAK5N,IACDkL,EAAIE,QAAQ,kBAAmB,WAE/BF,EAAIE,QAAQ,WAAY,WAG5BwC,EAAK5N,MACPjH,EAAMmS,EAAIE,QAAQ,WAAY,YAG7BgC,GAAeb,EAAahH,KAC/BrD,EAAO,IAAMqD,EAAM,KAEhBxM,IACCmS,EAAIC,KAAK1T,QAAQmW,EAAKza,OAAS,GAE/B4F,EADEiR,GAAOiC,GACHJ,GAAYX,EAAK0C,EAAKza,MAAO,MAE7B0Y,GAAYX,EAAK0C,EAAKza,MAAO8Y,EAAe,IAE5CxU,QAAQ,OAAS,IAErBsB,EADE/D,EACI+D,EAAIgV,MAAM,MAAMR,KAAI,SAASS,GACjC,MAAO,KAAOA,CAChB,IAAGxc,KAAK,MAAMmH,OAAO,GAEf,KAAOI,EAAIgV,MAAM,MAAMR,KAAI,SAASS,GACxC,MAAO,MAAQA,CACjB,IAAGxc,KAAK,OAIZuH,EAAMmS,EAAIE,QAAQ,aAAc,YAGhCf,GAAYnI,GAAO,CACrB,GAAIlN,GAASuQ,EAAI1J,MAAM,SACrB,OAAO9C,GAETmJ,EAAO2H,KAAKC,UAAU,GAAKvE,IAClB1J,MAAM,iCACbqG,EAAOA,EAAKvJ,OAAO,EAAGuJ,EAAKvQ,OAAS,GACpCuQ,EAAOgJ,EAAIE,QAAQlJ,EAAM,UAEzBA,EAAOA,EAAKzB,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,KAChCyB,EAAOgJ,EAAIE,QAAQlJ,EAAM,UAE7B,CAEA,OAAOA,EAAO,KAAOnJ,CACvB,CAwBA,SAASlF,GAAQoa,GACf,OAAOvd,MAAMmD,QAAQoa,EACvB,CAEA,SAASzC,GAAUhX,GACjB,MAAsB,kBAARA,CAChB,CAEA,SAASwV,GAAOxV,GACd,OAAe,OAARA,CACT,CAMA,SAAS6X,GAAS7X,GAChB,MAAsB,iBAARA,CAChB,CAEA,SAASmV,GAASnV,GAChB,MAAsB,iBAARA,CAChB,CAMA,SAAS6V,GAAY7V,GACnB,YAAe,IAARA,CACT,CAEA,SAASuY,GAASmB,GAChB,OAAOjE,GAASiE,IAA8B,oBAAvBC,GAAeD,EACxC,CAEA,SAASjE,GAASzV,GAChB,MAAsB,iBAARA,GAA4B,OAARA,CACpC,CAEA,SAASwY,GAAOpa,GACd,OAAOqX,GAASrX,IAA4B,kBAAtBub,GAAevb,EACvC,CAEA,SAASia,GAAQva,GACf,OAAO2X,GAAS3X,KACW,mBAAtB6b,GAAe7b,IAA2BA,aAAaqC,MAC9D,CAEA,SAASuX,GAAW1X,GAClB,MAAsB,mBAARA,CAChB,CAeA,SAAS2Z,GAAeC,GACtB,OAAOpL,OAAOzO,UAAUZ,SAASI,KAAKqa,EACxC,CAGA,SAASC,GAAIhX,GACX,OAAOA,EAAI,GAAK,IAAMA,EAAE1D,SAAS,IAAM0D,EAAE1D,SAAS,GACpD,CAhXAiI,GAAQ2P,OAAS,CACf,KAAS,CAAC,EAAG,IACb,OAAW,CAAC,EAAG,IACf,UAAc,CAAC,EAAG,IAClB,QAAY,CAAC,EAAG,IAChB,MAAU,CAAC,GAAI,IACf,KAAS,CAAC,GAAI,IACd,MAAU,CAAC,GAAI,IACf,KAAS,CAAC,GAAI,IACd,KAAS,CAAC,GAAI,IACd,MAAU,CAAC,GAAI,IACf,QAAY,CAAC,GAAI,IACjB,IAAQ,CAAC,GAAI,IACb,OAAW,CAAC,GAAI,KAIlB3P,GAAQoQ,OAAS,CACf,QAAW,OACX,OAAU,SACV,QAAW,SACX,UAAa,OACb,KAAQ,OACR,OAAU,QACV,KAAQ,UAER,OAAU,OAyVZ,IAAIsC,GAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACxD,MAAO,MAAO,OAiB5B,SAAS5C,GAAQ6C,EAAQC,GAEvB,IAAKA,IAAQvE,GAASuE,GAAM,OAAOD,EAInC,IAFA,IAAI/I,EAAOxC,OAAOwC,KAAKgJ,GACnB1d,EAAI0U,EAAK7T,OACNb,KACLyd,EAAO/I,EAAK1U,IAAM0d,EAAIhJ,EAAK1U,IAE7B,OAAOyd,CACT,CACA,SAASnB,GAAexX,EAAK6Y,GAC3B,OAAOzL,OAAOzO,UAAU6Y,eAAerZ,KAAK6B,EAAK6Y,EACnD,CAEA,IAAIC,GAAO,CACTC,SAAU3F,GACV0C,QAASA,GACTjY,IAtBF,WAVA,IACMb,EACAgc,EASJvM,QAAQ5O,IAAI,WAVRb,EAAI,IAAI6U,KACRmH,EAAO,CAACP,GAAIzb,EAAEic,YACNR,GAAIzb,EAAEkc,cACNT,GAAIzb,EAAEmc,eAAevd,KAAK,KAC/B,CAACoB,EAAEoc,UAAWV,GAAO1b,EAAEqc,YAAaL,GAAMpd,KAAK,MAMlBiY,GAAOpP,MAAM,KAAMqB,WACzD,EAqBEZ,SAnDF,SAAkBoU,GAChB,OAAOnU,GAAWmU,EACpB,EAkDEC,YA7DF,SAAqB3a,GACnB,OAAe,OAARA,GACe,kBAARA,GACQ,iBAARA,GACQ,iBAARA,GACQ,iBAARA,QACQ,IAARA,CAChB,EAuDE0X,WAAYA,GACZW,QAASA,GACTG,OAAQA,GACR/C,SAAUA,GACV8C,SAAUA,GACV1C,YAAaA,GACb+E,SAjGF,SAAoB5a,GAClB,MAAsB,iBAARA,CAChB,EAgGEmV,SAAUA,GACV0C,SAAUA,GACVgD,kBAhHF,SAA2B7a,GACzB,OAAc,MAAPA,CACT,EA+GEwV,OAAQA,GACRwB,UAAWA,GACX3X,QAASA,GACT+H,QAASA,GACTsO,UAAWA,GACXT,OAAQA,GACRmB,SAAUA,IAGZ,SAAS0E,KACP5a,KAAK6a,KAAO,KACZ7a,KAAK8a,KAAO,KACZ9a,KAAK/C,OAAS,CAChB,CAEA2d,GAAW/a,UAAUhD,KAAO,SAAUke,GACpC,IAAIC,EAAQ,CAAExZ,KAAMuZ,EAAGE,KAAM,MACzBjb,KAAK/C,OAAS,EAAG+C,KAAK8a,KAAKG,KAAOD,EAAWhb,KAAK6a,KAAOG,EAC7Dhb,KAAK8a,KAAOE,IACVhb,KAAK/C,MACT,EAEA2d,GAAW/a,UAAUwN,QAAU,SAAU0N,GACvC,IAAIC,EAAQ,CAAExZ,KAAMuZ,EAAGE,KAAMjb,KAAK6a,MACd,IAAhB7a,KAAK/C,SAAc+C,KAAK8a,KAAOE,GACnChb,KAAK6a,KAAOG,IACVhb,KAAK/C,MACT,EAEA2d,GAAW/a,UAAUqb,MAAQ,WAC3B,GAAoB,IAAhBlb,KAAK/C,OAAT,CACA,IAAI4K,EAAM7H,KAAK6a,KAAKrZ,KAGpB,OAFoB,IAAhBxB,KAAK/C,OAAc+C,KAAK6a,KAAO7a,KAAK8a,KAAO,KAAU9a,KAAK6a,KAAO7a,KAAK6a,KAAKI,OAC7Ejb,KAAK/C,OACA4K,CAJsB,CAK/B,EAEA+S,GAAW/a,UAAUsb,MAAQ,WAC3Bnb,KAAK6a,KAAO7a,KAAK8a,KAAO,KACxB9a,KAAK/C,OAAS,CAChB,EAEA2d,GAAW/a,UAAU/C,KAAO,SAAUqB,GACpC,GAAoB,IAAhB6B,KAAK/C,OAAc,MAAO,GAG9B,IAFA,IAAIme,EAAIpb,KAAK6a,KACThT,EAAM,GAAKuT,EAAE5Z,KACV4Z,EAAIA,EAAEH,MACXpT,GAAO1J,EAAIid,EAAE5Z,KACd,OAAOqG,CACV,EAEA+S,GAAW/a,UAAU6G,OAAS,SAAU/D,GACtC,GAAoB,IAAhB3C,KAAK/C,OAAc,OAAOsC,EAAO0G,MAAM,GAC3C,GAAoB,IAAhBjG,KAAK/C,OAAc,OAAO+C,KAAK6a,KAAKrZ,KAIxC,IAHA,IAAIqG,EAAMtI,EAAOW,YAAYyC,IAAM,GAC/ByY,EAAIpb,KAAK6a,KACTze,EAAI,EACDgf,GACLA,EAAE5Z,KAAKH,KAAKwG,EAAKzL,GACjBA,GAAKgf,EAAE5Z,KAAKvE,OACZme,EAAIA,EAAEH,KAER,OAAOpT,CACT,EAuBA,IAAIwT,GAAmB9b,EAAOuB,YACzB,SAASD,GACP,OAAQA,GAAYA,EAASqB,eAC3B,IAAK,MAAO,IAAK,OAAQ,IAAK,QAAS,IAAK,QAAS,IAAK,SAAU,IAAK,SAAU,IAAK,OAAQ,IAAK,QAAS,IAAK,UAAW,IAAK,WAAY,IAAK,MAAO,OAAO,EAClK,QAAS,OAAO,EAEpB,EAiBL,SAASoZ,GAAcza,GAGrB,OAFAb,KAAKa,UAAYA,GAAY,QAAQqB,cAAc6J,QAAQ,OAAQ,IAfrE,SAAwBlL,GACtB,GAAIA,IAAawa,GAAiBxa,GAChC,MAAM,IAAIZ,MAAM,qBAAuBY,EAE3C,CAYE0a,CAAe1a,GACPb,KAAKa,UACX,IAAK,OAEHb,KAAKwb,cAAgB,EACrB,MACF,IAAK,OACL,IAAK,UAEHxb,KAAKwb,cAAgB,EACrBxb,KAAKyb,qBAAuBC,GAC5B,MACF,IAAK,SAEH1b,KAAKwb,cAAgB,EACrBxb,KAAKyb,qBAAuBE,GAC5B,MACF,QAEE,YADA3b,KAAKxB,MAAQod,IAMjB5b,KAAK6b,WAAa,IAAItc,EAAO,GAE7BS,KAAK8b,aAAe,EAEpB9b,KAAK+b,WAAa,CACpB,CAkIA,SAASH,GAAiBre,GACxB,OAAOA,EAAO0B,SAASe,KAAKa,SAC9B,CAEA,SAAS6a,GAA0Bne,GACjCyC,KAAK8b,aAAeve,EAAON,OAAS,EACpC+C,KAAK+b,WAAa/b,KAAK8b,aAAe,EAAI,CAC5C,CAEA,SAASH,GAA2Bpe,GAClCyC,KAAK8b,aAAeve,EAAON,OAAS,EACpC+C,KAAK+b,WAAa/b,KAAK8b,aAAe,EAAI,CAC5C,CAnIAR,GAAczb,UAAUrB,MAAQ,SAASjB,GAGvC,IAFA,IAAIye,EAAU,GAEPhc,KAAK+b,YAAY,CAEtB,IAAIE,EAAa1e,EAAON,QAAU+C,KAAK+b,WAAa/b,KAAK8b,aACrD9b,KAAK+b,WAAa/b,KAAK8b,aACvBve,EAAON,OAMX,GAHAM,EAAO8D,KAAKrB,KAAK6b,WAAY7b,KAAK8b,aAAc,EAAGG,GACnDjc,KAAK8b,cAAgBG,EAEjBjc,KAAK8b,aAAe9b,KAAK+b,WAE3B,MAAO,GAWT,GAPAxe,EAASA,EAAOyD,MAAMib,EAAW1e,EAAON,WAMpCif,GAHJF,EAAUhc,KAAK6b,WAAW7a,MAAM,EAAGhB,KAAK+b,YAAY9c,SAASe,KAAKa,WAG3CxE,WAAW2f,EAAQ/e,OAAS,KACnC,OAAUif,GAAY,OAAtC,CAQA,GAHAlc,KAAK8b,aAAe9b,KAAK+b,WAAa,EAGhB,IAAlBxe,EAAON,OACT,OAAO+e,EAET,KAPA,CAHEhc,KAAK+b,YAAc/b,KAAKwb,cACxBQ,EAAU,EAUd,CAGAhc,KAAKyb,qBAAqBle,GAE1B,IAAId,EAAMc,EAAON,OACb+C,KAAK+b,aAEPxe,EAAO8D,KAAKrB,KAAK6b,WAAY,EAAGte,EAAON,OAAS+C,KAAK8b,aAAcrf,GACnEA,GAAOuD,KAAK8b,cAKd,IACII,EADAzf,GAFJuf,GAAWze,EAAO0B,SAASe,KAAKa,SAAU,EAAGpE,IAE3BQ,OAAS,EAG3B,IAFIif,EAAWF,EAAQ3f,WAAWI,KAElB,OAAUyf,GAAY,MAAQ,CAC5C,IAAIva,EAAO3B,KAAKwb,cAKhB,OAJAxb,KAAK+b,YAAcpa,EACnB3B,KAAK8b,cAAgBna,EACrB3B,KAAK6b,WAAWxa,KAAKrB,KAAK6b,WAAYla,EAAM,EAAGA,GAC/CpE,EAAO8D,KAAKrB,KAAK6b,WAAY,EAAG,EAAGla,GAC5Bqa,EAAQG,UAAU,EAAG1f,EAC9B,CAGA,OAAOuf,CACT,EAMAV,GAAczb,UAAU4b,qBAAuB,SAASle,GAMtD,IAJA,IAAInB,EAAKmB,EAAON,QAAU,EAAK,EAAIM,EAAON,OAInCb,EAAI,EAAGA,IAAK,CACjB,IAAIsC,EAAInB,EAAOA,EAAON,OAASb,GAK/B,GAAS,GAALA,GAAUsC,GAAK,GAAK,EAAM,CAC5BsB,KAAK+b,WAAa,EAClB,KACF,CAGA,GAAI3f,GAAK,GAAKsC,GAAK,GAAK,GAAM,CAC5BsB,KAAK+b,WAAa,EAClB,KACF,CAGA,GAAI3f,GAAK,GAAKsC,GAAK,GAAK,GAAM,CAC5BsB,KAAK+b,WAAa,EAClB,KACF,CACF,CACA/b,KAAK8b,aAAe1f,CACtB,EAEAkf,GAAczb,UAAUpD,IAAM,SAASc,GACrC,IAAIyH,EAAM,GAIV,GAHIzH,GAAUA,EAAON,SACnB+H,EAAMhF,KAAKxB,MAAMjB,IAEfyC,KAAK8b,aAAc,CACrB,IAAIM,EAAKpc,KAAK8b,aACVxY,EAAMtD,KAAK6b,WACXQ,EAAMrc,KAAKa,SACfmE,GAAO1B,EAAItC,MAAM,EAAGob,GAAInd,SAASod,EACnC,CAEA,OAAOrX,CACT,EAgBAsX,GAASC,cAAgBA,GAEzB,IAAIC,GAAQtG,GAAS,UAwBrB,SAASqG,GAAcE,EAASC,GAE9BD,EAAUA,GAAW,CAAC,EAItBzc,KAAK2c,aAAeF,EAAQE,WAExBD,aAAkBE,KAAQ5c,KAAK2c,WAAa3c,KAAK2c,cAAgBF,EAAQI,oBAI7E,IAAIC,EAAML,EAAQM,cACdC,EAAahd,KAAK2c,WAAa,GAAK,MACxC3c,KAAK+c,cAAgBD,GAAe,IAARA,EAAYA,EAAME,EAG9Chd,KAAK+c,gBAAmB/c,KAAK+c,cAK7B/c,KAAKzC,OAAS,IAAIqd,GAClB5a,KAAK/C,OAAS,EACd+C,KAAKid,MAAQ,KACbjd,KAAKkd,WAAa,EAClBld,KAAKmd,QAAU,KACfnd,KAAKod,OAAQ,EACbpd,KAAKqd,YAAa,EAClBrd,KAAKsd,SAAU,EAMftd,KAAKud,MAAO,EAIZvd,KAAKwd,cAAe,EACpBxd,KAAKyd,iBAAkB,EACvBzd,KAAK0d,mBAAoB,EACzB1d,KAAK2d,iBAAkB,EAKvB3d,KAAK4d,gBAAkBnB,EAAQmB,iBAAmB,OAIlD5d,KAAK6d,QAAS,EAGd7d,KAAK8d,WAAa,EAGlB9d,KAAK+d,aAAc,EAEnB/d,KAAKge,QAAU,KACfhe,KAAKa,SAAW,KACZ4b,EAAQ5b,WACVb,KAAKge,QAAU,IAAI1C,GAAcmB,EAAQ5b,UACzCb,KAAKa,SAAW4b,EAAQ5b,SAE5B,CACA,SAASyb,GAASG,GAEhB,KAAMzc,gBAAgBsc,IAAW,OAAO,IAAIA,GAASG,GAErDzc,KAAKie,eAAiB,IAAI1B,GAAcE,EAASzc,MAGjDA,KAAKke,UAAW,EAEZzB,GAAmC,mBAAjBA,EAAQpZ,OAAqBrD,KAAKme,MAAQ1B,EAAQpZ,MAExEmJ,GAAanN,KAAKW,KACpB,CA8BA,SAASoe,GAAiB1B,EAAQ2B,EAAOC,EAAOzd,EAAU0d,GACxD,IAAIzP,EA6MN,SAAsBuP,EAAOC,GAC3B,IAAIxP,EAAK,KACJzI,GAAWiY,IAA2B,iBAAVA,GAA7B,MAAmDA,GAA0CD,EAAM1B,aACrG7N,EAAK,IAAI1O,UAAU,oCAErB,OAAO0O,CACT,CAnNW0P,CAAaH,EAAOC,GAC7B,GAAIxP,EACF4N,EAAOvP,KAAK,QAAS2B,QAChB,GAAc,OAAVwP,EACTD,EAAMf,SAAU,EAiNpB,SAAoBZ,EAAQ2B,GAC1B,GAAIA,EAAMjB,MAAO,OACjB,GAAIiB,EAAML,QAAS,CACjB,IAAIM,EAAQD,EAAML,QAAQvhB,MACtB6hB,GAASA,EAAMrhB,SACjBohB,EAAM9gB,OAAOV,KAAKyhB,GAClBD,EAAMphB,QAAUohB,EAAM1B,WAAa,EAAI2B,EAAMrhB,OAEjD,CACAohB,EAAMjB,OAAQ,EAGdqB,GAAa/B,EACf,CA7NIgC,CAAWhC,EAAQ2B,QACd,GAAIA,EAAM1B,YAAc2B,GAASA,EAAMrhB,OAAS,EACrD,GAAIohB,EAAMjB,QAAUmB,EAAY,CAC9B,IAAI3gB,EAAI,IAAIqC,MAAM,2BAClByc,EAAOvP,KAAK,QAASvP,EACvB,MAAO,GAAIygB,EAAMhB,YAAckB,EAAY,CACzC,IAAII,EAAK,IAAI1e,MAAM,oCACnByc,EAAOvP,KAAK,QAASwR,EACvB,KAAO,CACL,IAAIC,GACAP,EAAML,SAAYO,GAAe1d,IACnCyd,EAAQD,EAAML,QAAQxf,MAAM8f,GAC5BM,GAAWP,EAAM1B,YAA+B,IAAjB2B,EAAMrhB,QAGlCshB,IAAYF,EAAMf,SAAU,GAI5BsB,IAECP,EAAMlB,SAA4B,IAAjBkB,EAAMphB,SAAiBohB,EAAMd,MAChDb,EAAOvP,KAAK,OAAQmR,GACpB5B,EAAOrZ,KAAK,KAGZgb,EAAMphB,QAAUohB,EAAM1B,WAAa,EAAI2B,EAAMrhB,OACzCshB,EAAYF,EAAM9gB,OAAO8P,QAAQiR,GAAYD,EAAM9gB,OAAOV,KAAKyhB,GAE/DD,EAAMb,cAAciB,GAAa/B,KA2N/C,SAAuBA,EAAQ2B,GACxBA,EAAMN,cACTM,EAAMN,aAAc,EACpB3L,GAASyM,GAAgBnC,EAAQ2B,GAErC,CA5NMS,CAAcpC,EAAQ2B,EACxB,MACUE,IACVF,EAAMf,SAAU,GAGlB,OAUF,SAAsBe,GACpB,OAAQA,EAAMjB,QAAUiB,EAAMb,cAAgBa,EAAMphB,OAASohB,EAAMtB,eAAkC,IAAjBsB,EAAMphB,OAC5F,CAZS8hB,CAAaV,EACtB,CAjLA/J,GAAWgI,GAAU9P,IA2GrB8P,GAASzc,UAAUhD,KAAO,SAAUyhB,EAAOzd,GACzC,IAAIwd,EAAQre,KAAKie,eAUjB,OARKI,EAAM1B,YAA+B,iBAAV2B,IAC9Bzd,EAAWA,GAAYwd,EAAMT,mBACZS,EAAMxd,WACrByd,EAAQ/e,EAAOY,KAAKme,EAAOzd,GAC3BA,EAAW,IAIRud,GAAiBpe,KAAMqe,EAAOC,EAAOzd,GAAU,EACxD,EAGAyb,GAASzc,UAAUwN,QAAU,SAAUiR,GAErC,OAAOF,GAAiBpe,KADZA,KAAKie,eACoBK,EAAO,IAAI,EAClD,EAEAhC,GAASzc,UAAUmf,SAAW,WAC5B,OAAuC,IAAhChf,KAAKie,eAAed,OAC7B,EA8DAb,GAASzc,UAAUof,YAAc,SAAU5C,GAGzC,OAFArc,KAAKie,eAAeD,QAAU,IAAI1C,GAAce,GAChDrc,KAAKie,eAAepd,SAAWwb,EACxBrc,IACT,EAGA,IAAIkf,GAAU,QAoBd,SAASC,GAAcxc,EAAG0b,GACxB,OAAI1b,GAAK,GAAsB,IAAjB0b,EAAMphB,QAAgBohB,EAAMjB,MAAc,EACpDiB,EAAM1B,WAAmB,EACzBha,GAAMA,EAEJ0b,EAAMlB,SAAWkB,EAAMphB,OAAeohB,EAAM9gB,OAAOsd,KAAKrZ,KAAKvE,OAAmBohB,EAAMphB,QAGxF0F,EAAI0b,EAAMtB,gBAAesB,EAAMtB,cA3BrC,SAAiCpa,GAc/B,OAbIA,GAAKuc,GACPvc,EAAIuc,IAIJvc,IACAA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,GACXA,KAEKA,CACT,CAYqDyc,CAAwBzc,IACvEA,GAAK0b,EAAMphB,OAAe0F,EAEzB0b,EAAMjB,MAIJiB,EAAMphB,QAHXohB,EAAMb,cAAe,EACd,GAGX,CAiIA,SAASiB,GAAa/B,GACpB,IAAI2B,EAAQ3B,EAAOuB,eACnBI,EAAMb,cAAe,EAChBa,EAAMZ,kBACTjB,GAAM,eAAgB6B,EAAMlB,SAC5BkB,EAAMZ,iBAAkB,EACpBY,EAAMd,KAAMnL,GAASiN,GAAe3C,GAAa2C,GAAc3C,GAEvE,CAEA,SAAS2C,GAAc3C,GACrBF,GAAM,iBACNE,EAAOvP,KAAK,YACZmS,GAAK5C,EACP,CAeA,SAASmC,GAAenC,EAAQ2B,GAE9B,IADA,IAAIrhB,EAAMqhB,EAAMphB,QACRohB,EAAMf,UAAYe,EAAMlB,UAAYkB,EAAMjB,OAASiB,EAAMphB,OAASohB,EAAMtB,gBAC9EP,GAAM,wBACNE,EAAOrZ,KAAK,GACRrG,IAAQqhB,EAAMphB,SAELD,EAAMqhB,EAAMphB,OAE3BohB,EAAMN,aAAc,CACtB,CAoOA,SAASwB,GAAiB7jB,GACxB8gB,GAAM,4BACN9gB,EAAK2H,KAAK,EACZ,CAqBA,SAASmc,GAAQ9C,EAAQ2B,GAClBA,EAAMf,UACTd,GAAM,iBACNE,EAAOrZ,KAAK,IAGdgb,EAAMV,iBAAkB,EACxBU,EAAMP,WAAa,EACnBpB,EAAOvP,KAAK,UACZmS,GAAK5C,GACD2B,EAAMlB,UAAYkB,EAAMf,SAASZ,EAAOrZ,KAAK,EACnD,CAYA,SAASic,GAAK5C,GACZ,IAAI2B,EAAQ3B,EAAOuB,eAEnB,IADAzB,GAAM,OAAQ6B,EAAMlB,SACbkB,EAAMlB,SAA6B,OAAlBT,EAAOrZ,SACjC,CAwEA,SAASoc,GAAS9c,EAAG0b,GAEnB,OAAqB,IAAjBA,EAAMphB,OAAqB,MAG3BohB,EAAM1B,WAAY9U,EAAMwW,EAAM9gB,OAAO2d,SAAkBvY,GAAKA,GAAK0b,EAAMphB,QAEtD4K,EAAfwW,EAAML,QAAeK,EAAM9gB,OAAOT,KAAK,IAAqC,IAAxBuhB,EAAM9gB,OAAON,OAAoBohB,EAAM9gB,OAAOsd,KAAKrZ,KAAgB6c,EAAM9gB,OAAOmJ,OAAO2X,EAAMphB,QACrJohB,EAAM9gB,OAAO4d,SAGbtT,EASJ,SAAyBlF,EAAGgE,EAAM+Y,GAChC,IAAI7X,EACAlF,EAAIgE,EAAKkU,KAAKrZ,KAAKvE,QAErB4K,EAAMlB,EAAKkU,KAAKrZ,KAAKR,MAAM,EAAG2B,GAC9BgE,EAAKkU,KAAKrZ,KAAOmF,EAAKkU,KAAKrZ,KAAKR,MAAM2B,IAGtCkF,EAFSlF,IAAMgE,EAAKkU,KAAKrZ,KAAKvE,OAExB0J,EAAKuU,QAGLwE,EASV,SAA8B/c,EAAGgE,GAC/B,IAAIyU,EAAIzU,EAAKkU,KACTnc,EAAI,EACJmJ,EAAMuT,EAAE5Z,KACZmB,GAAKkF,EAAI5K,OACT,KAAOme,EAAIA,EAAEH,MAAM,CACjB,IAAI5W,EAAM+W,EAAE5Z,KACRme,EAAKhd,EAAI0B,EAAIpH,OAASoH,EAAIpH,OAAS0F,EAGvC,GAFIgd,IAAOtb,EAAIpH,OAAQ4K,GAAOxD,EAASwD,GAAOxD,EAAIrD,MAAM,EAAG2B,GAEjD,KADVA,GAAKgd,GACQ,CACPA,IAAOtb,EAAIpH,UACXyB,EACE0c,EAAEH,KAAMtU,EAAKkU,KAAOO,EAAEH,KAAUtU,EAAKkU,KAAOlU,EAAKmU,KAAO,OAE5DnU,EAAKkU,KAAOO,EACZA,EAAE5Z,KAAO6C,EAAIrD,MAAM2e,IAErB,KACF,GACEjhB,CACJ,CAEA,OADAiI,EAAK1J,QAAUyB,EACRmJ,CACT,CAjCuB+X,CAAqBjd,EAAGgE,GAsC/C,SAAwBhE,EAAGgE,GACzB,IAAIkB,EAAMtI,EAAOW,YAAYyC,GACzByY,EAAIzU,EAAKkU,KACTnc,EAAI,EACR0c,EAAE5Z,KAAKH,KAAKwG,GACZlF,GAAKyY,EAAE5Z,KAAKvE,OACZ,KAAOme,EAAIA,EAAEH,MAAM,CACjB,IAAI3X,EAAM8X,EAAE5Z,KACRme,EAAKhd,EAAIW,EAAIrG,OAASqG,EAAIrG,OAAS0F,EAGvC,GAFAW,EAAIjC,KAAKwG,EAAKA,EAAI5K,OAAS0F,EAAG,EAAGgd,GAEvB,KADVhd,GAAKgd,GACQ,CACPA,IAAOrc,EAAIrG,UACXyB,EACE0c,EAAEH,KAAMtU,EAAKkU,KAAOO,EAAEH,KAAUtU,EAAKkU,KAAOlU,EAAKmU,KAAO,OAE5DnU,EAAKkU,KAAOO,EACZA,EAAE5Z,KAAO8B,EAAItC,MAAM2e,IAErB,KACF,GACEjhB,CACJ,CAEA,OADAiI,EAAK1J,QAAUyB,EACRmJ,CACT,CA/DuDgY,CAAeld,EAAGgE,GAEvE,OAAOkB,CACT,CAvBUiY,CAAgBnd,EAAG0b,EAAM9gB,OAAQ8gB,EAAML,SAGxCnW,GAVP,IAAIA,CAWN,CAiFA,SAASkY,GAAYrD,GACnB,IAAI2B,EAAQ3B,EAAOuB,eAInB,GAAII,EAAMphB,OAAS,EAAG,MAAM,IAAIgD,MAAM,8CAEjCoe,EAAMhB,aACTgB,EAAMjB,OAAQ,EACdhL,GAAS4N,GAAe3B,EAAO3B,GAEnC,CAEA,SAASsD,GAAc3B,EAAO3B,GAEvB2B,EAAMhB,YAA+B,IAAjBgB,EAAMphB,SAC7BohB,EAAMhB,YAAa,EACnBX,EAAOwB,UAAW,EAClBxB,EAAOvP,KAAK,OAEhB,CAQA,SAASpK,GAAQkd,EAAIzZ,GACnB,IAAK,IAAIpK,EAAI,EAAGsP,EAAIuU,EAAGhjB,OAAQb,EAAIsP,EAAGtP,IACpC,GAAI6jB,EAAG7jB,KAAOoK,EAAG,OAAOpK,EAE1B,OAAQ,CACV,CASA,SAAS8jB,KAAO,CAEhB,SAASC,GAAS7B,EAAOzd,EAAUuf,GACjCpgB,KAAKse,MAAQA,EACbte,KAAKa,SAAWA,EAChBb,KAAKqgB,SAAWD,EAChBpgB,KAAKib,KAAO,IACd,CAEA,SAASqF,GAAc7D,EAASC,GAC9BpO,OAAOiS,eAAevgB,KAAM,SAAU,CACpCoZ,IAAK5D,IAAU,WACb,OAAOxV,KAAKwgB,WACd,GAAG,gFAEL/D,EAAUA,GAAW,CAAC,EAItBzc,KAAK2c,aAAeF,EAAQE,WAExBD,aAAkBE,KAAQ5c,KAAK2c,WAAa3c,KAAK2c,cAAgBF,EAAQgE,oBAK7E,IAAI3D,EAAML,EAAQM,cACdC,EAAahd,KAAK2c,WAAa,GAAK,MACxC3c,KAAK+c,cAAgBD,GAAe,IAARA,EAAYA,EAAME,EAG9Chd,KAAK+c,gBAAmB/c,KAAK+c,cAE7B/c,KAAK0gB,WAAY,EAEjB1gB,KAAK2gB,QAAS,EAEd3gB,KAAKod,OAAQ,EAEbpd,KAAK4gB,UAAW,EAKhB,IAAIC,GAAqC,IAA1BpE,EAAQqE,cACvB9gB,KAAK8gB,eAAiBD,EAKtB7gB,KAAK4d,gBAAkBnB,EAAQmB,iBAAmB,OAKlD5d,KAAK/C,OAAS,EAGd+C,KAAK+gB,SAAU,EAGf/gB,KAAKghB,OAAS,EAMdhhB,KAAKud,MAAO,EAKZvd,KAAKihB,kBAAmB,EAGxBjhB,KAAKkhB,QAAU,SAAUpS,IA4M3B,SAAiB4N,EAAQ5N,GACvB,IAAIuP,EAAQ3B,EAAOyE,eACf5D,EAAOc,EAAMd,KACb6C,EAAK/B,EAAM+C,QAIf,GAdF,SAA4B/C,GAC1BA,EAAM0C,SAAU,EAChB1C,EAAM+C,QAAU,KAChB/C,EAAMphB,QAAUohB,EAAMgD,SACtBhD,EAAMgD,SAAW,CACnB,CAOEC,CAAmBjD,GAEfvP,GAtBN,SAAsB4N,EAAQ2B,EAAOd,EAAMzO,EAAIsR,KAC3C/B,EAAMkD,UACJhE,EAAMnL,GAASgO,EAAItR,GAASsR,EAAGtR,GAEnC4N,EAAOyE,eAAeK,cAAe,EACrC9E,EAAOvP,KAAK,QAAS2B,EACvB,CAgBU2S,CAAa/E,EAAQ2B,EAAOd,EAAMzO,EAAIsR,OAAS,CAErD,IAAIQ,EAAWc,GAAWrD,GAErBuC,GAAavC,EAAM2C,QAAW3C,EAAM4C,mBAAoB5C,EAAMsD,iBACjEC,GAAYlF,EAAQ2B,GAGlBd,EAEAnL,GAASyP,GAAYnF,EAAQ2B,EAAOuC,EAAUR,GAG9CyB,GAAWnF,EAAQ2B,EAAOuC,EAAUR,EAE1C,CACF,CAlOIc,CAAQxE,EAAQ5N,EAClB,EAGA9O,KAAKohB,QAAU,KAGfphB,KAAKqhB,SAAW,EAEhBrhB,KAAK2hB,gBAAkB,KACvB3hB,KAAK8hB,oBAAsB,KAI3B9hB,KAAKuhB,UAAY,EAIjBvhB,KAAK+hB,aAAc,EAGnB/hB,KAAKwhB,cAAe,EAGpBxhB,KAAKgiB,qBAAuB,EAI5BhiB,KAAKiiB,mBAAqB,IAAIC,GAAcliB,KAC9C,CAWA,SAASmiB,GAAS1F,GAIhB,KAAMzc,gBAAgBmiB,IAAeniB,gBAAgB4c,IAAS,OAAO,IAAIuF,GAAS1F,GAElFzc,KAAKmhB,eAAiB,IAAIb,GAAc7D,EAASzc,MAGjDA,KAAK2U,UAAW,EAEZ8H,IAC2B,mBAAlBA,EAAQje,QAAsBwB,KAAKoiB,OAAS3F,EAAQje,OAEjC,mBAAnBie,EAAQ4F,SAAuBriB,KAAKsiB,QAAU7F,EAAQ4F,SAGnE7V,GAAanN,KAAKW,KACpB,CAyHA,SAASuiB,GAAQ7F,EAAQ2B,EAAOgE,EAAQrlB,EAAKshB,EAAOzd,EAAUuf,GAC5D/B,EAAMgD,SAAWrkB,EACjBqhB,EAAM+C,QAAUhB,EAChB/B,EAAM0C,SAAU,EAChB1C,EAAMd,MAAO,EACT8E,EAAQ3F,EAAO4F,QAAQhE,EAAOD,EAAM6C,SAAcxE,EAAO0F,OAAO9D,EAAOzd,EAAUwd,EAAM6C,SAC3F7C,EAAMd,MAAO,CACf,CA0CA,SAASsE,GAAWnF,EAAQ2B,EAAOuC,EAAUR,GACtCQ,GASP,SAAsBlE,EAAQ2B,GACP,IAAjBA,EAAMphB,QAAgBohB,EAAMqC,YAC9BrC,EAAMqC,WAAY,EAClBhE,EAAOvP,KAAK,SAEhB,CAdiBqV,CAAa9F,EAAQ2B,GACpCA,EAAMkD,YACNnB,IACAqC,GAAY/F,EAAQ2B,EACtB,CAaA,SAASuD,GAAYlF,EAAQ2B,GAC3BA,EAAM4C,kBAAmB,EACzB,IAAIjG,EAAQqD,EAAMsD,gBAElB,GAAIjF,EAAO4F,SAAWtH,GAASA,EAAMC,KAAM,CAEzC,IAAIvP,EAAI2S,EAAM2D,qBACVzkB,EAAS,IAAIvB,MAAM0P,GACnBgX,EAASrE,EAAM4D,mBACnBS,EAAO1H,MAAQA,EAGf,IADA,IAAItN,EAAQ,EACLsN,GACLzd,EAAOmQ,GAASsN,EAChBA,EAAQA,EAAMC,KACdvN,GAAS,EAGX6U,GAAQ7F,EAAQ2B,GAAO,EAAMA,EAAMphB,OAAQM,EAAQ,GAAImlB,EAAOC,QAI9DtE,EAAMkD,YACNlD,EAAMyD,oBAAsB,KACxBY,EAAOzH,MACToD,EAAM4D,mBAAqBS,EAAOzH,KAClCyH,EAAOzH,KAAO,MAEdoD,EAAM4D,mBAAqB,IAAIC,GAAc7D,EAEjD,KAAO,CAEL,KAAOrD,GAAO,CACZ,IAAIsD,EAAQtD,EAAMsD,MACdzd,EAAWma,EAAMna,SACjBuf,EAAKpF,EAAMqF,SASf,GANAkC,GAAQ7F,EAAQ2B,GAAO,EAFbA,EAAM1B,WAAa,EAAI2B,EAAMrhB,OAEJqhB,EAAOzd,EAAUuf,GACpDpF,EAAQA,EAAMC,KAKVoD,EAAM0C,QACR,KAEJ,CAEc,OAAV/F,IAAgBqD,EAAMyD,oBAAsB,KAClD,CAEAzD,EAAM2D,qBAAuB,EAC7B3D,EAAMsD,gBAAkB3G,EACxBqD,EAAM4C,kBAAmB,CAC3B,CAgCA,SAASS,GAAWrD,GAClB,OAAOA,EAAMsC,QAA2B,IAAjBtC,EAAMphB,QAA0C,OAA1BohB,EAAMsD,kBAA6BtD,EAAMuC,WAAavC,EAAM0C,OAC3G,CAEA,SAAS6B,GAAUlG,EAAQ2B,GACpBA,EAAM0D,cACT1D,EAAM0D,aAAc,EACpBrF,EAAOvP,KAAK,aAEhB,CAEA,SAASsV,GAAY/F,EAAQ2B,GAC3B,IAAIwE,EAAOnB,GAAWrD,GAUtB,OATIwE,IACsB,IAApBxE,EAAMkD,WACRqB,GAAUlG,EAAQ2B,GAClBA,EAAMuC,UAAW,EACjBlE,EAAOvP,KAAK,WAEZyV,GAAUlG,EAAQ2B,IAGfwE,CACT,CAcA,SAASX,GAAc7D,GACrB,IAAIyE,EAAQ9iB,KAEZA,KAAKib,KAAO,KACZjb,KAAKgb,MAAQ,KAEbhb,KAAK2iB,OAAS,SAAUxT,GACtB,IAAI6L,EAAQ8H,EAAM9H,MAElB,IADA8H,EAAM9H,MAAQ,KACPA,GAAO,CACZ,IAAIoF,EAAKpF,EAAMqF,SACfhC,EAAMkD,YACNnB,EAAGjR,GACH6L,EAAQA,EAAMC,IAChB,CACIoD,EAAM4D,mBACR5D,EAAM4D,mBAAmBhH,KAAO6H,EAEhCzE,EAAM4D,mBAAqBa,CAE/B,CACF,CAjmCAxG,GAASzc,UAAUwD,KAAO,SAAUV,GAClC6Z,GAAM,OAAQ7Z,GACdA,EAAIqB,SAASrB,EAAG,IAChB,IAAI0b,EAAQre,KAAKie,eACb8E,EAAQpgB,EAOZ,GALU,IAANA,IAAS0b,EAAMZ,iBAAkB,GAK3B,IAAN9a,GAAW0b,EAAMb,eAAiBa,EAAMphB,QAAUohB,EAAMtB,eAAiBsB,EAAMjB,OAGjF,OAFAZ,GAAM,qBAAsB6B,EAAMphB,OAAQohB,EAAMjB,OAC3B,IAAjBiB,EAAMphB,QAAgBohB,EAAMjB,MAAO2C,GAAY/f,MAAWye,GAAaze,MACpE,KAMT,GAAU,KAHV2C,EAAIwc,GAAcxc,EAAG0b,KAGNA,EAAMjB,MAEnB,OADqB,IAAjBiB,EAAMphB,QAAc8iB,GAAY/f,MAC7B,KA0BT,IA4BI6H,EA5BAmb,EAAS3E,EAAMb,aAiDnB,OAhDAhB,GAAM,gBAAiBwG,IAGF,IAAjB3E,EAAMphB,QAAgBohB,EAAMphB,OAAS0F,EAAI0b,EAAMtB,gBAEjDP,GAAM,6BADNwG,GAAS,GAMP3E,EAAMjB,OAASiB,EAAMf,QAEvBd,GAAM,mBADNwG,GAAS,GAEAA,IACTxG,GAAM,WACN6B,EAAMf,SAAU,EAChBe,EAAMd,MAAO,EAEQ,IAAjBc,EAAMphB,SAAcohB,EAAMb,cAAe,GAE7Cxd,KAAKme,MAAME,EAAMtB,eACjBsB,EAAMd,MAAO,EAGRc,EAAMf,UAAS3a,EAAIwc,GAAc4D,EAAO1E,KAMnC,QAFDxW,EAAPlF,EAAI,EAAS8c,GAAS9c,EAAG0b,GAAkB,OAG7CA,EAAMb,cAAe,EACrB7a,EAAI,GAEJ0b,EAAMphB,QAAU0F,EAGG,IAAjB0b,EAAMphB,SAGHohB,EAAMjB,QAAOiB,EAAMb,cAAe,GAGnCuF,IAAUpgB,GAAK0b,EAAMjB,OAAO2C,GAAY/f,OAGlC,OAAR6H,GAAc7H,KAAKmN,KAAK,OAAQtF,GAE7BA,CACT,EAyEAyU,GAASzc,UAAUse,MAAQ,SAAUxb,GACnC3C,KAAKmN,KAAK,QAAS,IAAIlN,MAAM,mBAC/B,EAEAqc,GAASzc,UAAUojB,KAAO,SAAUC,EAAMC,GACxC,IAAIjX,EAAMlM,KACNqe,EAAQre,KAAKie,eAEjB,OAAQI,EAAMnB,YACZ,KAAK,EACHmB,EAAMpB,MAAQiG,EACd,MACF,KAAK,EACH7E,EAAMpB,MAAQ,CAACoB,EAAMpB,MAAOiG,GAC5B,MACF,QACE7E,EAAMpB,MAAMpgB,KAAKqmB,GAGrB7E,EAAMnB,YAAc,EACpBV,GAAM,wBAAyB6B,EAAMnB,WAAYiG,GAEjD,IAEIC,GAFUD,IAA6B,IAAjBA,EAAS1mB,IAEf4mB,EAAQC,EAI5B,SAASC,EAASrF,GAChB1B,GAAM,YACF0B,IAAahS,GACfoX,GAEJ,CAEA,SAASD,IACP7G,GAAM,SACN0G,EAAKzmB,KACP,CAbI4hB,EAAMhB,WAAYjL,GAASgR,GAAYlX,EAAIkE,KAAK,MAAOgT,GAE3DF,EAAKhT,GAAG,SAAUqT,GAiBlB,IAAIC,EA4FN,SAAqBtX,GACnB,OAAO,WACL,IAAImS,EAAQnS,EAAI+R,eAChBzB,GAAM,cAAe6B,EAAMP,YACvBO,EAAMP,YAAYO,EAAMP,aACH,IAArBO,EAAMP,YAAoB5R,EAAIsD,UAAU,QAAQvS,SAClDohB,EAAMlB,SAAU,EAChBmC,GAAKpT,GAET,CACF,CAtGgBuX,CAAYvX,GAC1BgX,EAAKhT,GAAG,QAASsT,GAEjB,IAAIE,GAAY,EAChB,SAASJ,IACP9G,GAAM,WAEN0G,EAAKlV,eAAe,QAAS2V,GAC7BT,EAAKlV,eAAe,SAAU4V,GAC9BV,EAAKlV,eAAe,QAASwV,GAC7BN,EAAKlV,eAAe,QAAS6V,GAC7BX,EAAKlV,eAAe,SAAUuV,GAC9BrX,EAAI8B,eAAe,MAAOqV,GAC1BnX,EAAI8B,eAAe,MAAOsV,GAC1BpX,EAAI8B,eAAe,OAAQ8V,GAE3BJ,GAAY,GAORrF,EAAMP,YAAgBoF,EAAK/B,iBAAkB+B,EAAK/B,eAAeT,WAAY8C,GACnF,CAMA,IAAIO,GAAsB,EAE1B,SAASD,EAAOxF,GACd9B,GAAM,UACNuH,GAAsB,GAElB,IADMb,EAAK1kB,MAAM8f,IACCyF,KAKM,IAArB1F,EAAMnB,YAAoBmB,EAAMpB,QAAUiG,GAAQ7E,EAAMnB,WAAa,IAAqC,IAAhCna,GAAQsb,EAAMpB,MAAOiG,MAAkBQ,IACpHlH,GAAM,8BAA+BtQ,EAAI+R,eAAeH,YACxD5R,EAAI+R,eAAeH,aACnBiG,GAAsB,GAExB7X,EAAI8X,QAER,CAIA,SAASH,EAAQ/U,GApenB,IAAiCvN,EAqe7Bib,GAAM,UAAW1N,GACjBmV,IACAf,EAAKlV,eAAe,QAAS6V,GACQ,KAxeRtiB,EAweL,QAAN2hB,EAveL1T,UAAUjO,GAAMtE,SAueWimB,EAAK/V,KAAK,QAAS2B,EAC7D,CAMA,SAAS6U,IACPT,EAAKlV,eAAe,SAAU4V,GAC9BK,GACF,CAEA,SAASL,IACPpH,GAAM,YACN0G,EAAKlV,eAAe,QAAS2V,GAC7BM,GACF,CAGA,SAASA,IACPzH,GAAM,UACNtQ,EAAI+X,OAAOf,EACb,CAWA,OA1DAhX,EAAIgE,GAAG,OAAQ4T,GAjejB,SAAyBrW,EAASyW,EAAOzO,GAGvC,GAAuC,mBAA5BhI,EAAQ0C,gBACjB,OAAO1C,EAAQ0C,gBAAgB+T,EAAOzO,GAMjChI,EAAQR,SAAYQ,EAAQR,QAAQiX,GAEhCloB,MAAMmD,QAAQsO,EAAQR,QAAQiX,IACrCzW,EAAQR,QAAQiX,GAAO7W,QAAQoI,GAE/BhI,EAAQR,QAAQiX,GAAS,CAACzO,EAAIhI,EAAQR,QAAQiX,IAJ9CzW,EAAQyC,GAAGgU,EAAOzO,EAMxB,CA6eEtF,CAAgB+S,EAAM,QAASW,GAO/BX,EAAK9S,KAAK,QAASuT,GAMnBT,EAAK9S,KAAK,SAAUwT,GAQpBV,EAAK/V,KAAK,OAAQjB,GAGbmS,EAAMlB,UACTX,GAAM,eACNtQ,EAAIiY,UAGCjB,CACT,EAcA5G,GAASzc,UAAUokB,OAAS,SAAUf,GACpC,IAAI7E,EAAQre,KAAKie,eAGjB,GAAyB,IAArBI,EAAMnB,WAAkB,OAAOld,KAGnC,GAAyB,IAArBqe,EAAMnB,WAER,OAAIgG,GAAQA,IAAS7E,EAAMpB,QAEtBiG,IAAMA,EAAO7E,EAAMpB,OAGxBoB,EAAMpB,MAAQ,KACdoB,EAAMnB,WAAa,EACnBmB,EAAMlB,SAAU,EACZ+F,GAAMA,EAAK/V,KAAK,SAAUnN,OARWA,KAc3C,IAAKkjB,EAAM,CAET,IAAIkB,EAAQ/F,EAAMpB,MACdjgB,EAAMqhB,EAAMnB,WAChBmB,EAAMpB,MAAQ,KACdoB,EAAMnB,WAAa,EACnBmB,EAAMlB,SAAU,EAEhB,IAAK,IAAIkH,EAAK,EAAGA,EAAKrnB,EAAKqnB,IACzBD,EAAMC,GAAIlX,KAAK,SAAUnN,MAC1B,OAAOA,IACV,CAGA,IAAI5D,EAAI2G,GAAQsb,EAAMpB,MAAOiG,GAC7B,OAAW,IAAP9mB,IAEJiiB,EAAMpB,MAAMqH,OAAOloB,EAAG,GACtBiiB,EAAMnB,YAAc,EACK,IAArBmB,EAAMnB,aAAkBmB,EAAMpB,MAAQoB,EAAMpB,MAAM,IAEtDiG,EAAK/V,KAAK,SAAUnN,OANCA,IASvB,EAIAsc,GAASzc,UAAUqQ,GAAK,SAAUqU,EAAI9O,GACpC,IAAIzQ,EAAMwH,GAAa3M,UAAUqQ,GAAG7Q,KAAKW,KAAMukB,EAAI9O,GAEnD,GAAW,SAAP8O,GAEkC,IAAhCvkB,KAAKie,eAAed,SAAmBnd,KAAKmkB,cAC3C,GAAW,aAAPI,EAAmB,CAC5B,IAAIlG,EAAQre,KAAKie,eACZI,EAAMhB,YAAegB,EAAMX,oBAC9BW,EAAMX,kBAAoBW,EAAMb,cAAe,EAC/Ca,EAAMZ,iBAAkB,EACnBY,EAAMf,QAEAe,EAAMphB,QACfwhB,GAAaze,MAFboS,GAASmN,GAAkBvf,MAKjC,CAEA,OAAOgF,CACT,EACAsX,GAASzc,UAAUoQ,YAAcqM,GAASzc,UAAUqQ,GASpDoM,GAASzc,UAAUskB,OAAS,WAC1B,IAAI9F,EAAQre,KAAKie,eAMjB,OALKI,EAAMlB,UACTX,GAAM,UACN6B,EAAMlB,SAAU,EAMpB,SAAgBT,EAAQ2B,GACjBA,EAAMV,kBACTU,EAAMV,iBAAkB,EACxBvL,GAASoN,GAAS9C,EAAQ2B,GAE9B,CAVI8F,CAAOnkB,KAAMqe,IAERre,IACT,EAsBAsc,GAASzc,UAAUmkB,MAAQ,WAOzB,OANAxH,GAAM,wBAAyBxc,KAAKie,eAAed,UAC/C,IAAUnd,KAAKie,eAAed,UAChCX,GAAM,SACNxc,KAAKie,eAAed,SAAU,EAC9Bnd,KAAKmN,KAAK,UAELnN,IACT,EAWAsc,GAASzc,UAAU2kB,KAAO,SAAU9H,GAClC,IAAI2B,EAAQre,KAAKie,eACbwG,GAAS,EAET/oB,EAAOsE,KA2BX,IAAK,IAAI5D,KA1BTsgB,EAAOxM,GAAG,OAAO,WAEf,GADAsM,GAAM,eACF6B,EAAML,UAAYK,EAAMjB,MAAO,CACjC,IAAIkB,EAAQD,EAAML,QAAQvhB,MACtB6hB,GAASA,EAAMrhB,QAAQvB,EAAKmB,KAAKyhB,EACvC,CAEA5iB,EAAKmB,KAAK,KACZ,IAEA6f,EAAOxM,GAAG,QAAQ,SAAUoO,IAC1B9B,GAAM,gBACF6B,EAAML,UAASM,EAAQD,EAAML,QAAQxf,MAAM8f,IAG3CD,EAAM1B,YAAc,MAAC2B,KAAyDD,EAAM1B,YAAgB2B,GAAUA,EAAMrhB,UAE9GvB,EAAKmB,KAAKyhB,KAElBmG,GAAS,EACT/H,EAAOsH,SAEX,IAIctH,OACIjc,IAAZT,KAAK5D,IAAyC,mBAAdsgB,EAAOtgB,KACzC4D,KAAK5D,GAAK,SAAUsoB,GAClB,OAAO,WACL,OAAOhI,EAAOgI,GAAQ/e,MAAM+W,EAAQ1V,UACtC,CACF,CAJU,CAIR5K,IAoBN,OAgIF,SAAiB6jB,EAAIjL,GACnB,IAAK,IAAI5Y,EAAI,EAAGsP,EAAIuU,EAAGhjB,OAAQb,EAAIsP,EAAGtP,IACpC4Y,EAAEiL,EAAG7jB,GAAIA,EAEb,CAlJE2b,CADa,CAAC,QAAS,QAAS,UAAW,QAAS,WACpC,SAAUwM,GACxB7H,EAAOxM,GAAGqU,EAAI7oB,EAAKyR,KAAKwX,KAAKjpB,EAAM6oB,GACrC,IAIA7oB,EAAKyiB,MAAQ,SAAUxb,GACrB6Z,GAAM,gBAAiB7Z,GACnB8hB,IACFA,GAAS,EACT/H,EAAOyH,SAEX,EAEOzoB,CACT,EAGA4gB,GAASsI,UAAYnF,GA6IrB0C,GAAS7B,cAAgBA,GACzBhM,GAAW6N,GAAU3V,IA6GrB8T,GAAczgB,UAAU2gB,UAAY,WAGlC,IAFA,IAAIqE,EAAU7kB,KAAK2hB,gBACf7Z,EAAM,GACH+c,GACL/c,EAAIjL,KAAKgoB,GACTA,EAAUA,EAAQ5J,KAEpB,OAAOnT,CACT,EAsBAqa,GAAStiB,UAAUojB,KAAO,WACxBjjB,KAAKmN,KAAK,QAAS,IAAIlN,MAAM,6BAC/B,EAiCAkiB,GAAStiB,UAAUrB,MAAQ,SAAU8f,EAAOzd,EAAUuf,GACpD,IAAI/B,EAAQre,KAAKmhB,eACbtZ,GAAM,EAgBV,MAdwB,mBAAbhH,IACTuf,EAAKvf,EACLA,EAAW,MAGTtB,EAAO6G,SAASkY,GAAQzd,EAAW,SAAmBA,IAAUA,EAAWwd,EAAMT,iBAEnE,mBAAPwC,IAAmBA,EAAKF,IAE/B7B,EAAMjB,MA5CZ,SAAuBV,EAAQ0D,GAC7B,IAAItR,EAAK,IAAI7O,MAAM,mBAEnByc,EAAOvP,KAAK,QAAS2B,GACrBsD,GAASgO,EAAItR,EACf,CAuCmBgW,CAAc9kB,KAAMogB,GAhCvC,SAAoB1D,EAAQ2B,EAAOC,EAAO8B,GACxC,IAAI2E,GAAQ,EACRjW,GAAK,EAcT,OAVc,OAAVwP,EACFxP,EAAK,IAAI1O,UAAU,uCACTb,EAAO6G,SAASkY,IAA2B,iBAAVA,QAAgC7d,IAAV6d,GAAwBD,EAAM1B,aAC/F7N,EAAK,IAAI1O,UAAU,oCAEjB0O,IACF4N,EAAOvP,KAAK,QAAS2B,GACrBsD,GAASgO,EAAItR,GACbiW,GAAQ,GAEHA,CACT,CAeoDC,CAAWhlB,KAAMqe,EAAOC,EAAO8B,KAC/E/B,EAAMkD,YACN1Z,EAwCJ,SAAuB6U,EAAQ2B,EAAOC,EAAOzd,EAAUuf,GACrD9B,EAXF,SAAqBD,EAAOC,EAAOzd,GAC5Bwd,EAAM1B,aAAsC,IAAxB0B,EAAMyC,eAA4C,iBAAVxC,IAC/DA,EAAQ/e,EAAOY,KAAKme,EAAOzd,IAE7B,OAAOyd,CACT,CAMU2G,CAAY5G,EAAOC,EAAOzd,GAE9BtB,EAAO6G,SAASkY,KAAQzd,EAAW,UACvC,IAAI7D,EAAMqhB,EAAM1B,WAAa,EAAI2B,EAAMrhB,OAEvCohB,EAAMphB,QAAUD,EAEhB,IAAI6K,EAAMwW,EAAMphB,OAASohB,EAAMtB,cAE1BlV,IAAKwW,EAAMqC,WAAY,GAE5B,GAAIrC,EAAM0C,SAAW1C,EAAM2C,OAAQ,CACjC,IAAIkE,EAAO7G,EAAMyD,oBACjBzD,EAAMyD,oBAAsB,IAAI3B,GAAS7B,EAAOzd,EAAUuf,GACtD8E,EACFA,EAAKjK,KAAOoD,EAAMyD,oBAElBzD,EAAMsD,gBAAkBtD,EAAMyD,oBAEhCzD,EAAM2D,sBAAwB,CAChC,MACEO,GAAQ7F,EAAQ2B,GAAO,EAAOrhB,EAAKshB,EAAOzd,EAAUuf,GAGtD,OAAOvY,CACT,CAlEUsd,CAAcnlB,KAAMqe,EAAOC,EAAOzd,EAAUuf,IAG7CvY,CACT,EAEAsa,GAAStiB,UAAUulB,KAAO,WACZplB,KAAKmhB,eAEXH,QACR,EAEAmB,GAAStiB,UAAUwlB,OAAS,WAC1B,IAAIhH,EAAQre,KAAKmhB,eAEb9C,EAAM2C,SACR3C,EAAM2C,SAED3C,EAAM0C,SAAY1C,EAAM2C,QAAW3C,EAAMuC,UAAavC,EAAM4C,mBAAoB5C,EAAMsD,iBAAiBC,GAAY5hB,KAAMqe,GAElI,EAEA8D,GAAStiB,UAAUylB,mBAAqB,SAA4BzkB,GAGlE,GADwB,iBAAbA,IAAuBA,EAAWA,EAASqB,iBAChD,CAAC,MAAO,OAAQ,QAAS,QAAS,SAAU,SAAU,OAAQ,QAAS,UAAW,WAAY,OAAOa,SAASlC,EAAW,IAAIqB,gBAAkB,GAAI,MAAM,IAAI9B,UAAU,qBAAuBS,GAEpM,OADAb,KAAKmhB,eAAevD,gBAAkB/c,EAC/Bb,IACT,EAoKAmiB,GAAStiB,UAAUuiB,OAAS,SAAU9D,EAAOzd,EAAUuf,GACrDA,EAAG,IAAIngB,MAAM,mBACf,EAEAkiB,GAAStiB,UAAUyiB,QAAU,KAE7BH,GAAStiB,UAAUpD,IAAM,SAAU6hB,EAAOzd,EAAUuf,GAClD,IAAI/B,EAAQre,KAAKmhB,eAEI,mBAAV7C,GACT8B,EAAK9B,EACLA,EAAQ,KACRzd,EAAW,MACkB,mBAAbA,IAChBuf,EAAKvf,EACLA,EAAW,MAGTyd,SAAuCte,KAAKxB,MAAM8f,EAAOzd,GAGzDwd,EAAM2C,SACR3C,EAAM2C,OAAS,EACfhhB,KAAKqlB,UAIFhH,EAAMsC,QAAWtC,EAAMuC,UA4B9B,SAAqBlE,EAAQ2B,EAAO+B,GAClC/B,EAAMsC,QAAS,EACf8B,GAAY/F,EAAQ2B,GAChB+B,IACE/B,EAAMuC,SAAUxO,GAASgO,GAAS1D,EAAOtM,KAAK,SAAUgQ,IAE9D/B,EAAMjB,OAAQ,EACdV,EAAO/H,UAAW,CACpB,CApCwC4Q,CAAYvlB,KAAMqe,EAAO+B,EACjE,EA8DA9L,GAAWsI,GAAQN,IAGnB,IADA,IAAIxL,GAAOxC,OAAOwC,KAAKqR,GAAStiB,WACvBkb,GAAI,EAAGA,GAAIjK,GAAK7T,OAAQ8d,KAAK,CACpC,IAAI2J,GAAS5T,GAAKiK,IACb6B,GAAO/c,UAAU6kB,MAAS9H,GAAO/c,UAAU6kB,IAAUvC,GAAStiB,UAAU6kB,IAC/E,CACA,SAAS9H,GAAOH,GACd,KAAMzc,gBAAgB4c,IAAS,OAAO,IAAIA,GAAOH,GAEjDH,GAASjd,KAAKW,KAAMyc,GACpB0F,GAAS9iB,KAAKW,KAAMyc,GAEhBA,IAAgC,IAArBA,EAAQyB,WAAoBle,KAAKke,UAAW,GAEvDzB,IAAgC,IAArBA,EAAQ9H,WAAoB3U,KAAK2U,UAAW,GAE3D3U,KAAKwlB,eAAgB,EACjB/I,IAAqC,IAA1BA,EAAQ+I,gBAAyBxlB,KAAKwlB,eAAgB,GAErExlB,KAAKoQ,KAAK,MAAOiT,GACnB,CAGA,SAASA,KAGHrjB,KAAKwlB,eAAiBxlB,KAAKmhB,eAAe/D,OAI9ChL,GAASqT,GAASzlB,KACpB,CAEA,SAASylB,GAAQ/pB,GACfA,EAAKe,KACP,CA8CA,SAASipB,GAAehJ,GACtB1c,KAAK2lB,eAAiB,SAAU7W,EAAItN,GAClC,OAUJ,SAAwBkb,EAAQ5N,EAAItN,GAClC,IAAIokB,EAAKlJ,EAAOmJ,gBAChBD,EAAGE,cAAe,EAElB,IAAI1F,EAAKwF,EAAGxE,QAEZ,IAAKhB,EAAI,OAAO1D,EAAOvP,KAAK,QAAS,IAAIlN,MAAM,kCAE/C2lB,EAAGG,WAAa,KAChBH,EAAGxE,QAAU,KAET5f,SAAqCkb,EAAO7f,KAAK2E,GAErD4e,EAAGtR,GAEH,IAAIkX,EAAKtJ,EAAOuB,eAChB+H,EAAG1I,SAAU,GACT0I,EAAGxI,cAAgBwI,EAAG/oB,OAAS+oB,EAAGjJ,gBACpCL,EAAOyB,MAAM6H,EAAGjJ,cAEpB,CA9BW4I,CAAejJ,EAAQ5N,EAAItN,EACpC,EAEAxB,KAAKimB,eAAgB,EACrBjmB,KAAK8lB,cAAe,EACpB9lB,KAAKohB,QAAU,KACfphB,KAAK+lB,WAAa,KAClB/lB,KAAKkmB,cAAgB,IACvB,CAuBA,SAASC,GAAU1J,GACjB,KAAMzc,gBAAgBmmB,IAAY,OAAO,IAAIA,GAAU1J,GAEvDG,GAAOvd,KAAKW,KAAMyc,GAElBzc,KAAK6lB,gBAAkB,IAAIH,GAAe1lB,MAG1C,IAAI0c,EAAS1c,KAGbA,KAAKie,eAAeT,cAAe,EAKnCxd,KAAKie,eAAeV,MAAO,EAEvBd,IAC+B,mBAAtBA,EAAQ2J,YAA0BpmB,KAAKqmB,WAAa5J,EAAQ2J,WAE1C,mBAAlB3J,EAAQ6J,QAAsBtmB,KAAKumB,OAAS9J,EAAQ6J,QAGjEtmB,KAAKoQ,KAAK,aAAa,WACM,mBAAhBpQ,KAAKumB,OAAuBvmB,KAAKumB,QAAO,SAAUzX,GAC3D0X,GAAK9J,EAAQ5N,EACf,IAAQ0X,GAAK9J,EACf,GACF,CAgDA,SAAS8J,GAAK9J,EAAQ5N,GACpB,GAAIA,EAAI,OAAO4N,EAAOvP,KAAK,QAAS2B,GAIpC,IAAI2X,EAAK/J,EAAOyE,eACZyE,EAAKlJ,EAAOmJ,gBAEhB,GAAIY,EAAGxpB,OAAQ,MAAM,IAAIgD,MAAM,8CAE/B,GAAI2lB,EAAGE,aAAc,MAAM,IAAI7lB,MAAM,kDAErC,OAAOyc,EAAO7f,KAAK,KACrB,CAGA,SAAS6pB,GAAYjK,GACnB,KAAMzc,gBAAgB0mB,IAAc,OAAO,IAAIA,GAAYjK,GAE3D0J,GAAU9mB,KAAKW,KAAMyc,EACvB,CAmBA,SAASkK,KACPna,GAAanN,KAAKW,KACpB,CAzJAsU,GAAW6R,GAAWvJ,IAkEtBuJ,GAAUtmB,UAAUhD,KAAO,SAAUyhB,EAAOzd,GAE1C,OADAb,KAAK6lB,gBAAgBI,eAAgB,EAC9BrJ,GAAO/c,UAAUhD,KAAKwC,KAAKW,KAAMse,EAAOzd,EACjD,EAYAslB,GAAUtmB,UAAUwmB,WAAa,SAAU/H,EAAOzd,EAAUuf,GAC1D,MAAM,IAAIngB,MAAM,kBAClB,EAEAkmB,GAAUtmB,UAAUuiB,OAAS,SAAU9D,EAAOzd,EAAUuf,GACtD,IAAIwF,EAAK5lB,KAAK6lB,gBAId,GAHAD,EAAGxE,QAAUhB,EACbwF,EAAGG,WAAazH,EAChBsH,EAAGM,cAAgBrlB,GACd+kB,EAAGE,aAAc,CACpB,IAAIE,EAAKhmB,KAAKie,gBACV2H,EAAGK,eAAiBD,EAAGxI,cAAgBwI,EAAG/oB,OAAS+oB,EAAGjJ,gBAAe/c,KAAKme,MAAM6H,EAAGjJ,cACzF,CACF,EAKAoJ,GAAUtmB,UAAUse,MAAQ,SAAUxb,GACpC,IAAIijB,EAAK5lB,KAAK6lB,gBAEQ,OAAlBD,EAAGG,YAAuBH,EAAGxE,UAAYwE,EAAGE,cAC9CF,EAAGE,cAAe,EAClB9lB,KAAKqmB,WAAWT,EAAGG,WAAYH,EAAGM,cAAeN,EAAGD,iBAIpDC,EAAGK,eAAgB,CAEvB,EAiBA3R,GAAWoS,GAAaP,IAOxBO,GAAY7mB,UAAUwmB,WAAa,SAAU/H,EAAOzd,EAAUuf,GAC5DA,EAAG,KAAM9B,EACX,EAEAhK,GAAWqS,GAAQna,IACnBma,GAAOrK,SAAWA,GAClBqK,GAAOxE,SAAWA,GAClBwE,GAAO/J,OAASA,GAChB+J,GAAOR,UAAYA,GACnBQ,GAAOD,YAAcA,GAGrBC,GAAOA,OAASA,GAShBA,GAAO9mB,UAAUojB,KAAO,SAASC,EAAMzG,GACrC,IAAImK,EAAS5mB,KAEb,SAAS8jB,EAAOxF,GACV4E,EAAKvO,WACH,IAAUuO,EAAK1kB,MAAM8f,IAAUsI,EAAO5C,OACxC4C,EAAO5C,OAGb,CAIA,SAASR,IACHoD,EAAO1I,UAAY0I,EAAOzC,QAC5ByC,EAAOzC,QAEX,CANAyC,EAAO1W,GAAG,OAAQ4T,GAQlBZ,EAAKhT,GAAG,QAASsT,GAIZN,EAAK2D,UAAcpK,IAA2B,IAAhBA,EAAQhgB,MACzCmqB,EAAO1W,GAAG,MAAOmT,GACjBuD,EAAO1W,GAAG,QAASyT,IAGrB,IAAImD,GAAW,EACf,SAASzD,IACHyD,IACJA,GAAW,EAEX5D,EAAKzmB,MACP,CAGA,SAASknB,IACHmD,IACJA,GAAW,EAEiB,mBAAjB5D,EAAK6D,SAAwB7D,EAAK6D,UAC/C,CAGA,SAASlD,EAAQ/U,GAEf,GADAwU,IACkD,IAA9C9W,GAAawE,cAAchR,KAAM,SACnC,MAAM8O,CAEV,CAMA,SAASwU,IACPsD,EAAO5Y,eAAe,OAAQ8V,GAC9BZ,EAAKlV,eAAe,QAASwV,GAE7BoD,EAAO5Y,eAAe,MAAOqV,GAC7BuD,EAAO5Y,eAAe,QAAS2V,GAE/BiD,EAAO5Y,eAAe,QAAS6V,GAC/BX,EAAKlV,eAAe,QAAS6V,GAE7B+C,EAAO5Y,eAAe,MAAOsV,GAC7BsD,EAAO5Y,eAAe,QAASsV,GAE/BJ,EAAKlV,eAAe,QAASsV,EAC/B,CAUA,OA5BAsD,EAAO1W,GAAG,QAAS2T,GACnBX,EAAKhT,GAAG,QAAS2T,GAmBjB+C,EAAO1W,GAAG,MAAOoT,GACjBsD,EAAO1W,GAAG,QAASoT,GAEnBJ,EAAKhT,GAAG,QAASoT,GAEjBJ,EAAK/V,KAAK,OAAQyZ,GAGX1D,CACT,EAEA,MAWM8D,GAAS,SAAUvK,EAAU,CAAC,GAClC,OAAIA,EAAQwK,KACFxK,EAAQwK,KAASxK,EAAQwK,KAAO3oB,KAAK4oB,GAAK,IAAO,IAAO,IAEzD5oB,KAAK0oB,QAEhB,EAEMG,GAAQ,CAEZC,MAAO,UAAU,QAAE3K,IACjB,MAAM4K,EAAS,GACTC,EAAWhpB,KAAKipB,KAAKP,GAAOvK,GAAWA,EAAQ+K,eACrD,IAAK,IAAIprB,EAAI,EAAGA,EAAIkrB,EAAUlrB,IAAK,CACjC,MAAMqrB,EAAOnpB,KAAKQ,MAAwB,GAAlBkoB,GAAOvK,IAC/B4K,EAAOxqB,KAAKuG,OAAOsC,aAAa+hB,GAAQA,EAAO,GAAK,GAAK,KAC3D,CACA,OAAOJ,EAAOvqB,KAAK,GACrB,EAEA4qB,IAAK,UAAU,QAAEjL,IACf,OAAOne,KAAKQ,MAAMkoB,GAAOvK,GAAWne,KAAKC,IAAI,EAAG,IAClD,EAEAopB,KAAM,UAAU,QAAElL,IAChB,OAAOne,KAAKQ,MAAwB,EAAlBkoB,GAAOvK,GAC3B,GAmKImL,GAAY,SAAUnL,EAAU,CAAC,GAKrC,OAJAzc,KAAKyc,QA3JqB,CAAClG,IAEvBA,EAAKsR,cACPtR,EAAKoG,WAAapG,EAAKsR,aAErBtR,EAAKuR,kBACPvR,EAAKwG,cAAgBxG,EAAKuR,iBAO5B,MAAMrL,EAAU,CAAC,EACjB,IAAK,MAAMhM,KAAK8F,EACdkG,GArBuBpY,EAqBNoM,EApBZpM,EAAI0H,QAAQ,cAAc,SAAUsJ,EAAGlO,GAC5C,OAAOA,EAAMiP,aACf,MAkByBG,EAAK9F,GArBf,IAAUpM,EAwBzB,MAAM0jB,EAAM,CACVC,QAAS,EACTC,UAAW,IACXC,SAAU,KACVrnB,SAAU,KACVpE,IAAK,KACL0rB,KAAK,EACLC,WAAW,EACXnrB,QAAS,EACTuqB,cAAe,GACfa,aAAc,KACdpB,MAAM,EACNqB,MAAO,GAET,IAAK,MAAM7X,KAAKsX,OACKtnB,IAAfgc,EAAQhM,KACVgM,EAAQhM,GAAKsX,EAAItX,KAID,IAAhBgM,EAAQ0L,MACV1L,EAAQ0L,IAAM1L,EAAQ4L,cAEO,iBAApB5L,EAAQuL,UACjBvL,EAAQuL,QAAU,IAAIhsB,MAAMygB,EAAQuL,UAEtC,MAAMO,EAAwBja,OAAOwC,KAAKqW,IAAOqB,QAC9CC,IAAO,CAAC,SAAU,YAAYhhB,SAASghB,KAE1C,IAAK,IAAIrsB,EAAI,EAAGA,EAAIqgB,EAAQuL,QAAQ/qB,OAAQb,IAAK,CAC/C,MAAM2e,EAAI0B,EAAQuL,QAAQ5rB,IAAM,QAChC,GAAiB,iBAAN2e,EAAgB,CACzB,IAAKwN,EAAsB9gB,SAASsT,GAClC,MAAM9a,MACJ,6BAA6B8a,0BAA0B5F,KAAKC,UAAUmT,MAG1E9L,EAAQuL,QAAQ5rB,GAAK+qB,GAAMpM,EAC7B,CACF,CACA,OAAO0B,CAAO,EAiGCiM,CAAoBjM,GAEnCkK,GAAOrK,SAASjd,KAAKW,KAAMA,KAAKyc,SAChCzc,KAAKqe,MA5Mc,CAAC5B,IAEb,CACLkM,WAAYlM,EAAQyL,SAAWnV,KAAKL,MAAQ,KAC5CkW,kBAAmB,GACnBC,cAAe,EACfC,cAAe,IAsMJC,CAAa/oB,KAAKyc,SACxBzc,IACT,EACAga,GAAKC,SAAS2N,GAAWjB,GAAOrK,UAGhCsL,GAAU/nB,UAAUpD,IAAM,WACxBuD,KAAKnD,KAAK,KACZ,EAEA+qB,GAAU/nB,UAAUse,MAAQ,SAAUxc,GACpCqnB,cAAa,KACXhpB,KAAKipB,OAAOtnB,EAAK,GAErB,EACAimB,GAAU/nB,UAAUopB,OAAS,SAAUtnB,GAhH1B,EAAC8a,EAAS4B,EAAO1c,EAAM9E,EAAMqsB,KAExC,MAAM1nB,EAAO,GACb,IAAI2nB,EAAgB,EASpB,IAPI1M,EAAQ2L,YACVe,EAAgB9K,EAAMuK,kBAAkB3rB,OAClB,IAAlBksB,GACF3nB,EAAK3E,KAAKwhB,EAAMuK,sBAIT,CAET,GACEvK,EAAMyK,gBAAkBrM,EAAQxf,QAC/Bwf,EAAQhgB,KAAOsW,KAAKL,MAAQ+J,EAAQhgB,KACpCggB,EAAQyL,UAAYnV,KAAKL,MAAQ2L,EAAMsK,WAAalM,EAAQyL,SAC7D,CAEA,GAAI1mB,EAAKvE,OAAQ,CACf,GAAIwf,EAAQE,WACV,IAAK,MAAMyM,KAAU5nB,EACnB3E,EAAKusB,QAGPvsB,EAAK2E,EAAK1E,KAAK,KAAO2f,EAAQ0L,IAAM1L,EAAQ0L,IAAM,KAEpD9J,EAAM5hB,KAAM,CACd,MACEysB,IAEF,MACF,CAEA,IACIG,EADAD,EAAS,GAEb,IAAK,MAAM3T,KAAMgH,EAAQuL,QAAS,CAChC,MAAMsB,EAAS7T,EAAG,CAAEgH,QAASA,EAAS4B,MAAOA,IACvC9c,SAAc+nB,EACpB,GAAe,OAAXA,GAA4B,WAAT/nB,GAA8B,WAATA,EAW1C,YAVA2nB,EACEjpB,MACE,CACE,iBACA,6CACA,8BACA,OAAOkV,KAAKC,UAAUkU,MACtBxsB,KAAK,OAKbssB,EAAOvsB,KAAKysB,EACd,CAEA,GAAI7M,EAAQE,WAAY,CACtB0M,EAAe,EAGf,IAAK,MAAMhC,KAAU+B,EACnBC,GAAgBhC,EAAOpqB,MAE3B,MAEEmsB,GAC2B,IAAxB/K,EAAMyK,cAAsB,GAAKrM,EAAQ4L,cAC1Ce,EAAOtsB,KAAK2f,EAAQwL,WACtBoB,EAAeD,EAAOnsB,OAGxB,GADAohB,EAAMyK,gBACFK,EAAgBE,EAAe1nB,EAAM,CACvC,GAAI8a,EAAQE,WAAY,CACtBnb,EAAK3E,KAAKusB,GACV,IAAK,MAAMA,KAAU5nB,EACnB3E,EAAKusB,EAET,MACM3M,EAAQ2L,WACV/J,EAAMuK,kBAAoBQ,EAAOnlB,OAAOtC,EAAOwnB,GAC/C3nB,EAAK3E,KAAKusB,EAAOnlB,OAAO,EAAGtC,EAAOwnB,KAElC3nB,EAAK3E,KAAKusB,GAEZvsB,EAAK2E,EAAK1E,KAAK,KAEjB,MACF,CACAqsB,GAAiBE,EACjB7nB,EAAK3E,KAAKusB,EACZ,GAuBA/lB,CACErD,KAAKyc,QACLzc,KAAKqe,MACL1c,GACC2c,IACCte,KAAKupB,OAAOjL,EAAM,IAEnBnP,IACKA,EACFnP,KAAK+mB,QAAQ5X,GAEbnP,KAAKnD,KAAK,KACZ,GAGN,EAEA+qB,GAAU/nB,UAAU0pB,OAAS,SAAUH,GACrC,MAAMvsB,EAAO,KAGX,GAFAmD,KAAKqe,MAAMwK,gBACX7oB,KAAKnD,KAAKusB,IACa,IAAnBppB,KAAKqe,MAAM5hB,IACb,OAAOuD,KAAKnD,KAAK,KACnB,EAEFmD,KAAKyc,QAAQ6L,MAAQ,EAAI9W,WAAW3U,EAAMmD,KAAKyc,QAAQ6L,OAASzrB,GAClE,EAyCA,IAAI2sB,GAAa,MAAMC,UAAiBxpB,MACtC,WAAAqM,CAAYnQ,EAAMutB,EAASjN,KAAYkN,GACjC3tB,MAAMmD,QAAQuqB,KAAUA,EAAUA,EAAQ5sB,KAAK,KAAKgP,QACxD8d,MAAMF,QAC0BjpB,IAA5BR,MAAM4pB,mBACR5pB,MAAM4pB,kBAAkB7pB,KAAMypB,GAEhCzpB,KAAK7D,KAAOA,EACZ,IAAK,MAAMiT,KAAWua,EACpB,IAAK,MAAM9Y,KAAOzB,EAAS,CACzB,MAAM3Q,EAAQ2Q,EAAQyB,GACtB7Q,KAAK6Q,GAAOxK,GAAW5H,GACnBA,EAAMQ,SAASwd,EAAQ5b,UACd,MAATpC,EACEA,EACA0W,KAAK2U,MAAM3U,KAAKC,UAAU3W,GAClC,CAEJ,GAGF,MAIMsrB,GAA0B,SAAU/B,GACxC,MAAMgC,EAAoB,GAC1B,IAAK,IAAI5tB,EAAI,EAAGsP,EAAIsc,EAAQ/qB,OAAQb,EAAIsP,EAAGtP,IAAK,CAC9C,MAAMirB,EAASW,EAAQ5rB,GACvB,GAAIirB,UAAsD,IAAXA,EAC7C2C,EAAkB5tB,GAAK,CAAE6tB,UAAU,QAC9B,GAAsB,iBAAX5C,EAChB2C,EAAkB5tB,GAAK,CAAEoR,KAAM6Z,OAC1B,IAXa,iBADMnmB,EAYHmmB,IAXiB,OAARnmB,GAAiBlF,MAAMmD,QAAQ+B,GAqB7D,MAAM,IAAIsoB,GAAW,gCAAiC,CACpD,6BACA,uCACA,OAAOrU,KAAKC,UAAUiS,kBAAuBjrB,MAZ/C,GAA2B,iBAAhBirB,EAAO7Z,KAChB,MAAM,IAAIgc,GAAW,kCAAmC,CACtD,+BACA,2CAA2CptB,IAC3C,qCAGJ4tB,EAAkB5tB,GAAKirB,CAOzB,CACF,CA5BkB,IAAUnmB,EA6B5B,OAAO8oB,CACT,EAEA,MAAME,GACJ,WAAA5d,CAAY3K,EAAO,KACjB3B,KAAK2B,KAAOA,EACZ3B,KAAK/C,OAAS,EACd+C,KAAKsD,IAAM/D,EAAOW,YAAYyB,EAChC,CACA,OAAAmL,CAAQxL,GACN,GAAI+E,GAAW/E,GAAM,CACnB,MAAMrE,EAAS+C,KAAK/C,OAASqE,EAAIrE,OACjC,GAAIA,GAAU+C,KAAK2B,OACjB3B,KAAKmqB,SACDltB,GAAU+C,KAAK2B,MACjB,MAAM1B,MAAM,wBAGhB,MAAMqD,EAAMtD,KAAKsD,IACjBtD,KAAKsD,IAAM/D,EAAOW,YAAYF,KAAK2B,MACnCL,EAAID,KAAKrB,KAAKsD,IAAK,GACnBA,EAAIjC,KAAKrB,KAAKsD,IAAKhC,EAAIrE,QACvB+C,KAAK/C,QAAUqE,EAAIrE,MACrB,KAAO,CACL,MAAMA,EAAS+C,KAAK/C,SAChBA,IAAW+C,KAAK2B,MAClB3B,KAAKmqB,SAEP,MAAM7mB,EAAMtD,KAAKoqB,QACjBpqB,KAAKsD,IAAI,GAAKhC,EACdgC,EAAIjC,KAAKrB,KAAKsD,IAAK,EAAG,EAAGrG,EAC3B,CACF,CACA,MAAAotB,CAAO/oB,GACL,MAAMrE,EAAS+C,KAAK/C,SAChBA,IAAW+C,KAAK2B,MAClB3B,KAAKmqB,SAEPnqB,KAAKsD,IAAIrG,GAAUqE,CACrB,CACA,KAAA8oB,GACE,OAAO7qB,EAAOY,KAAKH,KAAKsD,IAAItC,MAAM,EAAGhB,KAAK/C,QAC5C,CACA,MAAAktB,GACE,MAAMltB,EAAS+C,KAAK/C,OACpB+C,KAAK2B,KAAmB,EAAZ3B,KAAK2B,KACjB,MAAM2B,EAAM/D,EAAOW,YAAYF,KAAK2B,MACpC3B,KAAKsD,IAAIjC,KAAKiC,EAAK,EAAG,EAAGrG,GACzB+C,KAAKsD,IAAMA,CACb,CACA,QAAArE,CAAS4B,GACP,OAAIA,EACKb,KAAKsD,IAAItC,MAAM,EAAGhB,KAAK/C,QAAQgC,SAAS4B,GAExC9E,WAAW8D,UAAUmB,MAAM3B,KAAKW,KAAKsD,IAAItC,MAAM,EAAGhB,KAAK/C,QAElE,CACA,MAAA0K,GACE,OAAO3H,KAAKf,SAAS,OACvB,CACA,KAAAqrB,GACEtqB,KAAK/C,OAAS,CAChB,EAOF,MAMMstB,GAAa,SAAU9N,GAC3B,MAAO,CACL+N,YAAY,EACZC,cAAe,EACfC,UAAWjO,EAAQkO,cACnBC,YAAY,EAEZ1b,WAAOzO,EACPoqB,QAA+B,IAAtBpO,EAAQqO,UACjBC,UAAU,EACVC,cACE3kB,GAAWoW,EAAQwO,SACnB5kB,GAAWoW,EAAQyO,QAC+B,IAAlD3rB,EAAO+G,QAAQmW,EAAQwO,OAAQxO,EAAQyO,OAEzCC,qBAAsBnvB,MAAMmD,QAAQsd,EAAQuL,SACxCvL,EAAQuL,QAAQ/qB,YAChBwD,EACJ2qB,MAAO,IAAIlB,GAAiB,IAC5BmB,mBAAoB5O,EAAQ6O,0BAC5BC,iBAAkBjtB,KAAK8J,IAED,OAApBqU,EAAQ+O,QAAmB/O,EAAQ+O,QAAQvuB,OAAS,KAEjDwf,EAAQwL,UAAUpP,KAAKoP,GAAcA,EAAUhrB,SAEhC,OAAlBwf,EAAQyO,MAAiBzO,EAAQyO,MAAMjuB,OAAS,GAElDwuB,iBAAahrB,EACbirB,SAAS,EACTC,MAAM,EACNC,UAAW,IAAI1B,GAAiB,KAChCd,OAAQ,GACRyC,gBAAgB,EAChBC,cAAe,EACfC,yBACsC,IAApCtP,EAAQuP,iBAAiB/uB,OACrB,EACAqB,KAAK8J,OAAOqU,EAAQuP,iBAAiBnT,KAAKkC,GAAMA,EAAE9d,UACxDgvB,UAAW,CACT1sB,EAAOY,KAAK,IAAKsc,EAAQ5b,UAAU,GACnCtB,EAAOY,KAAK,KAAMsc,EAAQ5b,UAAU,IAEtCqrB,YAAY,EACZC,iBAAiB,EACjBC,SAAU,CACR7sB,EAAOY,KAAKZ,EAAOY,KAAK,CAnDjB,IAmDyB,QAAQlB,WAAYwd,EAAQ5b,UAC5DtB,EAAOY,KAAKZ,EAAOY,KAAK,CAnDjB,IAmDyB,QAAQlB,WAAYwd,EAAQ5b,UAC5DtB,EAAOY,KAAKZ,EAAOY,KAAK,CAtDnB,IAsDyB,QAAQlB,WAAYwd,EAAQ5b,UAC1DtB,EAAOY,KAAKZ,EAAOY,KAAK,CApDhB,IAoDyB,QAAQlB,WAAYwd,EAAQ5b,UAC7DtB,EAAOY,KAAKZ,EAAOY,KAAK,CApDlB,GAoDyB,QAAQlB,WAAYwd,EAAQ5b,WAGjE,EAQMwrB,GAAsB,SAAU9V,GACpC,MAAMkG,EAAU,CAAC,EAEjB,IAAK,MAAM6P,KAAO/V,EAChBkG,GAV2BpY,EAUNioB,EAThBjoB,EAAI0H,QAAQ,YAAY,SAAUsJ,EAAGlO,GAC1C,MAAO,IAAMA,EAAMjF,aACrB,MAO+BqU,EAAK+V,GAVjB,IAAUjoB,EAe7B,QAAyB5D,IAArBgc,EAAQ5b,WAA+C,IAArB4b,EAAQ5b,SAC5C4b,EAAQ5b,SAAW,YACd,GAAyB,OAArB4b,EAAQ5b,WAA0C,IAArB4b,EAAQ5b,SAC9C4b,EAAQ5b,SAAW,UACd,GACuB,iBAArB4b,EAAQ5b,UACM,OAArB4b,EAAQ5b,SAER,MAAM,IAAI2oB,GACR,8BACA,CACE,2BACA,wDACA,OAAOrU,KAAKC,UAAUqH,EAAQ5b,aAEhC4b,GAIJ,QACkBhc,IAAhBgc,EAAQ8P,KACQ,OAAhB9P,EAAQ8P,MACQ,IAAhB9P,EAAQ8P,IAER9P,EAAQ8P,KAAM,OACT,IAAoB,IAAhB9P,EAAQ8P,IACjB,MAAM,IAAI/C,GACR,yBACA,CACE,sBACA,oBACA,OAAOrU,KAAKC,UAAUqH,EAAQ8P,QAEhC9P,GAKJ,GADAA,EAAQkO,cAAgB,UAELlqB,IAAjBgc,EAAQ+P,MACS,OAAjB/P,EAAQ+P,OACS,IAAjB/P,EAAQ+P,MACS,KAAjB/P,EAAQ+P,KAER/P,EAAQ+P,UAAO/rB,OACV,GAA4B,mBAAjBgc,EAAQ+P,KACxB/P,EAAQkO,cAAgBlO,EAAQ+P,KAChC/P,EAAQ+P,MAAO,OACV,IAAqB,IAAjB/P,EAAQ+P,KACjB,MAAM,IAAIhD,GACR,0BACA,CACE,uBACA,mCACA,OAAOrU,KAAKC,UAAUqH,EAAQ+P,SAEhC/P,GAIJ,QACwBhc,IAAtBgc,EAAQgQ,WACc,OAAtBhQ,EAAQgQ,YACc,IAAtBhQ,EAAQgQ,WACc,KAAtBhQ,EAAQgQ,UAERhQ,EAAQgQ,WAAY,OACf,IAA0B,IAAtBhQ,EAAQgQ,UACjBhQ,EAAQgQ,UAAY,SAAUhuB,GAC5B,MAAMiuB,EAAO3Z,KAAK+W,MAAMrrB,GACxB,OAAQI,MAAM6tB,GAAyBjuB,EAAjB,IAAIsU,KAAK2Z,EACjC,OACK,GAAiC,mBAAtBjQ,EAAQgQ,UACxB,MAAM,IAAIjD,GACR,+BACA,CACE,4BACA,wCACA,OAAOrU,KAAKC,UAAUqH,EAAQgQ,cAEhChQ,GAKJ,GADAA,EAAQ6O,0BAA4B,MACZ,IAApB7O,EAAQuL,QAEVvL,EAAQ6O,+BAA4B7qB,OAC/B,GAA+B,mBAApBgc,EAAQuL,QACxBvL,EAAQ6O,0BAA4B7O,EAAQuL,QAC5CvL,EAAQuL,SAAU,OACb,GAAIhsB,MAAMmD,QAAQsd,EAAQuL,SAC/BvL,EAAQuL,QAAU+B,GAAwBtN,EAAQuL,aAC7C,SACevnB,IAApBgc,EAAQuL,SACY,OAApBvL,EAAQuL,UACY,IAApBvL,EAAQuL,QAIR,MAAM,IAAIwB,GACR,6BACA,CACE,0BACA,uCACA,OAAOrU,KAAKC,UAAUqH,EAAQuL,YAEhCvL,GATFA,EAAQuL,SAAU,CAWpB,CAEA,QACoCvnB,IAAlCgc,EAAQkQ,uBAC0B,OAAlClQ,EAAQkQ,wBAC0B,IAAlClQ,EAAQkQ,sBAERlQ,EAAQkQ,uBAAwB,MAC3B,KAAsC,IAAlClQ,EAAQkQ,sBACjB,MAAM,IAAInD,GACR,2CACA,CACE,wCACA,qBACA,OAAOrU,KAAKC,UAAUqH,EAAQkQ,0BAEhClQ,GAEG,IAAwB,IAApBA,EAAQuL,QACjB,MAAM,IAAIwB,GACR,2CACA,CACE,wCACA,yCAEF/M,EAEJ,CAEA,QACsBhc,IAApBgc,EAAQ+O,SACY,OAApB/O,EAAQ+O,UACY,IAApB/O,EAAQ+O,SACY,KAApB/O,EAAQ+O,QAER/O,EAAQ+O,QAAU,UAKlB,GAH+B,iBAApB/O,EAAQ+O,UACjB/O,EAAQ+O,QAAUjsB,EAAOY,KAAKsc,EAAQ+O,QAAS/O,EAAQ5b,YAEpDwF,GAAWoW,EAAQ+O,SACtB,MAAM,IAAIhC,GACR,6BACA,CACE,0BACA,wCACA,OAAOrU,KAAKC,UAAUqH,EAAQ+O,YAEhC/O,GAKN,QAC+Bhc,IAA7Bgc,EAAQmQ,kBACqB,OAA7BnQ,EAAQmQ,mBACqB,IAA7BnQ,EAAQmQ,iBAERnQ,EAAQmQ,kBAAmB,OACtB,IAAiC,IAA7BnQ,EAAQmQ,iBACjB,MAAM,IAAIpD,GACR,6BACA,CACE,mCACA,2BACA,OAAOrU,KAAKC,UAAUqH,EAAQmQ,qBAEhCnQ,GAIJ,MAAMoQ,EAAiB1X,KAAKC,UAAUqH,EAAQwL,WAG9C,GAFKjsB,MAAMmD,QAAQsd,EAAQwL,aACzBxL,EAAQwL,UAAY,CAACxL,EAAQwL,YACE,IAA7BxL,EAAQwL,UAAUhrB,OACpB,MAAM,IAAIusB,GACR,+BACA,CACE,4BACA,4EACA,OAAOqD,KAETpQ,GA+BJ,GA5BAA,EAAQwL,UAAYxL,EAAQwL,UAAUpP,KAAI,SAAUoP,GAClD,GAAIA,UAA+D,IAAdA,EACnD,OAAO1oB,EAAOY,KAAK,IAAKsc,EAAQ5b,UAKlC,GAHyB,iBAAdonB,IACTA,EAAY1oB,EAAOY,KAAK8nB,EAAWxL,EAAQ5b,YAExCwF,GAAW4hB,IAAmC,IAArBA,EAAUhrB,OACtC,MAAM,IAAIusB,GACR,+BACA,CACE,4BACA,4EACA,OAAOqD,KAETpQ,GAGJ,OAAOwL,CACT,SAEuBxnB,IAAnBgc,EAAQwO,SAA2C,IAAnBxO,EAAQwO,OAC1CxO,EAAQwO,OAAS1rB,EAAOY,KAAK,IAAKsc,EAAQ5b,UACP,iBAAnB4b,EAAQwO,OACxBxO,EAAQwO,OAAS1rB,EAAOY,KAAKsc,EAAQwO,OAAQxO,EAAQ5b,UACzB,OAAnB4b,EAAQwO,SAAsC,IAAnBxO,EAAQwO,SAC5CxO,EAAQwO,OAAS,MAEI,OAAnBxO,EAAQwO,SACL5kB,GAAWoW,EAAQwO,QACtB,MAAM,IAAIhrB,MACR,uEAAuEkV,KAAKC,UAAUqH,EAAQwO,WAKpG,QAAqBxqB,IAAjBgc,EAAQtc,MAAuC,OAAjBsc,EAAQtc,KACxCsc,EAAQtc,KAAO,MACV,CAIL,GAH4B,iBAAjBsc,EAAQtc,MAAqB,MAAMmW,KAAKmG,EAAQtc,QACzDsc,EAAQtc,KAAO6D,SAASyY,EAAQtc,QAE9ByD,OAAOkpB,UAAUrQ,EAAQtc,MAO3B,MAAM,IAAIF,MACR,gDAAgDkV,KAAKC,UAAUqH,EAAQtc,SAPzE,GAAIsc,EAAQtc,KAAO,EACjB,MAAM,IAAIF,MACR,wDAAwDkV,KAAKC,UAAUmB,EAAKpW,QAQpF,CAEA,QAA0BM,IAAtBgc,EAAQqO,WAAiD,OAAtBrO,EAAQqO,UAC7CrO,EAAQqO,UAAY,MACf,CAOL,GAL+B,iBAAtBrO,EAAQqO,WACf,MAAMxU,KAAKmG,EAAQqO,aAEnBrO,EAAQqO,UAAY9mB,SAASyY,EAAQqO,aAEnClnB,OAAOkpB,UAAUrQ,EAAQqO,WAO3B,MAAM,IAAI7qB,MACR,qDAAqDkV,KAAKC,UAAUmB,EAAKuU,cAP3E,GAAIrO,EAAQqO,WAAa,EACvB,MAAM,IAAI7qB,MACR,4EAA4EkV,KAAKC,UAAUmB,EAAKuU,aAQxG,CAEA,QACqCrqB,IAAnCgc,EAAQsQ,wBAC2B,OAAnCtQ,EAAQsQ,uBAERtQ,EAAQsQ,wBAAyB,OAC5B,GAA8C,iBAAnCtQ,EAAQsQ,uBACxBtQ,EAAQsQ,uBAAyBzuB,KAAKQ,MAAM2d,EAAQsQ,wBACb,IAAnCtQ,EAAQsQ,yBACVtQ,EAAQsQ,wBAAyB,QAE9B,GAA8C,kBAAnCtQ,EAAQsQ,uBACxB,MAAM,IAAIvD,GACR,4CACA,CACE,2CACA,mDACA,OAAOrU,KAAKC,UAAUqH,EAAQsQ,2BAEhCtQ,GAGJ,IAAuC,IAAnCA,EAAQsQ,yBAAuD,IAApBtQ,EAAQuL,QACrD,MAAM,IAAIwB,GACR,8CACA,CACE,sCACA,mDAEF/M,GAIJ,QACmBhc,IAAjBgc,EAAQuQ,MACS,OAAjBvQ,EAAQuQ,OACS,IAAjBvQ,EAAQuQ,KAERvQ,EAAQuQ,MAAO,OACV,IAAqB,IAAjBvQ,EAAQuQ,KACjB,MAAM,IAAI/sB,MACR,0CAA0CkV,KAAKC,UAAUqH,EAAQuQ,SAIrE,QAC8BvsB,IAA5Bgc,EAAQwQ,iBACoB,OAA5BxQ,EAAQwQ,kBACoB,IAA5BxQ,EAAQwQ,gBAERxQ,EAAQwQ,gBAAkB,OACrB,GACLrpB,OAAOkpB,UAAUrQ,EAAQwQ,kBACzBxQ,EAAQwQ,iBAAmB,OACpB,IAC4B,iBAA5BxQ,EAAQwQ,kBACf,MAAM3W,KAAKmG,EAAQwQ,iBAInB,MAAM,IAAIhtB,MACR,mEAAmEkV,KAAKC,UAAUqH,EAAQwQ,oBAH5FxQ,EAAQwQ,gBAAkBjpB,SAASyY,EAAQwQ,gBAK7C,CAEA,QACsBxsB,IAApBgc,EAAQyQ,SACY,OAApBzQ,EAAQyQ,UACY,IAApBzQ,EAAQyQ,QAERzQ,EAAQyQ,aAAUzsB,OACb,GAAI4F,GAAWoW,EAAQyQ,SAAU,CACtC,GAA+B,IAA3BzQ,EAAQyQ,QAAQjwB,OAClB,MAAM,IAAIgD,MAAM,sDAEO,OAArBwc,EAAQ5b,WACV4b,EAAQyQ,QAAUzQ,EAAQyQ,QAAQjuB,SAASwd,EAAQ5b,UAEvD,MAAO,GAA+B,iBAApB4b,EAAQyQ,SACxB,GAA+B,IAA3BzQ,EAAQyQ,QAAQjwB,OAClB,MAAM,IAAIgD,MAAM,2DAGb,GAA+B,iBAApBwc,EAAQyQ,QACxB,MAAM,IAAIjtB,MACR,6DAA6Dwc,EAAQyQ,WAGzE,QAAwBzsB,IAApBgc,EAAQyQ,QACV,GAA+B,iBAApBzQ,EAAQyQ,SACjB,IAAwB,IAApBzQ,EAAQuL,QACV,MAAM/nB,MACJ,+FAKJ,IAAwB,IAApBwc,EAAQuL,QACV,MAAM/nB,MACJ,yFAMR,QAA0BQ,IAAtBgc,EAAQ0Q,WAAiD,OAAtB1Q,EAAQ0Q,UAC7C1Q,EAAQ0Q,eAAY1sB,OACf,GAAiC,mBAAtBgc,EAAQ0Q,UACxB,MAAM,IAAI3D,GACR,+BACA,CACE,8BACA,qBACA,OAAOrU,KAAKC,UAAUqH,EAAQ0Q,cAEhC1Q,GAOJ,QACsBhc,IAApBgc,EAAQ2Q,SACY,OAApB3Q,EAAQ2Q,SACmB,mBAApB3Q,EAAQ2Q,QAEf,MAAM,IAAIntB,MACR,mDAAmDkV,KAAKC,UAAUqH,EAAQ2Q,YAI9E,GACoB,OAAlB3Q,EAAQyO,QACU,IAAlBzO,EAAQyO,OACU,KAAlBzO,EAAQyO,MAERzO,EAAQyO,MAAQ,UAOhB,QALsBzqB,IAAlBgc,EAAQyO,QAAyC,IAAlBzO,EAAQyO,MACzCzO,EAAQyO,MAAQ3rB,EAAOY,KAAK,IAAKsc,EAAQ5b,UACP,iBAAlB4b,EAAQyO,QACxBzO,EAAQyO,MAAQ3rB,EAAOY,KAAKsc,EAAQyO,MAAOzO,EAAQ5b,YAEhDwF,GAAWoW,EAAQyO,OACtB,MAAM,IAAIjrB,MACR,2DAA2DkV,KAAKC,UAAUqH,EAAQyO,UAKxF,QACkBzqB,IAAhBgc,EAAQ4Q,KACQ,OAAhB5Q,EAAQ4Q,MACQ,IAAhB5Q,EAAQ4Q,IAER5Q,EAAQ4Q,KAAM,OACT,IAAoB,IAAhB5Q,EAAQ4Q,IACjB,MAAM,IAAIptB,MACR,yCAAyCkV,KAAKC,UAAUqH,EAAQ4Q,QAIpE,QAAiC5sB,IAA7Bgc,EAAQuP,iBACVvP,EAAQuP,iBAAmB,QACtB,GAC+B,iBAA7BvP,EAAQuP,kBACf3lB,GAAWoW,EAAQuP,kBACnB,CACA,GAAwC,IAApCvP,EAAQuP,iBAAiB/uB,OAC3B,MAAM,IAAIusB,GACR,sCACA,CACE,qCACA,8CACA,OAAOrU,KAAKC,UAAUqH,EAAQuP,qBAEhCvP,GAGJA,EAAQuP,iBAAmB,CAACvP,EAAQuP,iBACtC,MAAO,IAAKhwB,MAAMmD,QAAQsd,EAAQuP,kBAChC,MAAM,IAAIxC,GACR,sCACA,CACE,qCACA,8DACA,OAAOrU,KAAKC,UAAUqH,EAAQuP,qBAEhCvP,GAiCJ,GA9BAA,EAAQuP,iBAAmBvP,EAAQuP,iBAAiBnT,KAAI,SAAUyU,EAAIlxB,GACpE,GAAkB,iBAAPkxB,IAAoBjnB,GAAWinB,GACxC,MAAM,IAAI9D,GACR,sCACA,CACE,qCACA,6DACA,YAAYptB,KACZ,OAAO+Y,KAAKC,UAAUkY,MAExB7Q,GAEG,GAAkB,IAAd6Q,EAAGrwB,OACZ,MAAM,IAAIusB,GACR,sCACA,CACE,qCACA,6CACA,YAAYptB,KACZ,OAAO+Y,KAAKC,UAAUkY,MAExB7Q,GAMJ,MAHkB,iBAAP6Q,IACTA,EAAK/tB,EAAOY,KAAKmtB,EAAI7Q,EAAQ5b,WAExBysB,CACT,IAE0C,kBAA/B7Q,EAAQ8Q,wBAAyC,SAC3B9sB,IAA/Bgc,EAAQ8Q,oBACuB,OAA/B9Q,EAAQ8Q,mBAIR,MAAM,IAAIttB,MACR,6DAA6DkV,KAAKC,UAAUqH,EAAQ8Q,uBAHtF9Q,EAAQ8Q,oBAAqB,CAK/B,CACA,GAA+C,kBAApC9Q,EAAQ+Q,6BAA8C,SAC3B/sB,IAApCgc,EAAQ+Q,yBAC4B,OAApC/Q,EAAQ+Q,wBAIR,MAAM,IAAIvtB,MACR,kEAAkEkV,KAAKC,UAAUqH,EAAQ+Q,4BAH3F/Q,EAAQ+Q,yBAA0B,CAKpC,CACA,GAA+C,kBAApC/Q,EAAQgR,6BAA8C,SAC3BhtB,IAApCgc,EAAQgR,yBAC4B,OAApChR,EAAQgR,wBAIR,MAAM,IAAIxtB,MACR,kEAAkEkV,KAAKC,UAAUqH,EAAQgR,4BAH3FhR,EAAQgR,yBAA0B,CAKpC,CAEA,GAAoC,kBAAzBhR,EAAQiR,kBAAmC,SAC3BjtB,IAAzBgc,EAAQiR,cACiB,OAAzBjR,EAAQiR,aAIR,MAAM,IAAIztB,MACR,uDAAuDkV,KAAKC,UAAUqH,EAAQiR,iBAHhFjR,EAAQiR,cAAe,CAKzB,CAEA,GAAwC,kBAA7BjR,EAAQkR,sBAAuC,SAC3BltB,IAA7Bgc,EAAQkR,kBACqB,OAA7BlR,EAAQkR,iBAIR,MAAM,IAAI1tB,MACR,2DAA2DkV,KAAKC,UAAUqH,EAAQkR,qBAHpFlR,EAAQkR,kBAAmB,CAK7B,CAEA,GAAsD,kBAA3ClR,EAAQmR,oCAAqD,SAC3BntB,IAA3Cgc,EAAQmR,gCACmC,OAA3CnR,EAAQmR,+BAIR,MAAM,IAAI3tB,MACR,yEAAyEkV,KAAKC,UAAUqH,EAAQmR,mCAHlGnR,EAAQmR,gCAAiC,CAK3C,CAEA,GAA+C,kBAApCnR,EAAQoR,6BAA8C,SAC3BptB,IAApCgc,EAAQoR,yBAC4B,OAApCpR,EAAQoR,wBAIR,MAAM,IAAI5tB,MACR,kEAAkEkV,KAAKC,UAAUqH,EAAQoR,4BAH3FpR,EAAQoR,yBAA0B,CAKpC,CAEA,QACoBptB,IAAlBgc,EAAQqR,OACU,OAAlBrR,EAAQqR,QACU,IAAlBrR,EAAQqR,MAERrR,EAAQqR,OAAQ,OACX,IAAsB,IAAlBrR,EAAQqR,MACjB,MAAM,IAAI7tB,MACR,gDAAgDkV,KAAKC,UAAUqH,EAAQqR,UAI3E,QACoBrtB,IAAlBgc,EAAQsR,OACU,OAAlBtR,EAAQsR,QACU,IAAlBtR,EAAQsR,MAERtR,EAAQsR,OAAQ,OACX,IAAsB,IAAlBtR,EAAQsR,MACjB,MAAM,IAAI9tB,MACR,gDAAgDkV,KAAKC,UAAUqH,EAAQsR,UAI3E,QACmBttB,IAAjBgc,EAAQ3Q,MACS,OAAjB2Q,EAAQ3Q,OACS,IAAjB2Q,EAAQ3Q,KAER2Q,EAAQ3Q,MAAO,OACV,IAAqB,IAAjB2Q,EAAQ3Q,KACjB,MAAM,IAAI7L,MACR,+CAA+CkV,KAAKC,UAAUqH,EAAQ3Q,SAe1E,IAXqB,IAAjB2Q,EAAQ3Q,OAAgC,IAAfyK,EAAKwX,MAChCtR,EAAQsR,OAAQ,GACW,IAAlBtR,EAAQsR,QACjBtR,EAAQsR,OAAQ,IAEG,IAAjBtR,EAAQ3Q,OAAgC,IAAfyK,EAAKuX,MAChCrR,EAAQqR,OAAQ,GACW,IAAlBrR,EAAQqR,QACjBrR,EAAQqR,OAAQ,QAGCrtB,IAAfgc,EAAQuR,IAAmC,OAAfvR,EAAQuR,GACtCvR,EAAQuR,IAAM,MACT,CAIL,GAH0B,iBAAfvR,EAAQuR,IAAmB,MAAM1X,KAAKmG,EAAQuR,MACvDvR,EAAQuR,GAAKhqB,SAASyY,EAAQuR,MAE5BpqB,OAAOkpB,UAAUrQ,EAAQuR,IAO3B,MAAM,IAAI/tB,MACR,8CAA8CkV,KAAKC,UAAUmB,EAAKyX,OAPpE,GAAIvR,EAAQuR,IAAM,EAChB,MAAM,IAAI/tB,MACR,qEAAqEkV,KAAKC,UAAUmB,EAAKyX,MAQjG,CAEA,QAAwBvtB,IAApBgc,EAAQwR,SAA6C,OAApBxR,EAAQwR,QAC3CxR,EAAQwR,SAAW,MACd,CAIL,GAH+B,iBAApBxR,EAAQwR,SAAwB,MAAM3X,KAAKmG,EAAQwR,WAC5DxR,EAAQwR,QAAUjqB,SAASyY,EAAQwR,WAEjCrqB,OAAOkpB,UAAUrQ,EAAQwR,SAO3B,MAAM,IAAIhuB,MACR,mDAAmDkV,KAAKC,UAAUmB,EAAK0X,YAPzE,GAAIxR,EAAQwR,SAAW,EACrB,MAAM,IAAIhuB,MACR,0EAA0EkV,KAAKC,UAAUmB,EAAK0X,WAQtG,CACA,OAAOxR,CACT,EAEMyR,GAAgB,SAAU9E,GAC9B,OAAOA,EAAO+E,OACX/C,GACU,MAATA,GAAkBA,EAAMnsB,UAAwC,KAA5BmsB,EAAMnsB,WAAW6M,QAE3D,EAKMsiB,GAAO,CAKXC,KAAM9uB,EAAOY,KAAK,CAAC,IAAK,IAAK,MAI7BmuB,QAAS/uB,EAAOY,KAAK,CAAC,IAAK,OAm3BvB2pB,GAAQ,SAAUtoB,EAAM+U,EAAO,CAAC,GAChB,iBAAT/U,IACTA,EAAOjC,EAAOY,KAAKqB,IAErB,MAAM+sB,EAAUhY,GAAQA,EAAK2W,QAAU,CAAC,EAAI,GACtCsB,EAr3BY,SAAUC,EAAmB,CAAC,GAChD,MAQMhS,EAAU4P,GAAoBoC,GACpC,MAAO,CACLzB,KAVW,CACXhlB,MAAO,EACP0mB,cAAe,EACfC,YAAa,EACbC,qBAAsB,EACtBC,MAAO,EACPN,QAAS,GAKTE,iBAAkBA,EAClBhS,QAASA,EACT4B,MAAOkM,GAAW9N,GAClBqS,eAAgB,SAAU1yB,EAAG2yB,EAAQtyB,GACnC,GAAIA,EAAK,OAAO,EAChB,MAAM,SAAEoE,EAAQ,OAAEoqB,EAAM,MAAEC,GAAUlrB,KAAKyc,SACnC,QAAEiP,EAAO,iBAAEH,EAAgB,yBAAEQ,GACjC/rB,KAAKqe,MAkBP,OAjBsB0Q,EAAS3yB,EAAI,EACZkC,KAAK8J,IAC1BmjB,EAO6B,IAA7BQ,EACIxsB,EAAOY,KAAK,OAAQU,GAAU5D,OAC9B8uB,EAEJL,GAAsB,OAAXT,EAAkB,EAAIA,EAAOhuB,QAAUiuB,EAAMjuB,OAAS,EAEjEyuB,EAAUR,EAAMjuB,OAAS8uB,EAA2B,EAGxD,EAEAjC,MAAO,SAAUkF,EAASvyB,EAAKI,EAAMqsB,GACnC,MAAM,IACJqD,EAAG,iBACHK,EAAgB,SAChB/rB,EAAQ,UACRiqB,EAAS,MACTiD,EAAK,gBACLd,EAAe,IACfI,EAAG,aACHK,EAAY,MACZI,EAAK,iBACLH,EAAgB,GAChBK,EAAE,QACFC,GACEjuB,KAAKyc,QACT,IAAI,QAAE+O,EAAO,OAAEP,EAAM,MAAEC,EAAK,iBAAEc,GAAqBhsB,KAAKyc,QACxD,MAAM,WAAE+N,EAAU,YAAEiB,EAAW,UAAEG,EAAS,cAAEZ,GAAkBhrB,KAAKqe,MACnE,IAAI/a,EACJ,QAAoB7C,IAAhBgrB,EAA2B,CAC7B,QAAgBhrB,IAAZuuB,EAGF,YADA9F,IAGA5lB,EAAM0rB,CAEV,MACE1rB,OADyB7C,IAAhBgrB,QAAyChrB,IAAZuuB,EAChCvD,EAEAlsB,EAAOmH,OAAO,CAAC+kB,EAAauD,IAGpC,IAAmB,IAAfxE,EACF,IAAY,IAAR+B,EACFvsB,KAAKqe,MAAMmM,YAAa,OACnB,GAAIlnB,EAAIrG,OAAS,GAEtB,IAAY,IAARR,EAGF,YADAuD,KAAKqe,MAAMoN,YAAcnoB,OAGtB,CACL,IAAK,MAAMzC,KAAYutB,GACrB,GAA8D,IAA1DA,GAAKvtB,GAAUyF,QAAQhD,EAAK,EAAG8qB,GAAKvtB,GAAU5D,QAAe,CAE/D,MAAMgyB,EAAYb,GAAKvtB,GAAU5D,OACjC+C,KAAKqe,MAAMoM,eAAiBwE,EAC5B3rB,EAAMA,EAAItC,MAAMiuB,GAEhBjvB,KAAKyc,QAAU4P,GAAoB,IAC9BrsB,KAAKyuB,iBACR5tB,SAAUA,MAGT2qB,UAASP,SAAQC,SAAUlrB,KAAKyc,SACnC,KACF,CAEFzc,KAAKqe,MAAMmM,YAAa,CAC1B,CAEF,MAAMuE,EAASzrB,EAAIrG,OACnB,IAAI2J,EACJ,IAAKA,EAAM,EAAGA,EAAMmoB,IAGd/uB,KAAK8uB,eAAeloB,EAAKmoB,EAAQtyB,GAHXmK,IAAO,CAUjC,IAJmC,IAA/B5G,KAAKqe,MAAM8N,kBACbnsB,KAAKgtB,KAAK6B,QACV7uB,KAAKqe,MAAM8N,iBAAkB,IAEd,IAAb8B,GAAkBjuB,KAAKgtB,KAAK6B,MAAQZ,EAGtC,OAFAjuB,KAAKqe,MAAMsN,MAAO,OAClBzC,KAIyB,IAAvBlpB,KAAKqe,MAAMqN,SAAiD,IAA5BM,EAAiB/uB,QACrB+C,KAAKkvB,8BACjC5rB,EACAsD,KAGAolB,EAAmBhsB,KAAKyc,QAAQuP,kBAGpC,MAAMmD,EAAM7rB,EAAIsD,GAYhB,IAXY,IAARymB,GACFzB,EAAUvB,OAAO8E,GAlJhB,KAqJAA,GApJA,KAoJcA,IACgB,IAA/BnvB,KAAKqe,MAAM8N,kBAEXnsB,KAAKqe,MAAM8N,iBAAkB,IAIH,IAAxBnsB,KAAKqe,MAAM0M,SACb/qB,KAAKqe,MAAM0M,UAAW,MACjB,CAIL,GACa,OAAXE,IACuB,IAAvBjrB,KAAKqe,MAAMqN,SACX1rB,KAAKovB,WAAW9rB,EAAKsD,EAAKuoB,IAC1BvoB,EAAMqkB,EAAOhuB,OAAS8xB,EACtB,CACA,IAAI/D,EAMG,CACLhrB,KAAKqe,MAAM0M,UAAW,EACtBnkB,GAAOqkB,EAAOhuB,OAAS,EACvB,QACF,CATE,GAAI+C,KAAKqvB,UAAU/rB,EAAKsD,EAAMqkB,EAAOhuB,QAAS,CAC5C+C,KAAKqe,MAAM0M,UAAW,EACtBnkB,GAAOqkB,EAAOhuB,OAAS,EACvB,QACF,CAMJ,CAGA,IAA8B,IAA1B+C,KAAKqe,MAAMuM,YAAwB5qB,KAAKqvB,UAAU/rB,EAAKsD,GACzD,IAA2B,IAAvB5G,KAAKqe,MAAMqN,QAAkB,CAC/B,MAAM4D,EAAUhsB,EAAIsD,EAAMskB,EAAMjuB,QAC1BsyB,EACJzB,GAAS9tB,KAAKwvB,iBAAiBlsB,EAAKsD,EAAMskB,EAAMjuB,QAC5CwyB,EACQ,OAAZjE,GACAxrB,KAAK0vB,eAAelE,EAASloB,EAAKsD,EAAMskB,EAAMjuB,OAAQqyB,GAClDK,EAAqB3vB,KAAK4vB,cAC9BtsB,EACAsD,EAAMskB,EAAMjuB,OACZqyB,GAEIO,EACwB,IAA5B7D,EAAiB/uB,OACb+C,KAAKkvB,8BAA8B5rB,EAAKsD,EAAMskB,EAAMjuB,QACpD+C,KAAK8vB,oBAAoBR,EAAShsB,EAAKsD,EAAMskB,EAAMjuB,QAGzD,GACa,OAAXguB,GACAjrB,KAAKovB,WAAW9rB,EAAKsD,EAAKuoB,IAC1BnvB,KAAKqvB,UAAU/rB,EAAKsD,EAAMqkB,EAAOhuB,QAEjC2J,GAAOqkB,EAAOhuB,OAAS,MAClB,KACJqyB,GACDK,GACAE,GACAJ,GACAF,EACA,CACAvvB,KAAKqe,MAAMqN,SAAU,EACrB1rB,KAAKqe,MAAM6N,YAAa,EACxBtlB,GAAOskB,EAAMjuB,OAAS,EACtB,QACF,CAAO,IAAqB,IAAjBywB,EAAwB,CACjC,MAAMve,EAAMnP,KAAK+vB,QACf,IAAIvG,GACF,4BACA,CACE,yBACA,QAAQpmB,OAAOsC,aAAa4pB,MAC5B,WAAWtvB,KAAKgtB,KAAK6B,QACrB,6DACA,6BAEF7uB,KAAKyc,QACLzc,KAAKgwB,gBAGT,QAAYvvB,IAAR0O,EAAmB,OAAOA,CAChC,MACEnP,KAAKqe,MAAMqN,SAAU,EACrB1rB,KAAKqe,MAAM6N,YAAa,EACxBlsB,KAAKqe,MAAM+M,MAAMte,QAAQoe,GACzBtkB,GAAOskB,EAAMjuB,OAAS,CACxB,CACF,KAAO,CACL,GAAgC,IAA5B+C,KAAKqe,MAAM+M,MAAMnuB,OA0Bd,CACL+C,KAAKqe,MAAMqN,SAAU,EACrB9kB,GAAOskB,EAAMjuB,OAAS,EACtB,QACF,CA5BE,IAAqB,IAAjBywB,EAAwB,CAC1B,MAAMV,EAAOhtB,KAAKgwB,cACZzD,EAAMje,OAAOwC,KAAKsd,IACrBvV,KAAKjX,KACJwsB,GAAKxsB,GAAGqF,OAAOjH,KAAKqe,MAAM+M,MAAMnsB,aAAc2C,IAE/C4mB,OAAOyH,SAAS,GACb9gB,EAAMnP,KAAK+vB,QACf,IAAIvG,GACF,wBACA,CACE,yBACA,6BAA6BrU,KAAKC,UAAU4X,EAAK3F,mBAAmB2F,EAAK6B,mBAAmB1Z,KAAKC,UAAUpV,KAAKqe,MAAM+M,MAAMnsB,SAAS4B,MACrI0rB,EAAM,IAAIA,cAAa9rB,GAEzBT,KAAKyc,QACLuQ,EACA,CACE5B,MAAOprB,KAAKqe,MAAM+M,SAIxB,QAAY3qB,IAAR0O,EAAmB,OAAOA,CAChC,CAMJ,CAEF,IAA2B,IAAvBnP,KAAKqe,MAAMqN,QAAmB,CAChC,MAAMwE,EAAwBlwB,KAAK8vB,oBACjCX,EACA7rB,EACAsD,GAEF,GAA8B,IAA1BspB,EAA6B,CAO/B,GAJElwB,KAAKqe,MAAMuM,aACe,IAA1B5qB,KAAKqe,MAAM6N,YACkB,IAA7BlsB,KAAKqe,MAAM+K,OAAOnsB,QACU,IAA5B+C,KAAKqe,MAAM+M,MAAMnuB,OAEjB+C,KAAKgtB,KAAK0B,oBAEL,CAEL,IACyB,IAAvB1uB,KAAKqe,MAAMwM,SACX7qB,KAAKgtB,KAAK6B,QACwB,IAA/B7uB,KAAKqe,MAAM8N,gBAA2B,EAAI,IAC3CrB,EACF,CACA9qB,KAAKqe,MAAMwM,SAAU,EACrB7qB,KAAKmwB,eACLnwB,KAAKowB,gBACLxpB,GAAOspB,EAAwB,EAC/B,QACF,CAEA,IACuB,IAArBvC,IAC0B,IAA1B3tB,KAAKqe,MAAM6N,YACkB,IAA7BlsB,KAAKqe,MAAM+K,OAAOnsB,QACU,IAA5B+C,KAAKqe,MAAM+M,MAAMnuB,OACjB,CACA+C,KAAKgtB,KAAK2B,cACV/nB,GAAOspB,EAAwB,EAC/B,QACF,CACAlwB,KAAKgtB,KAAKhlB,MAAQhI,KAAKqe,MAAMoM,cAAgB7jB,EAC7C,MAAMypB,EAAWrwB,KAAKswB,YACtB,QAAiB7vB,IAAb4vB,EAAwB,OAAOA,EACnCrwB,KAAKgtB,KAAKhlB,MACRhI,KAAKqe,MAAMoM,cAAgB7jB,EAAMspB,EACnC,MAAMK,EAAYvwB,KAAKwwB,WAAW3zB,GAClC,QAAkB4D,IAAd8vB,EAAyB,OAAOA,EACpC,IAAY,IAARvC,GAAahuB,KAAKgtB,KAAKuB,SAAWP,EAGpC,OAFAhuB,KAAKqe,MAAMsN,MAAO,OAClBzC,GAGJ,CACAlpB,KAAKqe,MAAMuM,YAAa,EACxBhkB,GAAOspB,EAAwB,EAC/B,QACF,CACA,GAAIlwB,KAAKqe,MAAMuM,WACb,SAEF,GACc,OAAZY,KACsB,IAArBoB,GAC+B,IAA7B5sB,KAAKqe,MAAM+K,OAAOnsB,QACW,IAA5B+C,KAAKqe,MAAM+M,MAAMnuB,SAGA,IADA+C,KAAK0vB,eAAelE,EAASloB,EAAKsD,EAAKuoB,GACpC,CACtBnvB,KAAKqe,MAAMuM,YAAa,EACxB,QACF,CAEF,MAAM6F,EAAkBzwB,KAAK4vB,cAActsB,EAAKsD,EAAKuoB,GACrD,GAAwB,IAApBsB,EAAuB,CACzBzwB,KAAKgtB,KAAKhlB,MAAQhI,KAAKqe,MAAMoM,cAAgB7jB,EAC7C,MAAMypB,EAAWrwB,KAAKswB,YACtB,QAAiB7vB,IAAb4vB,EAAwB,OAAOA,EACnCzpB,GAAO6pB,EAAkB,EACzB,QACF,CACF,CACF,CACA,IAA8B,IAA1BzwB,KAAKqe,MAAMuM,YAES,IAApBqC,GACAjtB,KAAKqe,MAAMyN,cAAgB9rB,KAAKqe,MAAM+M,MAAMnuB,OAASgwB,EAErD,OAAOjtB,KAAK+vB,QACV,IAAIvG,GACF,sBACA,CACE,mBACA,sDACA,MAAMyD,IACN,WAAWjtB,KAAKgtB,KAAK6B,SAEvB7uB,KAAKyc,QACLzc,KAAKgwB,gBAKb,MAAMU,GACM,IAAV3C,IACuB,IAAvB/tB,KAAKqe,MAAMqN,SACiB,IAA5B1rB,KAAKqe,MAAM+M,MAAMnuB,SAChB+C,KAAKwvB,iBAAiBlsB,EAAKsD,GAExB+pB,GAAoB,IAAV7C,IAA6C,IAA1B9tB,KAAKqe,MAAM6N,WAC9C,IAAgB,IAAZwE,IAAgC,IAAZC,EAEjB,KAAc,IAAV7C,GAAmB9tB,KAAKwvB,iBAAiBlsB,EAAKsD,GAalD,EACW,IAAZ8pB,IACF9pB,GAAO5G,KAAKwvB,iBAAiBlsB,EAAKsD,GAAO,GAE3C,QACF,CAjBE,OAAO5G,KAAK+vB,QACV,IAAIvG,GACF,4CACA,CACE,yBACA,sCACA,WAAWxpB,KAAKgtB,KAAK6B,SAEvB7uB,KAAKyc,QACLzc,KAAKgwB,eAQX,CAnBEhwB,KAAKqe,MAAM+M,MAAMf,OAAO8E,EAoB5B,CACA,IAAY,IAAR1yB,EAEF,IAA2B,IAAvBuD,KAAKqe,MAAMqN,QAAkB,CAC/B,MAAMvc,EAAMnP,KAAK+vB,QACf,IAAIvG,GACF,uBACA,CACE,oBACA,yDAAyDxpB,KAAKgtB,KAAK6B,SAErE7uB,KAAKyc,QACLzc,KAAKgwB,gBAGT,QAAYvvB,IAAR0O,EAAmB,OAAOA,CAChC,MAEE,IAC4B,IAA1BnP,KAAKqe,MAAM6N,YACkB,IAA7BlsB,KAAKqe,MAAM+K,OAAOnsB,QACU,IAA5B+C,KAAKqe,MAAM+M,MAAMnuB,OACjB,CACA+C,KAAKgtB,KAAKhlB,MAAQhI,KAAKqe,MAAMoM,cAAgB7jB,EAC7C,MAAMypB,EAAWrwB,KAAKswB,YACtB,QAAiB7vB,IAAb4vB,EAAwB,OAAOA,EACnC,MAAME,EAAYvwB,KAAKwwB,WAAW3zB,GAClC,QAAkB4D,IAAd8vB,EAAyB,OAAOA,CACtC,MAA0C,IAA/BvwB,KAAKqe,MAAM8N,gBACpBnsB,KAAKgtB,KAAK2B,eACyB,IAA1B3uB,KAAKqe,MAAMuM,YACpB5qB,KAAKgtB,KAAK0B,qBAId1uB,KAAKqe,MAAMoM,eAAiB7jB,EAC5B5G,KAAKqe,MAAMoN,YAAcnoB,EAAItC,MAAM4F,IAEF,IAA/B5G,KAAKqe,MAAM8N,kBACbnsB,KAAKgtB,KAAK6B,QACV7uB,KAAKqe,MAAM8N,iBAAkB,EAEjC,EACAqE,WAAY,SAAU3zB,GACpB,MAAM,QACJmrB,EAAO,sBACP2E,EAAqB,SACrB9rB,EAAQ,KACRmsB,EAAI,KACJ7sB,EAAI,mBACJotB,EAAkB,wBAClBC,EAAuB,wBACvBC,EAAuB,IACvBJ,EAAG,+BACHO,GACE5tB,KAAKyc,SACH,QAAEoO,EAAO,OAAEzB,GAAWppB,KAAKqe,MACjC,IAAgB,IAAZwM,EACF,OAAO7qB,KAAKowB,gBAGd,MAAM/G,EAAeD,EAAOnsB,OAC5B,IAAgB,IAAZ+qB,EACF,OAAuC,IAAnC4F,GAA2CM,GAAc9E,QAC3DppB,KAAKowB,gBAGApwB,KAAK4wB,qBAAqBxH,GAKnC,IAHgB,IAAZpB,GAA2C,IAAtBhoB,KAAKgtB,KAAKuB,UACjCvuB,KAAKqe,MAAM8M,qBAAuB9B,GAEhCA,IAAiBrpB,KAAKqe,MAAM8M,qBAAsB,CACpD,MAAMhc,GACQ,IAAZ6Y,EACI,IAAIwB,GACF,wCACA,CACE,yBACA,UAAUxpB,KAAKqe,MAAM8M,wBACrB,OAAO9B,aAAwBrpB,KAAKgtB,KAAK6B,SAE3C7uB,KAAKyc,QACLzc,KAAKgwB,cACL,CACE5G,OAAQA,IAGZ,IAAII,GACF,kCACA,CACE,yBACA,qBAAqBxB,EAAQ/qB,UAC7B,OAAOosB,aAAwBrpB,KAAKgtB,KAAK6B,SAE3C7uB,KAAKyc,QACLzc,KAAKgwB,cACL,CACE5G,OAAQA,IAGlB,IACyB,IAAvBmE,IAC6B,IAA5BC,GACCnE,EAAerpB,KAAKqe,MAAM8M,uBACC,IAA5BsC,GACCpE,EAAerpB,KAAKqe,MAAM8M,qBAE5BnrB,KAAKgtB,KAAK4B,uBACV5uB,KAAKqe,MAAMnP,MAAQC,MAEd,CACL,MAAM0hB,EAAW7wB,KAAK+vB,QAAQ5gB,GAC9B,GAAI0hB,EAAU,OAAOA,CACvB,CACF,CACA,IAAuC,IAAnCjD,GAA2CM,GAAc9E,GAC3DppB,KAAKowB,oBADP,CAIA,IAAkC,IAA9BpwB,KAAKqe,MAAMwN,eAGb,OAFA7rB,KAAKowB,qBACLpwB,KAAKqe,MAAMwN,gBAAiB,GAI9B,GADA7rB,KAAKgtB,KAAKuB,UACG,IAATpuB,GAAcH,KAAKgtB,KAAKuB,SAAWpuB,EAAM,CAC3C,MAAM,QAAE+sB,GAAYltB,KAAKyc,QAEzB,IAAgB,IAAZuL,EAAmB,CACrB,MAAM9mB,EAAM,CAAC,EAEb,IAAK,IAAI9E,EAAI,EAAGsP,EAAI0d,EAAOnsB,OAAQb,EAAIsP,EAAGtP,SACrBqE,IAAfunB,EAAQ5rB,IAAoB4rB,EAAQ5rB,GAAG6tB,YAGf,IAA1B0C,QACyBlsB,IAAzBS,EAAI8mB,EAAQ5rB,GAAGoR,MAEXxR,MAAMmD,QAAQ+B,EAAI8mB,EAAQ5rB,GAAGoR,OAC/BtM,EAAI8mB,EAAQ5rB,GAAGoR,MAAQtM,EAAI8mB,EAAQ5rB,GAAGoR,MAAM9G,OAAO0iB,EAAOhtB,IAE1D8E,EAAI8mB,EAAQ5rB,GAAGoR,MAAQ,CAACtM,EAAI8mB,EAAQ5rB,GAAGoR,MAAO4b,EAAOhtB,IAGvD8E,EAAI8mB,EAAQ5rB,GAAGoR,MAAQ4b,EAAOhtB,IAIlC,IAAY,IAARixB,IAAyB,IAATL,EAAe,CACjC,MAAM8D,EAAYxiB,OAAOyiB,OACvB,CAAE3H,OAAQloB,IACF,IAARmsB,EACI,CAAEA,IAAKrtB,KAAKqe,MAAMuN,UAAU3sB,SAAS4B,IACrC,CAAC,GACI,IAATmsB,EAAgB,CAAEA,KAAMhtB,KAAKgxB,gBAAmB,CAAC,GAE7C7hB,EAAMnP,KAAKupB,YACH9oB,IAAZysB,EAAwB4D,EAAY,CAAC5vB,EAAIgsB,GAAU4D,GACnDj0B,GAEF,GAAIsS,EACF,OAAOA,CAEX,KAAO,CACL,MAAMA,EAAMnP,KAAKupB,YACH9oB,IAAZysB,EAAwBhsB,EAAM,CAACA,EAAIgsB,GAAUhsB,GAC7CrE,GAEF,GAAIsS,EACF,OAAOA,CAEX,CAEF,MACE,IAAY,IAARke,IAAyB,IAATL,EAAe,CACjC,MAAM8D,EAAYxiB,OAAOyiB,OACvB,CAAE3H,OAAQA,IACF,IAARiE,EACI,CAAEA,IAAKrtB,KAAKqe,MAAMuN,UAAU3sB,SAAS4B,IACrC,CAAC,GACI,IAATmsB,EAAgB,CAAEA,KAAMhtB,KAAKgxB,gBAAmB,CAAC,GAE7C7hB,EAAMnP,KAAKupB,YACH9oB,IAAZysB,EAAwB4D,EAAY,CAAC1H,EAAO8D,GAAU4D,GACtDj0B,GAEF,GAAIsS,EACF,OAAOA,CAEX,KAAO,CACL,MAAMA,EAAMnP,KAAKupB,YACH9oB,IAAZysB,EAAwB9D,EAAS,CAACA,EAAO8D,GAAU9D,GACnDvsB,GAEF,GAAIsS,EACF,OAAOA,CAEX,CAEJ,CACAnP,KAAKowB,eAlFL,CAmFF,EACAQ,qBAAsB,SAAUxH,GAC9B,MAAM,mBAAEiC,GAAuBrrB,KAAKqe,MACpC,IACE,MAAM4S,OACmBxwB,IAAvB4qB,EACIjC,EACAiC,EAAmBhsB,KAAK,KAAM+pB,GACpC,IAAKptB,MAAMmD,QAAQ8xB,GACjB,OAAOjxB,KAAK+vB,QACV,IAAIvG,GACF,6BACA,CACE,0BACA,wCACA,OAAOrU,KAAKC,UAAU6b,MAExBjxB,KAAKyc,QACLzc,KAAKgwB,cACL,CACEiB,QAASA,KAKjB,MAAMC,EAAoBnH,GAAwBkH,GAIlD,OAHAjxB,KAAKqe,MAAM8M,qBAAuB+F,EAAkBj0B,OACpD+C,KAAKyc,QAAQuL,QAAUkJ,OACvBlxB,KAAKowB,eAEP,CAAE,MAAOjhB,GACP,OAAOA,CACT,CACF,EACAihB,cAAe,YACY,IAArBpwB,KAAKyc,QAAQ4Q,KACfrtB,KAAKqe,MAAMuN,UAAUtB,QAEvBtqB,KAAKqe,MAAMnP,WAAQzO,EACnBT,KAAKqe,MAAM+K,OAAS,GACpBppB,KAAKqe,MAAMyN,cAAgB,CAC7B,EACAwE,UAAW,WACT,MAAM,KAAE9D,EAAI,SAAE3rB,EAAQ,MAAEitB,EAAK,gBAAEb,GAAoBjtB,KAAKyc,SAClD,QAAEoO,EAAO,WAAEqB,GAAelsB,KAAKqe,MAErC,IAAgB,IAAZwM,EACF,OAAO7qB,KAAKmwB,eAEd,IAAI/E,EAAQprB,KAAKqe,MAAM+M,MAAMnsB,SAAS4B,GAItC,IAHc,IAAVitB,IAAiC,IAAf5B,IACpBd,EAAQA,EAAM+F,cAEH,IAAT3E,EAAe,CACjB,MAAOrd,EAAK6F,GAAKhV,KAAKoxB,OAAOhG,GAC7B,QAAY3qB,IAAR0O,EAAmB,OAAOA,EAC9Bic,EAAQpW,CACV,CACAhV,KAAKqe,MAAM+K,OAAOvsB,KAAKuuB,GAEC,IAApB6B,GAA0C,iBAAV7B,IAClCprB,KAAKqe,MAAMyN,eAAiBV,EAAMnuB,QAEpC+C,KAAKmwB,cACP,EACAA,aAAc,WACZnwB,KAAKqe,MAAM+M,MAAMd,QACjBtqB,KAAKqe,MAAM6N,YAAa,CAC1B,EACA3C,OAAQ,SAAUH,EAAQvsB,GACxB,MAAM,UAAEswB,GAAcntB,KAAKyc,QAC3B,QAAkBhc,IAAd0sB,EAAyB,CAC3B,MAAMH,EAAOhtB,KAAKgxB,eAClB,IACE5H,EAAS+D,EAAU9tB,KAAK,KAAM+pB,EAAQ4D,EACxC,CAAE,MAAO7d,GACP,OAAOA,CACT,CACA,GAAIia,QACF,MAEJ,CACAvsB,EAAKusB,EACP,EAEAgI,OAAQ,SAAUhG,GAChB,MAAM,QAAEpD,EAAO,mBAAEuF,GAAuBvtB,KAAKyc,QAK7C,IACgB,IALEzgB,MAAMmD,QAAQ6oB,IAM9BuF,GACAvtB,KAAKyc,QAAQuL,QAAQ/qB,QAAU+C,KAAKqe,MAAM+K,OAAOnsB,OAEjD,MAAO,MAACwD,OAAWA,GAErB,GAA6B,OAAzBT,KAAKqe,MAAMqM,UACb,IACE,MAAMsC,EAAOhtB,KAAKgwB,cAClB,MAAO,MAACvvB,EAAWT,KAAKqe,MAAMqM,UAAUrrB,KAAK,KAAM+rB,EAAO4B,GAC5D,CAAE,MAAO7d,GACP,MAAO,CAACA,EACV,CAEF,GAAInP,KAAKqxB,UAAUjG,GACjB,MAAO,MAAC3qB,EAAW6wB,WAAWlG,IACzB,IAA+B,IAA3BprB,KAAKyc,QAAQgQ,UAAqB,CAC3C,MAAMO,EAAOhtB,KAAKgwB,cAClB,MAAO,MAACvvB,EAAWT,KAAKyc,QAAQgQ,UAAUptB,KAAK,KAAM+rB,EAAO4B,GAC9D,CACA,MAAO,MAACvsB,EAAW2qB,EACrB,EAEAoE,iBAAkB,SAAUlsB,EAAKsD,GAY/B,MAXe,EAACtD,EAAKsD,KACnB,MAAM,SAAEwlB,GAAapsB,KAAKqe,MAC1BkT,EAAO,IAAK,IAAIn1B,EAAI,EAAGA,EAAIgwB,EAASnvB,OAAQb,IAAK,CAC/C,MAAMo1B,EAAUpF,EAAShwB,GACzB,IAAK,IAAIsH,EAAI,EAAGA,EAAI8tB,EAAQv0B,OAAQyG,IAClC,GAAI8tB,EAAQ9tB,KAAOJ,EAAIsD,EAAMlD,GAAI,SAAS6tB,EAE5C,OAAOC,EAAQv0B,MACjB,CACA,OAAO,CAAC,EAEHw0B,CAAOnuB,EAAKsD,EACrB,EAOAyqB,UAAW,SAAU5yB,GACnB,OAAOA,EAAQ6yB,WAAW7yB,GAAS,GAAK,CAC1C,EACAixB,eAAgB,SAAUgC,EAAWC,EAAWC,EAAWvsB,GACzD,GAAIqsB,EAAU,KAAOrsB,EAAW,OAAO,EACvC,MAAMwsB,EAAeH,EAAUz0B,OAC/B,IAAK,IAAIb,EAAI,EAAGA,EAAIy1B,EAAcz1B,IAChC,GAAIs1B,EAAUt1B,KAAOu1B,EAAUC,EAAYx1B,GAAI,OAAO,EAExD,OAAOy1B,CACT,EACAjC,cAAe,SAAUtsB,EAAKsD,EAAKuoB,GACjC,MAAM,UAAElH,EAAS,uBAAE8E,GAA2B/sB,KAAKyc,QACnD,IAC6B,IAA3BsQ,GACA/sB,KAAKqe,MAAM+K,OAAOnsB,SAAW+C,KAAKyc,QAAQuL,QAAQ/qB,OAAS,EAE3D,OAAO,EACF,IACsB,IAA3B8vB,GACkC,iBAA3BA,GACP/sB,KAAKqe,MAAM+K,OAAOnsB,SAAW8vB,EAAyB,EAEtD,OAAO,EAETwE,EAAO,IAAK,IAAIn1B,EAAI,EAAGA,EAAI6rB,EAAUhrB,OAAQb,IAAK,CAChD,MAAM01B,EAAM7J,EAAU7rB,GACtB,GAAI01B,EAAI,KAAO3C,EAAK,CAClB,IAAK,IAAIzrB,EAAI,EAAGA,EAAIouB,EAAI70B,OAAQyG,IAC9B,GAAIouB,EAAIpuB,KAAOJ,EAAIsD,EAAMlD,GAAI,SAAS6tB,EAExC,OAAOO,EAAI70B,MACb,CACF,CACA,OAAO,CACT,EACA6yB,oBAAqB,SAAUX,EAAK7rB,EAAKsD,GACvC,MAAM,iBAAEolB,GAAqBhsB,KAAKyc,QAC5ByT,EAAwBlE,EAAiB/uB,OAC/Cs0B,EAAO,IAAK,IAAIn1B,EAAI,EAAGA,EAAI8zB,EAAuB9zB,IAAK,CACrD,MAAMkxB,EAAKtB,EAAiB5vB,GACtB21B,EAAWzE,EAAGrwB,OACpB,GAAIqwB,EAAG,KAAO6B,EAAd,CAGA,IAAK,IAAIzrB,EAAI,EAAGA,EAAIquB,EAAUruB,IAC5B,GAAI4pB,EAAG5pB,KAAOJ,EAAIsD,EAAMlD,GACtB,SAAS6tB,EAGb,OAAOjE,EAAGrwB,MANV,CAOF,CACA,OAAO,CACT,EACAmyB,WAAY,SAAU9rB,EAAKsD,EAAKuoB,GAC9B,MAAM,OAAElE,GAAWjrB,KAAKyc,QACxB,GAAe,OAAXwO,EAAiB,OAAO,EAC5B,MAAMvf,EAAIuf,EAAOhuB,OACjB,GAAIguB,EAAO,KAAOkE,EAAK,CACrB,IAAK,IAAI/yB,EAAI,EAAGA,EAAIsP,EAAGtP,IACrB,GAAI6uB,EAAO7uB,KAAOkH,EAAIsD,EAAMxK,GAC1B,OAAO,EAGX,OAAO,CACT,CACA,OAAO,CACT,EACAizB,UAAW,SAAU/rB,EAAKsD,GACxB,MAAM,MAAEskB,GAAUlrB,KAAKyc,QACvB,GAAc,OAAVyO,EAAgB,OAAO,EAC3B,MAAMxf,EAAIwf,EAAMjuB,OAChB,IAAK,IAAIb,EAAI,EAAGA,EAAIsP,EAAGtP,IACrB,GAAI8uB,EAAM9uB,KAAOkH,EAAIsD,EAAMxK,GACzB,OAAO,EAGX,OAAO,CACT,EACA8yB,8BAA+B,SAAU5rB,EAAKsD,GAC5C,MAAM,SAAE/F,GAAab,KAAKyc,QAIpBuV,EAAM,CAEVzyB,EAAOY,KAAK,OAAQU,GACpBtB,EAAOY,KAAK,KAAMU,GAClBtB,EAAOY,KAAK,KAAMU,IAEpBoxB,EAAM,IAAK,IAAI71B,EAAI,EAAGA,EAAI41B,EAAI/0B,OAAQb,IAAK,CACzC,MAAMsP,EAAIsmB,EAAI51B,GAAGa,OACjB,IAAK,IAAIyG,EAAI,EAAGA,EAAIgI,EAAGhI,IACrB,GAAIsuB,EAAI51B,GAAGsH,KAAOJ,EAAIsD,EAAMlD,GAC1B,SAASuuB,EAKb,OAFAjyB,KAAKyc,QAAQuP,iBAAiBnvB,KAAKm1B,EAAI51B,IACvC4D,KAAKqe,MAAM0N,yBAA2BiG,EAAI51B,GAAGa,OACtC+0B,EAAI51B,GAAGa,MAChB,CACA,OAAO,CACT,EACA8yB,QAAS,SAAUra,GACjB,MAAM,SAAE7U,EAAQ,IAAEwsB,EAAG,wBAAEQ,GAA4B7tB,KAAKyc,QAClDtN,EAAqB,iBAARuG,EAAmB,IAAIzV,MAAMyV,GAAOA,EACvD,OAAImY,GACF7tB,KAAKqe,MAAMwN,gBAAiB,YACCprB,IAAzBT,KAAKyc,QAAQ2Q,SACfptB,KAAKyc,QAAQ2Q,QACXje,EACAke,EAAMrtB,KAAKqe,MAAMuN,UAAU3sB,SAAS4B,QAAYJ,KAM7C0O,CAEX,EACA+iB,cAAe,WACb,MAAO,IACFlyB,KAAKgtB,KACRhF,QAAShoB,KAAKyc,QAAQuL,QAE1B,EACAgJ,aAAc,WACZ,MAAM,QAAEhJ,EAAO,IAAEqF,EAAG,SAAExsB,GAAab,KAAKyc,QACxC,MAAO,IACFzc,KAAKkyB,gBACRhjB,MAAOlP,KAAKqe,MAAMnP,MAClBijB,QAAoB,IAAZnK,EACRxX,MAAOxQ,KAAKqe,MAAM+K,OAAOnsB,OACzBowB,IAAKA,EAAMrtB,KAAKqe,MAAMuN,UAAU3sB,SAAS4B,QAAYJ,EAEzD,EACAuvB,YAAa,WACX,MAAM,QAAEhI,GAAYhoB,KAAKyc,QACnB2V,EAAYp2B,MAAMmD,QAAQ6oB,GAChC,MAAO,IACFhoB,KAAKgxB,eACR3J,QACgB,IAAd+K,EACIpK,EAAQ/qB,OAAS+C,KAAKqe,MAAM+K,OAAOnsB,OACjC+qB,EAAQhoB,KAAKqe,MAAM+K,OAAOnsB,QAAQuQ,KAClC,KACFxN,KAAKqe,MAAM+K,OAAOnsB,OACxByuB,QAAS1rB,KAAKqe,MAAM6N,WAExB,EAEJ,CAOiBmG,CAAY9b,GACrB1Z,EAAQusB,SACmB3oB,IAA3B+tB,EAAO/R,QAAQyQ,QAAuBqB,EAAQ1xB,KAAKusB,GAErDmF,EAAQnF,EAAO,IAAMA,EAAO,EAC9B,EAEIF,EAAQ,OACRoJ,EAAO9D,EAAO1E,MAAMtoB,GAAM,EAAO3E,EAAMqsB,GAC7C,QAAazoB,IAAT6xB,EAAoB,MAAMA,EAC9B,MAAMC,EAAO/D,EAAO1E,WAAMrpB,GAAW,EAAM5D,EAAMqsB,GACjD,QAAazoB,IAAT8xB,EAAoB,MAAMA,EAC9B,OAAOhE,CACT,EAIsB,IAAIlyB,WAAW,GAElBga,OAEjB,8GAaA,KAqIqBpW,MAgPNV,EAAOY,KAAK,CAAC,IAAK,IAAK,MA3NxC,MAqjBMqyB,GAAc,SAAU/V,EAAU,CAAC,EAAG1N,GAoB1C,OAnBA/O,KAAKyc,QAAUA,OACShc,IAApBgc,EAAQgW,SAA6C,OAApBhW,EAAQgW,UAC3CzyB,KAAKyc,QAAQgW,SAAU,GAEzBzyB,KAAKyc,QAAQE,YAAa,OACDlc,IAArBgc,EAAQiW,UAA+C,OAArBjW,EAAQiW,WAC5C1yB,KAAKyc,QAAQiW,SAAW,UAEHjyB,IAAnBgc,EAAQkW,QAA2C,OAAnBlW,EAAQkW,SAC1ClW,EAAQkW,OAAS,MAEnB3yB,KAAK+O,QAAUA,EACf4X,GAAOR,UAAU9mB,KAAKW,KAAMA,KAAKyc,SACjCzc,KAAKqe,MAAQ,CACXuU,QAAS,EACTC,QAAS,EACTjS,SAAU,EACV6D,QAAQ,GAEHzkB,IACT,EAEAga,GAAKC,SAASuY,GAAa7L,GAAOR,WAElCqM,GAAY3yB,UAAUwmB,WAAa,SAAU/H,EAAOjJ,EAAG+K,GACrDpgB,KAAKqe,MAAMwU,UACX7yB,KAAKqe,MAAMuU,WAEN5yB,KAAKqe,MAAMoG,QAAUzkB,KAAKqe,MAAMuU,QAAU5yB,KAAKyc,QAAQiW,WAC1DtS,IACAA,EAAK,MAEP,IACE,IAAI1U,EAAI1L,KAAK+O,QAAQ9R,OAIrB,GAH4B,OAAxB+C,KAAKyc,QAAQkW,QACfjnB,IAEQ,IAANA,EAAS,CAEX,MAAM4d,EAAStpB,KAAK+O,QAAQ1P,KAAKW,KAAMse,EAAOte,KAAKyc,QAAQkW,QACvDrJ,GAAUA,EAAOwJ,MACnBxJ,EAAOwJ,MAAMxJ,IACXtpB,KAAK+yB,OAAO,KAAM,CAACzJ,GAASlJ,EAAG,IAEjCkJ,EAAO0J,OAAO7jB,IACZnP,KAAK+yB,OAAO5jB,EAAI,KAGlBnP,KAAK+yB,OAAO,KAAM,CAACzJ,GAASlJ,EAEhC,KAAO,IAAU,IAAN1U,EAKT,MAAMzL,MAAM,6BALM,CAElB,MAAMogB,EAAW,CAAClR,KAAQ8jB,IAAWjzB,KAAK+yB,OAAO5jB,EAAK8jB,EAAQ7S,GAC9DpgB,KAAK+O,QAAQ1P,KAAKW,KAAMse,EAAO+B,EAAUrgB,KAAKyc,QAAQkW,OACxD,CAEA,CACA,OAAO,CACT,CAAE,MAAOxjB,GACPnP,KAAK+yB,OAAO5jB,EACd,CACF,EACAqjB,GAAY3yB,UAAU0mB,OAAS,SAAUnG,GACZ,IAAvBpgB,KAAKqe,MAAMuU,QACbxS,IAEApgB,KAAKkzB,QAAU,WACb9S,GACF,CAEJ,EACAoS,GAAY3yB,UAAUkzB,OAAS,SAAU5jB,EAAK8jB,EAAQ7S,GAEpD,GADApgB,KAAKqe,MAAMuU,UACPzjB,EACF,OAAOnP,KAAK+mB,QAAQ5X,GAGtBnP,KAAKqe,MAAMuC,WACX,IAAK,IAAItC,KAAS2U,EACK,iBAAV3U,IACTA,EAAQ,GAAGA,KAITA,SAAmD,KAAVA,IAC3Cte,KAAKqe,MAAMoG,QAAUzkB,KAAKnD,KAAKyhB,IAI/B8B,GACFA,IAEEpgB,KAAKkzB,SAAkC,IAAvBlzB,KAAKqe,MAAMuU,SAC7B5yB,KAAKkzB,SAET,EAUA,MAAM9M,GAAY,WAEhB,IAAIrX,EAASwf,EACT9R,EAAU,CAAC,EACf,IAAK,MAAMrgB,KAAK4K,UAAW,CACzB,MAAMmsB,EAAWnsB,UAAU5K,GAC3B,IAAImF,SAAc4xB,EAMlB,GALiB,OAAbA,EACF5xB,EAAO,OACW,WAATA,GAAqBvF,MAAMmD,QAAQg0B,KAC5C5xB,EAAO,SAEI,UAATA,EACFgtB,EAAU4E,OACL,GAAa,WAAT5xB,EACTkb,EAAU,IAAK0W,QACV,GAAa,aAAT5xB,EACTwN,EAAUokB,OACL,GAAa,SAAT5xB,EACT,MAAM,IAAItB,MACR,0BAA0BkV,KAAKC,UAAU+d,kBAAyB/2B,IAGxE,CAEA,IAAIg3B,EAA0B,EAI9B,GAHI3W,EAAQkW,QACVS,IAEErkB,EAAQ9R,OAASm2B,EACnB,MAAMnzB,MAAM,2DAGd,MAAMgzB,EAAS,GACTI,EAAc,IAAIb,GAAY/V,EAAS1N,GAC7CskB,EAAYx2B,KAAO,SAAUyhB,GAC3B2U,EAAOp2B,KAAKyhB,EACd,EACA,IAAK,MAAM8K,KAAUmF,EACnB8E,EAAYhN,WAAW+C,EAAQ,MAAM,WAAa,IAEpD,OAAO6J,CACT,C","sources":["webpack://csv-docs/./node_modules/csv/dist/esm/sync.js"],"sourcesContent":["var global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read$1 (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray$1 = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n  ? global$1.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nkMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) ;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray$1(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\nBuffer.isBuffer = isBuffer$1;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray$1(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read$1(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read$1(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read$1(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read$1(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer$1(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active) ;\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount$1.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount$1;\nfunction listenerCount$1(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global$1.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global$1.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global$1.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar process = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\nvar inherits$1 = inherits;\n\nvar formatRegExp = /%[sdj%]/g;\nfunction format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nfunction deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global$1.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\nvar debugs = {};\nvar debugEnviron;\nfunction debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n}\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isSymbol$1(arg) {\n  return typeof arg === 'symbol';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nfunction isBuffer(maybeBuf) {\n  return isBuffer$1(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nfunction log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar util = {\n  inherits: inherits$1,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol$1,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n};\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return Buffer.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = Buffer.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     };\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nfunction StringDecoder(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n}\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\nReadable.ReadableState = ReadableState;\n\nvar debug = debuglog('stream');\ninherits$1(Readable, EventEmitter);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event])\n      emitter.on(event, fn);\n    else if (Array.isArray(emitter._events[event]))\n      emitter._events[event].unshift(fn);\n    else\n      emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\nfunction listenerCount (emitter, type) {\n  return emitter.listeners(type).length;\n}\nfunction ReadableState(options, stream) {\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  EventEmitter.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = Buffer.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!isBuffer$1(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && src.listeners('data').length) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\nWritable.WritableState = WritableState;\ninherits$1(Writable, EventEmitter);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Object.defineProperty(this, 'buffer', {\n    get: deprecate(function () {\n      return this.getBuffer();\n    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n  });\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\nfunction Writable(options) {\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  EventEmitter.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  nextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) nextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n        nextTick(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n\ninherits$1(Duplex, Readable);\n\nvar keys = Object.keys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\ninherits$1(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\ninherits$1(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\ninherits$1(Stream, EventEmitter);\nStream.Readable = Readable;\nStream.Writable = Writable;\nStream.Duplex = Duplex;\nStream.Transform = Transform;\nStream.PassThrough = PassThrough;\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EventEmitter.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EventEmitter.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nconst init_state$1 = (options) => {\n  // State\n  return {\n    start_time: options.duration ? Date.now() : null,\n    fixed_size_buffer: \"\",\n    count_written: 0,\n    count_created: 0,\n  };\n};\n\n// Generate a random number between 0 and 1 with 2 decimals. The function is idempotent if it detect the \"seed\" option.\nconst random = function (options = {}) {\n  if (options.seed) {\n    return (options.seed = ((options.seed * Math.PI * 100) % 100) / 100);\n  } else {\n    return Math.random();\n  }\n};\n\nconst types = {\n  // Generate an ASCII value.\n  ascii: function ({ options }) {\n    const column = [];\n    const nb_chars = Math.ceil(random(options) * options.maxWordLength);\n    for (let i = 0; i < nb_chars; i++) {\n      const char = Math.floor(random(options) * 32);\n      column.push(String.fromCharCode(char + (char < 16 ? 65 : 97 - 16)));\n    }\n    return column.join(\"\");\n  },\n  // Generate an integer value.\n  int: function ({ options }) {\n    return Math.floor(random(options) * Math.pow(2, 52));\n  },\n  // Generate an boolean value.\n  bool: function ({ options }) {\n    return Math.floor(random(options) * 2);\n  },\n};\n\nconst camelize = function (str) {\n  return str.replace(/_([a-z])/gi, function (_, match) {\n    return match.toUpperCase();\n  });\n};\n\nconst normalize_options$2 = (opts) => {\n  // Convert Stream Readable options if underscored\n  if (opts.object_mode) {\n    opts.objectMode = opts.object_mode;\n  }\n  if (opts.high_water_mark) {\n    opts.highWaterMark = opts.high_water_mark;\n  }\n  // See https://nodejs.org/api/stream.html#stream_new_stream_readable_options\n  // Node.js 20 introduced `stream.getDefaultHighWaterMark(opts.objectMode)`\n  // opts.highWaterMark = opts.highWaterMark ?? (opts.objectMode ? 16 : 16384);\n  // opts.highWaterMark = opts.highWaterMark ?? stream.getDefaultHighWaterMark(opts.objectMode);\n  // Clone and camelize options\n  const options = {};\n  for (const k in opts) {\n    options[camelize(k)] = opts[k];\n  }\n  // Normalize options\n  const dft = {\n    columns: 8,\n    delimiter: \",\",\n    duration: null,\n    encoding: null,\n    end: null,\n    eof: false,\n    fixedSize: false,\n    length: -1,\n    maxWordLength: 16,\n    rowDelimiter: \"\\n\",\n    seed: false,\n    sleep: 0,\n  };\n  for (const k in dft) {\n    if (options[k] === undefined) {\n      options[k] = dft[k];\n    }\n  }\n  // Default values\n  if (options.eof === true) {\n    options.eof = options.rowDelimiter;\n  }\n  if (typeof options.columns === \"number\") {\n    options.columns = new Array(options.columns);\n  }\n  const accepted_header_types = Object.keys(types).filter(\n    (t) => ![\"super_\", \"camelize\"].includes(t),\n  );\n  for (let i = 0; i < options.columns.length; i++) {\n    const v = options.columns[i] || \"ascii\";\n    if (typeof v === \"string\") {\n      if (!accepted_header_types.includes(v)) {\n        throw Error(\n          `Invalid column type: got \"${v}\", default values are ${JSON.stringify(accepted_header_types)}`,\n        );\n      }\n      options.columns[i] = types[v];\n    }\n  }\n  return options;\n};\n\nconst read = (options, state, size, push, close) => {\n  // Already started\n  const data = [];\n  let recordsLength = 0;\n  // Get remaining buffer when fixedSize is enable\n  if (options.fixedSize) {\n    recordsLength = state.fixed_size_buffer.length;\n    if (recordsLength !== 0) {\n      data.push(state.fixed_size_buffer);\n    }\n  }\n  // eslint-disable-next-line\n  while(true){\n    // Exit\n    if (\n      state.count_created === options.length ||\n      (options.end && Date.now() > options.end) ||\n      (options.duration && Date.now() > state.start_time + options.duration)\n    ) {\n      // Flush\n      if (data.length) {\n        if (options.objectMode) {\n          for (const record of data) {\n            push(record);\n          }\n        } else {\n          push(data.join(\"\") + (options.eof ? options.eof : \"\"));\n        }\n        state.end = true;\n      } else {\n        close();\n      }\n      return;\n    }\n    // Create the record\n    let record = [];\n    let recordLength;\n    for (const fn of options.columns) {\n      const result = fn({ options: options, state: state });\n      const type = typeof result;\n      if (result !== null && type !== \"string\" && type !== \"number\") {\n        close(\n          Error(\n            [\n              \"INVALID_VALUE:\",\n              \"values returned by column function must be\",\n              \"a string, a number or null,\",\n              `got ${JSON.stringify(result)}`,\n            ].join(\" \"),\n          ),\n        );\n        return;\n      }\n      record.push(result);\n    }\n    // Obtain record length\n    if (options.objectMode) {\n      recordLength = 0;\n      // recordLength is currently equal to the number of columns\n      // This is wrong and shall equal to 1 record only\n      for (const column of record) {\n        recordLength += column.length;\n      }\n    } else {\n      // Stringify the record\n      record =\n        (state.count_created === 0 ? \"\" : options.rowDelimiter) +\n        record.join(options.delimiter);\n      recordLength = record.length;\n    }\n    state.count_created++;\n    if (recordsLength + recordLength > size) {\n      if (options.objectMode) {\n        data.push(record);\n        for (const record of data) {\n          push(record);\n        }\n      } else {\n        if (options.fixedSize) {\n          state.fixed_size_buffer = record.substr(size - recordsLength);\n          data.push(record.substr(0, size - recordsLength));\n        } else {\n          data.push(record);\n        }\n        push(data.join(\"\"));\n      }\n      return;\n    }\n    recordsLength += recordLength;\n    data.push(record);\n  }\n};\n\nconst Generator = function (options = {}) {\n  this.options = normalize_options$2(options);\n  // Call parent constructor\n  Stream.Readable.call(this, this.options);\n  this.state = init_state$1(this.options);\n  return this;\n};\nutil.inherits(Generator, Stream.Readable);\n\n// Stop the generation.\nGenerator.prototype.end = function () {\n  this.push(null);\n};\n// Put new data into the read queue.\nGenerator.prototype._read = function (size) {\n  setImmediate(() => {\n    this.__read(size);\n  });\n};\nGenerator.prototype.__read = function (size) {\n  read(\n    this.options,\n    this.state,\n    size,\n    (chunk) => {\n      this.__push(chunk);\n    },\n    (err) => {\n      if (err) {\n        this.destroy(err);\n      } else {\n        this.push(null);\n      }\n    },\n  );\n};\n// Put new data into the read queue.\nGenerator.prototype.__push = function (record) {\n  const push = () => {\n    this.state.count_written++;\n    this.push(record);\n    if (this.state.end === true) {\n      return this.push(null);\n    }\n  };\n  this.options.sleep > 0 ? setTimeout(push, this.options.sleep) : push();\n};\n\n/*\nCSV Generate - sync module\n\nPlease look at the [project documentation](https://csv.js.org/generate/) for\nadditional information.\n*/\n\n\nconst generate = function (options) {\n  if (typeof options === \"string\" && /\\d+/.test(options)) {\n    options = parseInt(options);\n  }\n  if (Number.isInteger(options)) {\n    options = { length: options };\n  } else if (typeof options !== \"object\" || options === null) {\n    throw Error(\"Invalid Argument: options must be an object or an integer\");\n  }\n  if (!Number.isInteger(options.length)) {\n    throw Error(\"Invalid Argument: length is not defined\");\n  }\n  const chunks = [];\n  let work = true;\n  const generator = new Generator(options);\n  generator.push = function (chunk) {\n    if (chunk === null) {\n      return (work = false);\n    }\n    chunks.push(chunk);\n  };\n  while (work) {\n    generator.__read(options.highWaterMark);\n  }\n  if (!options.objectMode) {\n    return chunks.join(\"\");\n  } else {\n    return chunks;\n  }\n};\n\nlet CsvError$1 = class CsvError extends Error {\n  constructor(code, message, options, ...contexts) {\n    if (Array.isArray(message)) message = message.join(\" \").trim();\n    super(message);\n    if (Error.captureStackTrace !== undefined) {\n      Error.captureStackTrace(this, CsvError);\n    }\n    this.code = code;\n    for (const context of contexts) {\n      for (const key in context) {\n        const value = context[key];\n        this[key] = isBuffer$1(value)\n          ? value.toString(options.encoding)\n          : value == null\n            ? value\n            : JSON.parse(JSON.stringify(value));\n      }\n    }\n  }\n};\n\nconst is_object$1 = function (obj) {\n  return typeof obj === \"object\" && obj !== null && !Array.isArray(obj);\n};\n\nconst normalize_columns_array = function (columns) {\n  const normalizedColumns = [];\n  for (let i = 0, l = columns.length; i < l; i++) {\n    const column = columns[i];\n    if (column === undefined || column === null || column === false) {\n      normalizedColumns[i] = { disabled: true };\n    } else if (typeof column === \"string\") {\n      normalizedColumns[i] = { name: column };\n    } else if (is_object$1(column)) {\n      if (typeof column.name !== \"string\") {\n        throw new CsvError$1(\"CSV_OPTION_COLUMNS_MISSING_NAME\", [\n          \"Option columns missing name:\",\n          `property \"name\" is required at position ${i}`,\n          \"when column is an object literal\",\n        ]);\n      }\n      normalizedColumns[i] = column;\n    } else {\n      throw new CsvError$1(\"CSV_INVALID_COLUMN_DEFINITION\", [\n        \"Invalid column definition:\",\n        \"expect a string or a literal object,\",\n        `got ${JSON.stringify(column)} at position ${i}`,\n      ]);\n    }\n  }\n  return normalizedColumns;\n};\n\nclass ResizeableBuffer {\n  constructor(size = 100) {\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.allocUnsafe(size);\n  }\n  prepend(val) {\n    if (isBuffer$1(val)) {\n      const length = this.length + val.length;\n      if (length >= this.size) {\n        this.resize();\n        if (length >= this.size) {\n          throw Error(\"INVALID_BUFFER_STATE\");\n        }\n      }\n      const buf = this.buf;\n      this.buf = Buffer.allocUnsafe(this.size);\n      val.copy(this.buf, 0);\n      buf.copy(this.buf, val.length);\n      this.length += val.length;\n    } else {\n      const length = this.length++;\n      if (length === this.size) {\n        this.resize();\n      }\n      const buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf, 1, 0, length);\n    }\n  }\n  append(val) {\n    const length = this.length++;\n    if (length === this.size) {\n      this.resize();\n    }\n    this.buf[length] = val;\n  }\n  clone() {\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n  resize() {\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.allocUnsafe(this.size);\n    this.buf.copy(buf, 0, 0, length);\n    this.buf = buf;\n  }\n  toString(encoding) {\n    if (encoding) {\n      return this.buf.slice(0, this.length).toString(encoding);\n    } else {\n      return Uint8Array.prototype.slice.call(this.buf.slice(0, this.length));\n    }\n  }\n  toJSON() {\n    return this.toString(\"utf8\");\n  }\n  reset() {\n    this.length = 0;\n  }\n}\n\n// white space characters\n// https://en.wikipedia.org/wiki/Whitespace_character\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes#Types\n// \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff\nconst np = 12;\nconst cr$1 = 13; // `\\r`, carriage return, 0x0D in hexadécimal, 13 in decimal\nconst nl$1 = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\nconst space = 32;\nconst tab = 9;\n\nconst init_state = function (options) {\n  return {\n    bomSkipped: false,\n    bufBytesStart: 0,\n    castField: options.cast_function,\n    commenting: false,\n    // Current error encountered by a record\n    error: undefined,\n    enabled: options.from_line === 1,\n    escaping: false,\n    escapeIsQuote:\n      isBuffer$1(options.escape) &&\n      isBuffer$1(options.quote) &&\n      Buffer.compare(options.escape, options.quote) === 0,\n    // columns can be `false`, `true`, `Array`\n    expectedRecordLength: Array.isArray(options.columns)\n      ? options.columns.length\n      : undefined,\n    field: new ResizeableBuffer(20),\n    firstLineToHeaders: options.cast_first_line_to_header,\n    needMoreDataSize: Math.max(\n      // Skip if the remaining buffer smaller than comment\n      options.comment !== null ? options.comment.length : 0,\n      // Skip if the remaining buffer can be delimiter\n      ...options.delimiter.map((delimiter) => delimiter.length),\n      // Skip if the remaining buffer can be escape sequence\n      options.quote !== null ? options.quote.length : 0,\n    ),\n    previousBuf: undefined,\n    quoting: false,\n    stop: false,\n    rawBuffer: new ResizeableBuffer(100),\n    record: [],\n    recordHasError: false,\n    record_length: 0,\n    recordDelimiterMaxLength:\n      options.record_delimiter.length === 0\n        ? 0\n        : Math.max(...options.record_delimiter.map((v) => v.length)),\n    trimChars: [\n      Buffer.from(\" \", options.encoding)[0],\n      Buffer.from(\"\\t\", options.encoding)[0],\n    ],\n    wasQuoting: false,\n    wasRowDelimiter: false,\n    timchars: [\n      Buffer.from(Buffer.from([cr$1], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([nl$1], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([np], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([space], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([tab], \"utf8\").toString(), options.encoding),\n    ],\n  };\n};\n\nconst underscore$1 = function (str) {\n  return str.replace(/([A-Z])/g, function (_, match) {\n    return \"_\" + match.toLowerCase();\n  });\n};\n\nconst normalize_options$1 = function (opts) {\n  const options = {};\n  // Merge with user options\n  for (const opt in opts) {\n    options[underscore$1(opt)] = opts[opt];\n  }\n  // Normalize option `encoding`\n  // Note: defined first because other options depends on it\n  // to convert chars/strings into buffers.\n  if (options.encoding === undefined || options.encoding === true) {\n    options.encoding = \"utf8\";\n  } else if (options.encoding === null || options.encoding === false) {\n    options.encoding = null;\n  } else if (\n    typeof options.encoding !== \"string\" &&\n    options.encoding !== null\n  ) {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_ENCODING\",\n      [\n        \"Invalid option encoding:\",\n        \"encoding must be a string or null to return a buffer,\",\n        `got ${JSON.stringify(options.encoding)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `bom`\n  if (\n    options.bom === undefined ||\n    options.bom === null ||\n    options.bom === false\n  ) {\n    options.bom = false;\n  } else if (options.bom !== true) {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_BOM\",\n      [\n        \"Invalid option bom:\",\n        \"bom must be true,\",\n        `got ${JSON.stringify(options.bom)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `cast`\n  options.cast_function = null;\n  if (\n    options.cast === undefined ||\n    options.cast === null ||\n    options.cast === false ||\n    options.cast === \"\"\n  ) {\n    options.cast = undefined;\n  } else if (typeof options.cast === \"function\") {\n    options.cast_function = options.cast;\n    options.cast = true;\n  } else if (options.cast !== true) {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_CAST\",\n      [\n        \"Invalid option cast:\",\n        \"cast must be true or a function,\",\n        `got ${JSON.stringify(options.cast)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `cast_date`\n  if (\n    options.cast_date === undefined ||\n    options.cast_date === null ||\n    options.cast_date === false ||\n    options.cast_date === \"\"\n  ) {\n    options.cast_date = false;\n  } else if (options.cast_date === true) {\n    options.cast_date = function (value) {\n      const date = Date.parse(value);\n      return !isNaN(date) ? new Date(date) : value;\n    };\n  } else if (typeof options.cast_date !== \"function\") {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_CAST_DATE\",\n      [\n        \"Invalid option cast_date:\",\n        \"cast_date must be true or a function,\",\n        `got ${JSON.stringify(options.cast_date)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `columns`\n  options.cast_first_line_to_header = null;\n  if (options.columns === true) {\n    // Fields in the first line are converted as-is to columns\n    options.cast_first_line_to_header = undefined;\n  } else if (typeof options.columns === \"function\") {\n    options.cast_first_line_to_header = options.columns;\n    options.columns = true;\n  } else if (Array.isArray(options.columns)) {\n    options.columns = normalize_columns_array(options.columns);\n  } else if (\n    options.columns === undefined ||\n    options.columns === null ||\n    options.columns === false\n  ) {\n    options.columns = false;\n  } else {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_COLUMNS\",\n      [\n        \"Invalid option columns:\",\n        \"expect an array, a function or true,\",\n        `got ${JSON.stringify(options.columns)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `group_columns_by_name`\n  if (\n    options.group_columns_by_name === undefined ||\n    options.group_columns_by_name === null ||\n    options.group_columns_by_name === false\n  ) {\n    options.group_columns_by_name = false;\n  } else if (options.group_columns_by_name !== true) {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME\",\n      [\n        \"Invalid option group_columns_by_name:\",\n        \"expect an boolean,\",\n        `got ${JSON.stringify(options.group_columns_by_name)}`,\n      ],\n      options,\n    );\n  } else if (options.columns === false) {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME\",\n      [\n        \"Invalid option group_columns_by_name:\",\n        \"the `columns` mode must be activated.\",\n      ],\n      options,\n    );\n  }\n  // Normalize option `comment`\n  if (\n    options.comment === undefined ||\n    options.comment === null ||\n    options.comment === false ||\n    options.comment === \"\"\n  ) {\n    options.comment = null;\n  } else {\n    if (typeof options.comment === \"string\") {\n      options.comment = Buffer.from(options.comment, options.encoding);\n    }\n    if (!isBuffer$1(options.comment)) {\n      throw new CsvError$1(\n        \"CSV_INVALID_OPTION_COMMENT\",\n        [\n          \"Invalid option comment:\",\n          \"comment must be a buffer or a string,\",\n          `got ${JSON.stringify(options.comment)}`,\n        ],\n        options,\n      );\n    }\n  }\n  // Normalize option `comment_no_infix`\n  if (\n    options.comment_no_infix === undefined ||\n    options.comment_no_infix === null ||\n    options.comment_no_infix === false\n  ) {\n    options.comment_no_infix = false;\n  } else if (options.comment_no_infix !== true) {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_COMMENT\",\n      [\n        \"Invalid option comment_no_infix:\",\n        \"value must be a boolean,\",\n        `got ${JSON.stringify(options.comment_no_infix)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `delimiter`\n  const delimiter_json = JSON.stringify(options.delimiter);\n  if (!Array.isArray(options.delimiter))\n    options.delimiter = [options.delimiter];\n  if (options.delimiter.length === 0) {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_DELIMITER\",\n      [\n        \"Invalid option delimiter:\",\n        \"delimiter must be a non empty string or buffer or array of string|buffer,\",\n        `got ${delimiter_json}`,\n      ],\n      options,\n    );\n  }\n  options.delimiter = options.delimiter.map(function (delimiter) {\n    if (delimiter === undefined || delimiter === null || delimiter === false) {\n      return Buffer.from(\",\", options.encoding);\n    }\n    if (typeof delimiter === \"string\") {\n      delimiter = Buffer.from(delimiter, options.encoding);\n    }\n    if (!isBuffer$1(delimiter) || delimiter.length === 0) {\n      throw new CsvError$1(\n        \"CSV_INVALID_OPTION_DELIMITER\",\n        [\n          \"Invalid option delimiter:\",\n          \"delimiter must be a non empty string or buffer or array of string|buffer,\",\n          `got ${delimiter_json}`,\n        ],\n        options,\n      );\n    }\n    return delimiter;\n  });\n  // Normalize option `escape`\n  if (options.escape === undefined || options.escape === true) {\n    options.escape = Buffer.from('\"', options.encoding);\n  } else if (typeof options.escape === \"string\") {\n    options.escape = Buffer.from(options.escape, options.encoding);\n  } else if (options.escape === null || options.escape === false) {\n    options.escape = null;\n  }\n  if (options.escape !== null) {\n    if (!isBuffer$1(options.escape)) {\n      throw new Error(\n        `Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(options.escape)}`,\n      );\n    }\n  }\n  // Normalize option `from`\n  if (options.from === undefined || options.from === null) {\n    options.from = 1;\n  } else {\n    if (typeof options.from === \"string\" && /\\d+/.test(options.from)) {\n      options.from = parseInt(options.from);\n    }\n    if (Number.isInteger(options.from)) {\n      if (options.from < 0) {\n        throw new Error(\n          `Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: from must be an integer, got ${JSON.stringify(options.from)}`,\n      );\n    }\n  }\n  // Normalize option `from_line`\n  if (options.from_line === undefined || options.from_line === null) {\n    options.from_line = 1;\n  } else {\n    if (\n      typeof options.from_line === \"string\" &&\n      /\\d+/.test(options.from_line)\n    ) {\n      options.from_line = parseInt(options.from_line);\n    }\n    if (Number.isInteger(options.from_line)) {\n      if (options.from_line <= 0) {\n        throw new Error(\n          `Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`,\n      );\n    }\n  }\n  // Normalize options `ignore_last_delimiters`\n  if (\n    options.ignore_last_delimiters === undefined ||\n    options.ignore_last_delimiters === null\n  ) {\n    options.ignore_last_delimiters = false;\n  } else if (typeof options.ignore_last_delimiters === \"number\") {\n    options.ignore_last_delimiters = Math.floor(options.ignore_last_delimiters);\n    if (options.ignore_last_delimiters === 0) {\n      options.ignore_last_delimiters = false;\n    }\n  } else if (typeof options.ignore_last_delimiters !== \"boolean\") {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_IGNORE_LAST_DELIMITERS\",\n      [\n        \"Invalid option `ignore_last_delimiters`:\",\n        \"the value must be a boolean value or an integer,\",\n        `got ${JSON.stringify(options.ignore_last_delimiters)}`,\n      ],\n      options,\n    );\n  }\n  if (options.ignore_last_delimiters === true && options.columns === false) {\n    throw new CsvError$1(\n      \"CSV_IGNORE_LAST_DELIMITERS_REQUIRES_COLUMNS\",\n      [\n        \"The option `ignore_last_delimiters`\",\n        \"requires the activation of the `columns` option\",\n      ],\n      options,\n    );\n  }\n  // Normalize option `info`\n  if (\n    options.info === undefined ||\n    options.info === null ||\n    options.info === false\n  ) {\n    options.info = false;\n  } else if (options.info !== true) {\n    throw new Error(\n      `Invalid Option: info must be true, got ${JSON.stringify(options.info)}`,\n    );\n  }\n  // Normalize option `max_record_size`\n  if (\n    options.max_record_size === undefined ||\n    options.max_record_size === null ||\n    options.max_record_size === false\n  ) {\n    options.max_record_size = 0;\n  } else if (\n    Number.isInteger(options.max_record_size) &&\n    options.max_record_size >= 0\n  ) ; else if (\n    typeof options.max_record_size === \"string\" &&\n    /\\d+/.test(options.max_record_size)\n  ) {\n    options.max_record_size = parseInt(options.max_record_size);\n  } else {\n    throw new Error(\n      `Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options.max_record_size)}`,\n    );\n  }\n  // Normalize option `objname`\n  if (\n    options.objname === undefined ||\n    options.objname === null ||\n    options.objname === false\n  ) {\n    options.objname = undefined;\n  } else if (isBuffer$1(options.objname)) {\n    if (options.objname.length === 0) {\n      throw new Error(`Invalid Option: objname must be a non empty buffer`);\n    }\n    if (options.encoding === null) ; else {\n      options.objname = options.objname.toString(options.encoding);\n    }\n  } else if (typeof options.objname === \"string\") {\n    if (options.objname.length === 0) {\n      throw new Error(`Invalid Option: objname must be a non empty string`);\n    }\n    // Great, nothing to do\n  } else if (typeof options.objname === \"number\") ; else {\n    throw new Error(\n      `Invalid Option: objname must be a string or a buffer, got ${options.objname}`,\n    );\n  }\n  if (options.objname !== undefined) {\n    if (typeof options.objname === \"number\") {\n      if (options.columns !== false) {\n        throw Error(\n          \"Invalid Option: objname index cannot be combined with columns or be defined as a field\",\n        );\n      }\n    } else {\n      // A string or a buffer\n      if (options.columns === false) {\n        throw Error(\n          \"Invalid Option: objname field must be combined with columns or be defined as an index\",\n        );\n      }\n    }\n  }\n  // Normalize option `on_record`\n  if (options.on_record === undefined || options.on_record === null) {\n    options.on_record = undefined;\n  } else if (typeof options.on_record !== \"function\") {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_ON_RECORD\",\n      [\n        \"Invalid option `on_record`:\",\n        \"expect a function,\",\n        `got ${JSON.stringify(options.on_record)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `on_skip`\n  // options.on_skip ??= (err, chunk) => {\n  //   this.emit('skip', err, chunk);\n  // };\n  if (\n    options.on_skip !== undefined &&\n    options.on_skip !== null &&\n    typeof options.on_skip !== \"function\"\n  ) {\n    throw new Error(\n      `Invalid Option: on_skip must be a function, got ${JSON.stringify(options.on_skip)}`,\n    );\n  }\n  // Normalize option `quote`\n  if (\n    options.quote === null ||\n    options.quote === false ||\n    options.quote === \"\"\n  ) {\n    options.quote = null;\n  } else {\n    if (options.quote === undefined || options.quote === true) {\n      options.quote = Buffer.from('\"', options.encoding);\n    } else if (typeof options.quote === \"string\") {\n      options.quote = Buffer.from(options.quote, options.encoding);\n    }\n    if (!isBuffer$1(options.quote)) {\n      throw new Error(\n        `Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options.quote)}`,\n      );\n    }\n  }\n  // Normalize option `raw`\n  if (\n    options.raw === undefined ||\n    options.raw === null ||\n    options.raw === false\n  ) {\n    options.raw = false;\n  } else if (options.raw !== true) {\n    throw new Error(\n      `Invalid Option: raw must be true, got ${JSON.stringify(options.raw)}`,\n    );\n  }\n  // Normalize option `record_delimiter`\n  if (options.record_delimiter === undefined) {\n    options.record_delimiter = [];\n  } else if (\n    typeof options.record_delimiter === \"string\" ||\n    isBuffer$1(options.record_delimiter)\n  ) {\n    if (options.record_delimiter.length === 0) {\n      throw new CsvError$1(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a non empty string or buffer,\",\n          `got ${JSON.stringify(options.record_delimiter)}`,\n        ],\n        options,\n      );\n    }\n    options.record_delimiter = [options.record_delimiter];\n  } else if (!Array.isArray(options.record_delimiter)) {\n    throw new CsvError$1(\n      \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n      [\n        \"Invalid option `record_delimiter`:\",\n        \"value must be a string, a buffer or array of string|buffer,\",\n        `got ${JSON.stringify(options.record_delimiter)}`,\n      ],\n      options,\n    );\n  }\n  options.record_delimiter = options.record_delimiter.map(function (rd, i) {\n    if (typeof rd !== \"string\" && !isBuffer$1(rd)) {\n      throw new CsvError$1(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a string, a buffer or array of string|buffer\",\n          `at index ${i},`,\n          `got ${JSON.stringify(rd)}`,\n        ],\n        options,\n      );\n    } else if (rd.length === 0) {\n      throw new CsvError$1(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a non empty string or buffer\",\n          `at index ${i},`,\n          `got ${JSON.stringify(rd)}`,\n        ],\n        options,\n      );\n    }\n    if (typeof rd === \"string\") {\n      rd = Buffer.from(rd, options.encoding);\n    }\n    return rd;\n  });\n  // Normalize option `relax_column_count`\n  if (typeof options.relax_column_count === \"boolean\") ; else if (\n    options.relax_column_count === undefined ||\n    options.relax_column_count === null\n  ) {\n    options.relax_column_count = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options.relax_column_count)}`,\n    );\n  }\n  if (typeof options.relax_column_count_less === \"boolean\") ; else if (\n    options.relax_column_count_less === undefined ||\n    options.relax_column_count_less === null\n  ) {\n    options.relax_column_count_less = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(options.relax_column_count_less)}`,\n    );\n  }\n  if (typeof options.relax_column_count_more === \"boolean\") ; else if (\n    options.relax_column_count_more === undefined ||\n    options.relax_column_count_more === null\n  ) {\n    options.relax_column_count_more = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(options.relax_column_count_more)}`,\n    );\n  }\n  // Normalize option `relax_quotes`\n  if (typeof options.relax_quotes === \"boolean\") ; else if (\n    options.relax_quotes === undefined ||\n    options.relax_quotes === null\n  ) {\n    options.relax_quotes = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_quotes must be a boolean, got ${JSON.stringify(options.relax_quotes)}`,\n    );\n  }\n  // Normalize option `skip_empty_lines`\n  if (typeof options.skip_empty_lines === \"boolean\") ; else if (\n    options.skip_empty_lines === undefined ||\n    options.skip_empty_lines === null\n  ) {\n    options.skip_empty_lines = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options.skip_empty_lines)}`,\n    );\n  }\n  // Normalize option `skip_records_with_empty_values`\n  if (typeof options.skip_records_with_empty_values === \"boolean\") ; else if (\n    options.skip_records_with_empty_values === undefined ||\n    options.skip_records_with_empty_values === null\n  ) {\n    options.skip_records_with_empty_values = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_records_with_empty_values must be a boolean, got ${JSON.stringify(options.skip_records_with_empty_values)}`,\n    );\n  }\n  // Normalize option `skip_records_with_error`\n  if (typeof options.skip_records_with_error === \"boolean\") ; else if (\n    options.skip_records_with_error === undefined ||\n    options.skip_records_with_error === null\n  ) {\n    options.skip_records_with_error = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_records_with_error must be a boolean, got ${JSON.stringify(options.skip_records_with_error)}`,\n    );\n  }\n  // Normalize option `rtrim`\n  if (\n    options.rtrim === undefined ||\n    options.rtrim === null ||\n    options.rtrim === false\n  ) {\n    options.rtrim = false;\n  } else if (options.rtrim !== true) {\n    throw new Error(\n      `Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options.rtrim)}`,\n    );\n  }\n  // Normalize option `ltrim`\n  if (\n    options.ltrim === undefined ||\n    options.ltrim === null ||\n    options.ltrim === false\n  ) {\n    options.ltrim = false;\n  } else if (options.ltrim !== true) {\n    throw new Error(\n      `Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options.ltrim)}`,\n    );\n  }\n  // Normalize option `trim`\n  if (\n    options.trim === undefined ||\n    options.trim === null ||\n    options.trim === false\n  ) {\n    options.trim = false;\n  } else if (options.trim !== true) {\n    throw new Error(\n      `Invalid Option: trim must be a boolean, got ${JSON.stringify(options.trim)}`,\n    );\n  }\n  // Normalize options `trim`, `ltrim` and `rtrim`\n  if (options.trim === true && opts.ltrim !== false) {\n    options.ltrim = true;\n  } else if (options.ltrim !== true) {\n    options.ltrim = false;\n  }\n  if (options.trim === true && opts.rtrim !== false) {\n    options.rtrim = true;\n  } else if (options.rtrim !== true) {\n    options.rtrim = false;\n  }\n  // Normalize option `to`\n  if (options.to === undefined || options.to === null) {\n    options.to = -1;\n  } else {\n    if (typeof options.to === \"string\" && /\\d+/.test(options.to)) {\n      options.to = parseInt(options.to);\n    }\n    if (Number.isInteger(options.to)) {\n      if (options.to <= 0) {\n        throw new Error(\n          `Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`,\n      );\n    }\n  }\n  // Normalize option `to_line`\n  if (options.to_line === undefined || options.to_line === null) {\n    options.to_line = -1;\n  } else {\n    if (typeof options.to_line === \"string\" && /\\d+/.test(options.to_line)) {\n      options.to_line = parseInt(options.to_line);\n    }\n    if (Number.isInteger(options.to_line)) {\n      if (options.to_line <= 0) {\n        throw new Error(\n          `Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`,\n      );\n    }\n  }\n  return options;\n};\n\nconst isRecordEmpty = function (record) {\n  return record.every(\n    (field) =>\n      field == null || (field.toString && field.toString().trim() === \"\"),\n  );\n};\n\nconst cr = 13; // `\\r`, carriage return, 0x0D in hexadécimal, 13 in decimal\nconst nl = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\n\nconst boms = {\n  // Note, the following are equals:\n  // Buffer.from(\"\\ufeff\")\n  // Buffer.from([239, 187, 191])\n  // Buffer.from('EFBBBF', 'hex')\n  utf8: Buffer.from([239, 187, 191]),\n  // Note, the following are equals:\n  // Buffer.from \"\\ufeff\", 'utf16le\n  // Buffer.from([255, 254])\n  utf16le: Buffer.from([255, 254]),\n};\n\nconst transform$1 = function (original_options = {}) {\n  const info = {\n    bytes: 0,\n    comment_lines: 0,\n    empty_lines: 0,\n    invalid_field_length: 0,\n    lines: 1,\n    records: 0,\n  };\n  const options = normalize_options$1(original_options);\n  return {\n    info: info,\n    original_options: original_options,\n    options: options,\n    state: init_state(options),\n    __needMoreData: function (i, bufLen, end) {\n      if (end) return false;\n      const { encoding, escape, quote } = this.options;\n      const { quoting, needMoreDataSize, recordDelimiterMaxLength } =\n        this.state;\n      const numOfCharLeft = bufLen - i - 1;\n      const requiredLength = Math.max(\n        needMoreDataSize,\n        // Skip if the remaining buffer smaller than record delimiter\n        // If \"record_delimiter\" is yet to be discovered:\n        // 1. It is equals to `[]` and \"recordDelimiterMaxLength\" equals `0`\n        // 2. We set the length to windows line ending in the current encoding\n        // Note, that encoding is known from user or bom discovery at that point\n        // recordDelimiterMaxLength,\n        recordDelimiterMaxLength === 0\n          ? Buffer.from(\"\\r\\n\", encoding).length\n          : recordDelimiterMaxLength,\n        // Skip if remaining buffer can be an escaped quote\n        quoting ? (escape === null ? 0 : escape.length) + quote.length : 0,\n        // Skip if remaining buffer can be record delimiter following the closing quote\n        quoting ? quote.length + recordDelimiterMaxLength : 0,\n      );\n      return numOfCharLeft < requiredLength;\n    },\n    // Central parser implementation\n    parse: function (nextBuf, end, push, close) {\n      const {\n        bom,\n        comment_no_infix,\n        encoding,\n        from_line,\n        ltrim,\n        max_record_size,\n        raw,\n        relax_quotes,\n        rtrim,\n        skip_empty_lines,\n        to,\n        to_line,\n      } = this.options;\n      let { comment, escape, quote, record_delimiter } = this.options;\n      const { bomSkipped, previousBuf, rawBuffer, escapeIsQuote } = this.state;\n      let buf;\n      if (previousBuf === undefined) {\n        if (nextBuf === undefined) {\n          // Handle empty string\n          close();\n          return;\n        } else {\n          buf = nextBuf;\n        }\n      } else if (previousBuf !== undefined && nextBuf === undefined) {\n        buf = previousBuf;\n      } else {\n        buf = Buffer.concat([previousBuf, nextBuf]);\n      }\n      // Handle UTF BOM\n      if (bomSkipped === false) {\n        if (bom === false) {\n          this.state.bomSkipped = true;\n        } else if (buf.length < 3) {\n          // No enough data\n          if (end === false) {\n            // Wait for more data\n            this.state.previousBuf = buf;\n            return;\n          }\n        } else {\n          for (const encoding in boms) {\n            if (boms[encoding].compare(buf, 0, boms[encoding].length) === 0) {\n              // Skip BOM\n              const bomLength = boms[encoding].length;\n              this.state.bufBytesStart += bomLength;\n              buf = buf.slice(bomLength);\n              // Renormalize original options with the new encoding\n              this.options = normalize_options$1({\n                ...this.original_options,\n                encoding: encoding,\n              });\n              // Options will re-evaluate the Buffer with the new encoding\n              ({ comment, escape, quote } = this.options);\n              break;\n            }\n          }\n          this.state.bomSkipped = true;\n        }\n      }\n      const bufLen = buf.length;\n      let pos;\n      for (pos = 0; pos < bufLen; pos++) {\n        // Ensure we get enough space to look ahead\n        // There should be a way to move this out of the loop\n        if (this.__needMoreData(pos, bufLen, end)) {\n          break;\n        }\n        if (this.state.wasRowDelimiter === true) {\n          this.info.lines++;\n          this.state.wasRowDelimiter = false;\n        }\n        if (to_line !== -1 && this.info.lines > to_line) {\n          this.state.stop = true;\n          close();\n          return;\n        }\n        // Auto discovery of record_delimiter, unix, mac and windows supported\n        if (this.state.quoting === false && record_delimiter.length === 0) {\n          const record_delimiterCount = this.__autoDiscoverRecordDelimiter(\n            buf,\n            pos,\n          );\n          if (record_delimiterCount) {\n            record_delimiter = this.options.record_delimiter;\n          }\n        }\n        const chr = buf[pos];\n        if (raw === true) {\n          rawBuffer.append(chr);\n        }\n        if (\n          (chr === cr || chr === nl) &&\n          this.state.wasRowDelimiter === false\n        ) {\n          this.state.wasRowDelimiter = true;\n        }\n        // Previous char was a valid escape char\n        // treat the current char as a regular char\n        if (this.state.escaping === true) {\n          this.state.escaping = false;\n        } else {\n          // Escape is only active inside quoted fields\n          // We are quoting, the char is an escape chr and there is a chr to escape\n          // if(escape !== null && this.state.quoting === true && chr === escape && pos + 1 < bufLen){\n          if (\n            escape !== null &&\n            this.state.quoting === true &&\n            this.__isEscape(buf, pos, chr) &&\n            pos + escape.length < bufLen\n          ) {\n            if (escapeIsQuote) {\n              if (this.__isQuote(buf, pos + escape.length)) {\n                this.state.escaping = true;\n                pos += escape.length - 1;\n                continue;\n              }\n            } else {\n              this.state.escaping = true;\n              pos += escape.length - 1;\n              continue;\n            }\n          }\n          // Not currently escaping and chr is a quote\n          // TODO: need to compare bytes instead of single char\n          if (this.state.commenting === false && this.__isQuote(buf, pos)) {\n            if (this.state.quoting === true) {\n              const nextChr = buf[pos + quote.length];\n              const isNextChrTrimable =\n                rtrim && this.__isCharTrimable(buf, pos + quote.length);\n              const isNextChrComment =\n                comment !== null &&\n                this.__compareBytes(comment, buf, pos + quote.length, nextChr);\n              const isNextChrDelimiter = this.__isDelimiter(\n                buf,\n                pos + quote.length,\n                nextChr,\n              );\n              const isNextChrRecordDelimiter =\n                record_delimiter.length === 0\n                  ? this.__autoDiscoverRecordDelimiter(buf, pos + quote.length)\n                  : this.__isRecordDelimiter(nextChr, buf, pos + quote.length);\n              // Escape a quote\n              // Treat next char as a regular character\n              if (\n                escape !== null &&\n                this.__isEscape(buf, pos, chr) &&\n                this.__isQuote(buf, pos + escape.length)\n              ) {\n                pos += escape.length - 1;\n              } else if (\n                !nextChr ||\n                isNextChrDelimiter ||\n                isNextChrRecordDelimiter ||\n                isNextChrComment ||\n                isNextChrTrimable\n              ) {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                pos += quote.length - 1;\n                continue;\n              } else if (relax_quotes === false) {\n                const err = this.__error(\n                  new CsvError$1(\n                    \"CSV_INVALID_CLOSING_QUOTE\",\n                    [\n                      \"Invalid Closing Quote:\",\n                      `got \"${String.fromCharCode(nextChr)}\"`,\n                      `at line ${this.info.lines}`,\n                      \"instead of delimiter, record delimiter, trimable character\",\n                      \"(if activated) or comment\",\n                    ],\n                    this.options,\n                    this.__infoField(),\n                  ),\n                );\n                if (err !== undefined) return err;\n              } else {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                this.state.field.prepend(quote);\n                pos += quote.length - 1;\n              }\n            } else {\n              if (this.state.field.length !== 0) {\n                // In relax_quotes mode, treat opening quote preceded by chrs as regular\n                if (relax_quotes === false) {\n                  const info = this.__infoField();\n                  const bom = Object.keys(boms)\n                    .map((b) =>\n                      boms[b].equals(this.state.field.toString()) ? b : false,\n                    )\n                    .filter(Boolean)[0];\n                  const err = this.__error(\n                    new CsvError$1(\n                      \"INVALID_OPENING_QUOTE\",\n                      [\n                        \"Invalid Opening Quote:\",\n                        `a quote is found on field ${JSON.stringify(info.column)} at line ${info.lines}, value is ${JSON.stringify(this.state.field.toString(encoding))}`,\n                        bom ? `(${bom} bom)` : undefined,\n                      ],\n                      this.options,\n                      info,\n                      {\n                        field: this.state.field,\n                      },\n                    ),\n                  );\n                  if (err !== undefined) return err;\n                }\n              } else {\n                this.state.quoting = true;\n                pos += quote.length - 1;\n                continue;\n              }\n            }\n          }\n          if (this.state.quoting === false) {\n            const recordDelimiterLength = this.__isRecordDelimiter(\n              chr,\n              buf,\n              pos,\n            );\n            if (recordDelimiterLength !== 0) {\n              // Do not emit comments which take a full line\n              const skipCommentLine =\n                this.state.commenting &&\n                this.state.wasQuoting === false &&\n                this.state.record.length === 0 &&\n                this.state.field.length === 0;\n              if (skipCommentLine) {\n                this.info.comment_lines++;\n                // Skip full comment line\n              } else {\n                // Activate records emition if above from_line\n                if (\n                  this.state.enabled === false &&\n                  this.info.lines +\n                    (this.state.wasRowDelimiter === true ? 1 : 0) >=\n                    from_line\n                ) {\n                  this.state.enabled = true;\n                  this.__resetField();\n                  this.__resetRecord();\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                // Skip if line is empty and skip_empty_lines activated\n                if (\n                  skip_empty_lines === true &&\n                  this.state.wasQuoting === false &&\n                  this.state.record.length === 0 &&\n                  this.state.field.length === 0\n                ) {\n                  this.info.empty_lines++;\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                this.info.bytes = this.state.bufBytesStart + pos;\n                const errField = this.__onField();\n                if (errField !== undefined) return errField;\n                this.info.bytes =\n                  this.state.bufBytesStart + pos + recordDelimiterLength;\n                const errRecord = this.__onRecord(push);\n                if (errRecord !== undefined) return errRecord;\n                if (to !== -1 && this.info.records >= to) {\n                  this.state.stop = true;\n                  close();\n                  return;\n                }\n              }\n              this.state.commenting = false;\n              pos += recordDelimiterLength - 1;\n              continue;\n            }\n            if (this.state.commenting) {\n              continue;\n            }\n            if (\n              comment !== null &&\n              (comment_no_infix === false ||\n                (this.state.record.length === 0 &&\n                  this.state.field.length === 0))\n            ) {\n              const commentCount = this.__compareBytes(comment, buf, pos, chr);\n              if (commentCount !== 0) {\n                this.state.commenting = true;\n                continue;\n              }\n            }\n            const delimiterLength = this.__isDelimiter(buf, pos, chr);\n            if (delimiterLength !== 0) {\n              this.info.bytes = this.state.bufBytesStart + pos;\n              const errField = this.__onField();\n              if (errField !== undefined) return errField;\n              pos += delimiterLength - 1;\n              continue;\n            }\n          }\n        }\n        if (this.state.commenting === false) {\n          if (\n            max_record_size !== 0 &&\n            this.state.record_length + this.state.field.length > max_record_size\n          ) {\n            return this.__error(\n              new CsvError$1(\n                \"CSV_MAX_RECORD_SIZE\",\n                [\n                  \"Max Record Size:\",\n                  \"record exceed the maximum number of tolerated bytes\",\n                  `of ${max_record_size}`,\n                  `at line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n              ),\n            );\n          }\n        }\n        const lappend =\n          ltrim === false ||\n          this.state.quoting === true ||\n          this.state.field.length !== 0 ||\n          !this.__isCharTrimable(buf, pos);\n        // rtrim in non quoting is handle in __onField\n        const rappend = rtrim === false || this.state.wasQuoting === false;\n        if (lappend === true && rappend === true) {\n          this.state.field.append(chr);\n        } else if (rtrim === true && !this.__isCharTrimable(buf, pos)) {\n          return this.__error(\n            new CsvError$1(\n              \"CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE\",\n              [\n                \"Invalid Closing Quote:\",\n                \"found non trimable byte after quote\",\n                `at line ${this.info.lines}`,\n              ],\n              this.options,\n              this.__infoField(),\n            ),\n          );\n        } else {\n          if (lappend === false) {\n            pos += this.__isCharTrimable(buf, pos) - 1;\n          }\n          continue;\n        }\n      }\n      if (end === true) {\n        // Ensure we are not ending in a quoting state\n        if (this.state.quoting === true) {\n          const err = this.__error(\n            new CsvError$1(\n              \"CSV_QUOTE_NOT_CLOSED\",\n              [\n                \"Quote Not Closed:\",\n                `the parsing is finished with an opening quote at line ${this.info.lines}`,\n              ],\n              this.options,\n              this.__infoField(),\n            ),\n          );\n          if (err !== undefined) return err;\n        } else {\n          // Skip last line if it has no characters\n          if (\n            this.state.wasQuoting === true ||\n            this.state.record.length !== 0 ||\n            this.state.field.length !== 0\n          ) {\n            this.info.bytes = this.state.bufBytesStart + pos;\n            const errField = this.__onField();\n            if (errField !== undefined) return errField;\n            const errRecord = this.__onRecord(push);\n            if (errRecord !== undefined) return errRecord;\n          } else if (this.state.wasRowDelimiter === true) {\n            this.info.empty_lines++;\n          } else if (this.state.commenting === true) {\n            this.info.comment_lines++;\n          }\n        }\n      } else {\n        this.state.bufBytesStart += pos;\n        this.state.previousBuf = buf.slice(pos);\n      }\n      if (this.state.wasRowDelimiter === true) {\n        this.info.lines++;\n        this.state.wasRowDelimiter = false;\n      }\n    },\n    __onRecord: function (push) {\n      const {\n        columns,\n        group_columns_by_name,\n        encoding,\n        info,\n        from,\n        relax_column_count,\n        relax_column_count_less,\n        relax_column_count_more,\n        raw,\n        skip_records_with_empty_values,\n      } = this.options;\n      const { enabled, record } = this.state;\n      if (enabled === false) {\n        return this.__resetRecord();\n      }\n      // Convert the first line into column names\n      const recordLength = record.length;\n      if (columns === true) {\n        if (skip_records_with_empty_values === true && isRecordEmpty(record)) {\n          this.__resetRecord();\n          return;\n        }\n        return this.__firstLineToColumns(record);\n      }\n      if (columns === false && this.info.records === 0) {\n        this.state.expectedRecordLength = recordLength;\n      }\n      if (recordLength !== this.state.expectedRecordLength) {\n        const err =\n          columns === false\n            ? new CsvError$1(\n                \"CSV_RECORD_INCONSISTENT_FIELDS_LENGTH\",\n                [\n                  \"Invalid Record Length:\",\n                  `expect ${this.state.expectedRecordLength},`,\n                  `got ${recordLength} on line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n                {\n                  record: record,\n                },\n              )\n            : new CsvError$1(\n                \"CSV_RECORD_INCONSISTENT_COLUMNS\",\n                [\n                  \"Invalid Record Length:\",\n                  `columns length is ${columns.length},`, // rename columns\n                  `got ${recordLength} on line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n                {\n                  record: record,\n                },\n              );\n        if (\n          relax_column_count === true ||\n          (relax_column_count_less === true &&\n            recordLength < this.state.expectedRecordLength) ||\n          (relax_column_count_more === true &&\n            recordLength > this.state.expectedRecordLength)\n        ) {\n          this.info.invalid_field_length++;\n          this.state.error = err;\n          // Error is undefined with skip_records_with_error\n        } else {\n          const finalErr = this.__error(err);\n          if (finalErr) return finalErr;\n        }\n      }\n      if (skip_records_with_empty_values === true && isRecordEmpty(record)) {\n        this.__resetRecord();\n        return;\n      }\n      if (this.state.recordHasError === true) {\n        this.__resetRecord();\n        this.state.recordHasError = false;\n        return;\n      }\n      this.info.records++;\n      if (from === 1 || this.info.records >= from) {\n        const { objname } = this.options;\n        // With columns, records are object\n        if (columns !== false) {\n          const obj = {};\n          // Transform record array to an object\n          for (let i = 0, l = record.length; i < l; i++) {\n            if (columns[i] === undefined || columns[i].disabled) continue;\n            // Turn duplicate columns into an array\n            if (\n              group_columns_by_name === true &&\n              obj[columns[i].name] !== undefined\n            ) {\n              if (Array.isArray(obj[columns[i].name])) {\n                obj[columns[i].name] = obj[columns[i].name].concat(record[i]);\n              } else {\n                obj[columns[i].name] = [obj[columns[i].name], record[i]];\n              }\n            } else {\n              obj[columns[i].name] = record[i];\n            }\n          }\n          // Without objname (default)\n          if (raw === true || info === true) {\n            const extRecord = Object.assign(\n              { record: obj },\n              raw === true\n                ? { raw: this.state.rawBuffer.toString(encoding) }\n                : {},\n              info === true ? { info: this.__infoRecord() } : {},\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [obj[objname], extRecord],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          } else {\n            const err = this.__push(\n              objname === undefined ? obj : [obj[objname], obj],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          }\n          // Without columns, records are array\n        } else {\n          if (raw === true || info === true) {\n            const extRecord = Object.assign(\n              { record: record },\n              raw === true\n                ? { raw: this.state.rawBuffer.toString(encoding) }\n                : {},\n              info === true ? { info: this.__infoRecord() } : {},\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [record[objname], extRecord],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          } else {\n            const err = this.__push(\n              objname === undefined ? record : [record[objname], record],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          }\n        }\n      }\n      this.__resetRecord();\n    },\n    __firstLineToColumns: function (record) {\n      const { firstLineToHeaders } = this.state;\n      try {\n        const headers =\n          firstLineToHeaders === undefined\n            ? record\n            : firstLineToHeaders.call(null, record);\n        if (!Array.isArray(headers)) {\n          return this.__error(\n            new CsvError$1(\n              \"CSV_INVALID_COLUMN_MAPPING\",\n              [\n                \"Invalid Column Mapping:\",\n                \"expect an array from column function,\",\n                `got ${JSON.stringify(headers)}`,\n              ],\n              this.options,\n              this.__infoField(),\n              {\n                headers: headers,\n              },\n            ),\n          );\n        }\n        const normalizedHeaders = normalize_columns_array(headers);\n        this.state.expectedRecordLength = normalizedHeaders.length;\n        this.options.columns = normalizedHeaders;\n        this.__resetRecord();\n        return;\n      } catch (err) {\n        return err;\n      }\n    },\n    __resetRecord: function () {\n      if (this.options.raw === true) {\n        this.state.rawBuffer.reset();\n      }\n      this.state.error = undefined;\n      this.state.record = [];\n      this.state.record_length = 0;\n    },\n    __onField: function () {\n      const { cast, encoding, rtrim, max_record_size } = this.options;\n      const { enabled, wasQuoting } = this.state;\n      // Short circuit for the from_line options\n      if (enabled === false) {\n        return this.__resetField();\n      }\n      let field = this.state.field.toString(encoding);\n      if (rtrim === true && wasQuoting === false) {\n        field = field.trimRight();\n      }\n      if (cast === true) {\n        const [err, f] = this.__cast(field);\n        if (err !== undefined) return err;\n        field = f;\n      }\n      this.state.record.push(field);\n      // Increment record length if record size must not exceed a limit\n      if (max_record_size !== 0 && typeof field === \"string\") {\n        this.state.record_length += field.length;\n      }\n      this.__resetField();\n    },\n    __resetField: function () {\n      this.state.field.reset();\n      this.state.wasQuoting = false;\n    },\n    __push: function (record, push) {\n      const { on_record } = this.options;\n      if (on_record !== undefined) {\n        const info = this.__infoRecord();\n        try {\n          record = on_record.call(null, record, info);\n        } catch (err) {\n          return err;\n        }\n        if (record === undefined || record === null) {\n          return;\n        }\n      }\n      push(record);\n    },\n    // Return a tuple with the error and the casted value\n    __cast: function (field) {\n      const { columns, relax_column_count } = this.options;\n      const isColumns = Array.isArray(columns);\n      // Dont loose time calling cast\n      // because the final record is an object\n      // and this field can't be associated to a key present in columns\n      if (\n        isColumns === true &&\n        relax_column_count &&\n        this.options.columns.length <= this.state.record.length\n      ) {\n        return [undefined, undefined];\n      }\n      if (this.state.castField !== null) {\n        try {\n          const info = this.__infoField();\n          return [undefined, this.state.castField.call(null, field, info)];\n        } catch (err) {\n          return [err];\n        }\n      }\n      if (this.__isFloat(field)) {\n        return [undefined, parseFloat(field)];\n      } else if (this.options.cast_date !== false) {\n        const info = this.__infoField();\n        return [undefined, this.options.cast_date.call(null, field, info)];\n      }\n      return [undefined, field];\n    },\n    // Helper to test if a character is a space or a line delimiter\n    __isCharTrimable: function (buf, pos) {\n      const isTrim = (buf, pos) => {\n        const { timchars } = this.state;\n        loop1: for (let i = 0; i < timchars.length; i++) {\n          const timchar = timchars[i];\n          for (let j = 0; j < timchar.length; j++) {\n            if (timchar[j] !== buf[pos + j]) continue loop1;\n          }\n          return timchar.length;\n        }\n        return 0;\n      };\n      return isTrim(buf, pos);\n    },\n    // Keep it in case we implement the `cast_int` option\n    // __isInt(value){\n    //   // return Number.isInteger(parseInt(value))\n    //   // return !isNaN( parseInt( obj ) );\n    //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n    // }\n    __isFloat: function (value) {\n      return value - parseFloat(value) + 1 >= 0; // Borrowed from jquery\n    },\n    __compareBytes: function (sourceBuf, targetBuf, targetPos, firstByte) {\n      if (sourceBuf[0] !== firstByte) return 0;\n      const sourceLength = sourceBuf.length;\n      for (let i = 1; i < sourceLength; i++) {\n        if (sourceBuf[i] !== targetBuf[targetPos + i]) return 0;\n      }\n      return sourceLength;\n    },\n    __isDelimiter: function (buf, pos, chr) {\n      const { delimiter, ignore_last_delimiters } = this.options;\n      if (\n        ignore_last_delimiters === true &&\n        this.state.record.length === this.options.columns.length - 1\n      ) {\n        return 0;\n      } else if (\n        ignore_last_delimiters !== false &&\n        typeof ignore_last_delimiters === \"number\" &&\n        this.state.record.length === ignore_last_delimiters - 1\n      ) {\n        return 0;\n      }\n      loop1: for (let i = 0; i < delimiter.length; i++) {\n        const del = delimiter[i];\n        if (del[0] === chr) {\n          for (let j = 1; j < del.length; j++) {\n            if (del[j] !== buf[pos + j]) continue loop1;\n          }\n          return del.length;\n        }\n      }\n      return 0;\n    },\n    __isRecordDelimiter: function (chr, buf, pos) {\n      const { record_delimiter } = this.options;\n      const recordDelimiterLength = record_delimiter.length;\n      loop1: for (let i = 0; i < recordDelimiterLength; i++) {\n        const rd = record_delimiter[i];\n        const rdLength = rd.length;\n        if (rd[0] !== chr) {\n          continue;\n        }\n        for (let j = 1; j < rdLength; j++) {\n          if (rd[j] !== buf[pos + j]) {\n            continue loop1;\n          }\n        }\n        return rd.length;\n      }\n      return 0;\n    },\n    __isEscape: function (buf, pos, chr) {\n      const { escape } = this.options;\n      if (escape === null) return false;\n      const l = escape.length;\n      if (escape[0] === chr) {\n        for (let i = 0; i < l; i++) {\n          if (escape[i] !== buf[pos + i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    __isQuote: function (buf, pos) {\n      const { quote } = this.options;\n      if (quote === null) return false;\n      const l = quote.length;\n      for (let i = 0; i < l; i++) {\n        if (quote[i] !== buf[pos + i]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    __autoDiscoverRecordDelimiter: function (buf, pos) {\n      const { encoding } = this.options;\n      // Note, we don't need to cache this information in state,\n      // It is only called on the first line until we find out a suitable\n      // record delimiter.\n      const rds = [\n        // Important, the windows line ending must be before mac os 9\n        Buffer.from(\"\\r\\n\", encoding),\n        Buffer.from(\"\\n\", encoding),\n        Buffer.from(\"\\r\", encoding),\n      ];\n      loop: for (let i = 0; i < rds.length; i++) {\n        const l = rds[i].length;\n        for (let j = 0; j < l; j++) {\n          if (rds[i][j] !== buf[pos + j]) {\n            continue loop;\n          }\n        }\n        this.options.record_delimiter.push(rds[i]);\n        this.state.recordDelimiterMaxLength = rds[i].length;\n        return rds[i].length;\n      }\n      return 0;\n    },\n    __error: function (msg) {\n      const { encoding, raw, skip_records_with_error } = this.options;\n      const err = typeof msg === \"string\" ? new Error(msg) : msg;\n      if (skip_records_with_error) {\n        this.state.recordHasError = true;\n        if (this.options.on_skip !== undefined) {\n          this.options.on_skip(\n            err,\n            raw ? this.state.rawBuffer.toString(encoding) : undefined,\n          );\n        }\n        // this.emit('skip', err, raw ? this.state.rawBuffer.toString(encoding) : undefined);\n        return undefined;\n      } else {\n        return err;\n      }\n    },\n    __infoDataSet: function () {\n      return {\n        ...this.info,\n        columns: this.options.columns,\n      };\n    },\n    __infoRecord: function () {\n      const { columns, raw, encoding } = this.options;\n      return {\n        ...this.__infoDataSet(),\n        error: this.state.error,\n        header: columns === true,\n        index: this.state.record.length,\n        raw: raw ? this.state.rawBuffer.toString(encoding) : undefined,\n      };\n    },\n    __infoField: function () {\n      const { columns } = this.options;\n      const isColumns = Array.isArray(columns);\n      return {\n        ...this.__infoRecord(),\n        column:\n          isColumns === true\n            ? columns.length > this.state.record.length\n              ? columns[this.state.record.length].name\n              : null\n            : this.state.record.length,\n        quoting: this.state.wasQuoting,\n      };\n    },\n  };\n};\n\nconst parse = function (data, opts = {}) {\n  if (typeof data === \"string\") {\n    data = Buffer.from(data);\n  }\n  const records = opts && opts.objname ? {} : [];\n  const parser = transform$1(opts);\n  const push = (record) => {\n    if (parser.options.objname === undefined) records.push(record);\n    else {\n      records[record[0]] = record[1];\n    }\n  };\n  const close = () => {};\n  const err1 = parser.parse(data, false, push, close);\n  if (err1 !== undefined) throw err1;\n  const err2 = parser.parse(undefined, true, push, close);\n  if (err2 !== undefined) throw err2;\n  return records;\n};\n\n// Lodash implementation of `get`\n\nconst charCodeOfDot = \".\".charCodeAt(0);\nconst reEscapeChar = /\\\\(\\\\)?/g;\nconst rePropName = RegExp(\n  // Match anything that isn't a dot or bracket.\n  \"[^.[\\\\]]+\" +\n    \"|\" +\n    // Or match property names within brackets.\n    \"\\\\[(?:\" +\n    // Match a non-string expression.\n    \"([^\\\"'][^[]*)\" +\n    \"|\" +\n    // Or match strings (supports escaping characters).\n    \"([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2\" +\n    \")\\\\]\" +\n    \"|\" +\n    // Or match \"\" as the space between consecutive dots or empty brackets.\n    \"(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))\",\n  \"g\",\n);\nconst reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nconst reIsPlainProp = /^\\w*$/;\n\nconst getTag = function (value) {\n  return Object.prototype.toString.call(value);\n};\n\nconst isSymbol = function (value) {\n  const type = typeof value;\n  return (\n    type === \"symbol\" ||\n    (type === \"object\" && value && getTag(value) === \"[object Symbol]\")\n  );\n};\n\nconst isKey = function (value, object) {\n  if (Array.isArray(value)) {\n    return false;\n  }\n  const type = typeof value;\n  if (\n    type === \"number\" ||\n    type === \"symbol\" ||\n    type === \"boolean\" ||\n    !value ||\n    isSymbol(value)\n  ) {\n    return true;\n  }\n  return (\n    reIsPlainProp.test(value) ||\n    !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object))\n  );\n};\n\nconst stringToPath = function (string) {\n  const result = [];\n  if (string.charCodeAt(0) === charCodeOfDot) {\n    result.push(\"\");\n  }\n  string.replace(rePropName, function (match, expression, quote, subString) {\n    let key = match;\n    if (quote) {\n      key = subString.replace(reEscapeChar, \"$1\");\n    } else if (expression) {\n      key = expression.trim();\n    }\n    result.push(key);\n  });\n  return result;\n};\n\nconst castPath = function (value, object) {\n  if (Array.isArray(value)) {\n    return value;\n  } else {\n    return isKey(value, object) ? [value] : stringToPath(value);\n  }\n};\n\nconst toKey = function (value) {\n  if (typeof value === \"string\" || isSymbol(value)) return value;\n  const result = `${value}`;\n  // eslint-disable-next-line\n  return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n};\n\nconst get = function (object, path) {\n  path = castPath(path, object);\n  let index = 0;\n  const length = path.length;\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return index && index === length ? object : undefined;\n};\n\nconst is_object = function (obj) {\n  return typeof obj === \"object\" && obj !== null && !Array.isArray(obj);\n};\n\nconst normalize_columns = function (columns) {\n  if (columns === undefined || columns === null) {\n    return [undefined, undefined];\n  }\n  if (typeof columns !== \"object\") {\n    return [Error('Invalid option \"columns\": expect an array or an object')];\n  }\n  if (!Array.isArray(columns)) {\n    const newcolumns = [];\n    for (const k in columns) {\n      newcolumns.push({\n        key: k,\n        header: columns[k],\n      });\n    }\n    columns = newcolumns;\n  } else {\n    const newcolumns = [];\n    for (const column of columns) {\n      if (typeof column === \"string\") {\n        newcolumns.push({\n          key: column,\n          header: column,\n        });\n      } else if (\n        typeof column === \"object\" &&\n        column !== null &&\n        !Array.isArray(column)\n      ) {\n        if (!column.key) {\n          return [\n            Error('Invalid column definition: property \"key\" is required'),\n          ];\n        }\n        if (column.header === undefined) {\n          column.header = column.key;\n        }\n        newcolumns.push(column);\n      } else {\n        return [\n          Error(\"Invalid column definition: expect a string or an object\"),\n        ];\n      }\n    }\n    columns = newcolumns;\n  }\n  return [undefined, columns];\n};\n\nclass CsvError extends Error {\n  constructor(code, message, ...contexts) {\n    if (Array.isArray(message)) message = message.join(\" \");\n    super(message);\n    if (Error.captureStackTrace !== undefined) {\n      Error.captureStackTrace(this, CsvError);\n    }\n    this.code = code;\n    for (const context of contexts) {\n      for (const key in context) {\n        const value = context[key];\n        this[key] = isBuffer$1(value)\n          ? value.toString()\n          : value == null\n            ? value\n            : JSON.parse(JSON.stringify(value));\n      }\n    }\n  }\n}\n\nconst underscore = function (str) {\n  return str.replace(/([A-Z])/g, function (_, match) {\n    return \"_\" + match.toLowerCase();\n  });\n};\n\nconst normalize_options = function (opts) {\n  const options = {};\n  // Merge with user options\n  for (const opt in opts) {\n    options[underscore(opt)] = opts[opt];\n  }\n  // Normalize option `bom`\n  if (\n    options.bom === undefined ||\n    options.bom === null ||\n    options.bom === false\n  ) {\n    options.bom = false;\n  } else if (options.bom !== true) {\n    return [\n      new CsvError(\"CSV_OPTION_BOOLEAN_INVALID_TYPE\", [\n        \"option `bom` is optional and must be a boolean value,\",\n        `got ${JSON.stringify(options.bom)}`,\n      ]),\n    ];\n  }\n  // Normalize option `delimiter`\n  if (options.delimiter === undefined || options.delimiter === null) {\n    options.delimiter = \",\";\n  } else if (isBuffer$1(options.delimiter)) {\n    options.delimiter = options.delimiter.toString();\n  } else if (typeof options.delimiter !== \"string\") {\n    return [\n      new CsvError(\"CSV_OPTION_DELIMITER_INVALID_TYPE\", [\n        \"option `delimiter` must be a buffer or a string,\",\n        `got ${JSON.stringify(options.delimiter)}`,\n      ]),\n    ];\n  }\n  // Normalize option `quote`\n  if (options.quote === undefined || options.quote === null) {\n    options.quote = '\"';\n  } else if (options.quote === true) {\n    options.quote = '\"';\n  } else if (options.quote === false) {\n    options.quote = \"\";\n  } else if (isBuffer$1(options.quote)) {\n    options.quote = options.quote.toString();\n  } else if (typeof options.quote !== \"string\") {\n    return [\n      new CsvError(\"CSV_OPTION_QUOTE_INVALID_TYPE\", [\n        \"option `quote` must be a boolean, a buffer or a string,\",\n        `got ${JSON.stringify(options.quote)}`,\n      ]),\n    ];\n  }\n  // Normalize option `quoted`\n  if (options.quoted === undefined || options.quoted === null) {\n    options.quoted = false;\n  }\n  // Normalize option `escape_formulas`\n  if (\n    options.escape_formulas === undefined ||\n    options.escape_formulas === null\n  ) {\n    options.escape_formulas = false;\n  } else if (typeof options.escape_formulas !== \"boolean\") {\n    return [\n      new CsvError(\"CSV_OPTION_ESCAPE_FORMULAS_INVALID_TYPE\", [\n        \"option `escape_formulas` must be a boolean,\",\n        `got ${JSON.stringify(options.escape_formulas)}`,\n      ]),\n    ];\n  }\n  // Normalize option `quoted_empty`\n  if (options.quoted_empty === undefined || options.quoted_empty === null) {\n    options.quoted_empty = undefined;\n  }\n  // Normalize option `quoted_match`\n  if (\n    options.quoted_match === undefined ||\n    options.quoted_match === null ||\n    options.quoted_match === false\n  ) {\n    options.quoted_match = null;\n  } else if (!Array.isArray(options.quoted_match)) {\n    options.quoted_match = [options.quoted_match];\n  }\n  if (options.quoted_match) {\n    for (const quoted_match of options.quoted_match) {\n      const isString = typeof quoted_match === \"string\";\n      const isRegExp = quoted_match instanceof RegExp;\n      if (!isString && !isRegExp) {\n        return [\n          Error(\n            `Invalid Option: quoted_match must be a string or a regex, got ${JSON.stringify(quoted_match)}`,\n          ),\n        ];\n      }\n    }\n  }\n  // Normalize option `quoted_string`\n  if (options.quoted_string === undefined || options.quoted_string === null) {\n    options.quoted_string = false;\n  }\n  // Normalize option `eof`\n  if (options.eof === undefined || options.eof === null) {\n    options.eof = true;\n  }\n  // Normalize option `escape`\n  if (options.escape === undefined || options.escape === null) {\n    options.escape = '\"';\n  } else if (isBuffer$1(options.escape)) {\n    options.escape = options.escape.toString();\n  } else if (typeof options.escape !== \"string\") {\n    return [\n      Error(\n        `Invalid Option: escape must be a buffer or a string, got ${JSON.stringify(options.escape)}`,\n      ),\n    ];\n  }\n  if (options.escape.length > 1) {\n    return [\n      Error(\n        `Invalid Option: escape must be one character, got ${options.escape.length} characters`,\n      ),\n    ];\n  }\n  // Normalize option `header`\n  if (options.header === undefined || options.header === null) {\n    options.header = false;\n  }\n  // Normalize option `columns`\n  const [errColumns, columns] = normalize_columns(options.columns);\n  if (errColumns !== undefined) return [errColumns];\n  options.columns = columns;\n  // Normalize option `quoted`\n  if (options.quoted === undefined || options.quoted === null) {\n    options.quoted = false;\n  }\n  // Normalize option `cast`\n  if (options.cast === undefined || options.cast === null) {\n    options.cast = {};\n  }\n  // Normalize option cast.bigint\n  if (options.cast.bigint === undefined || options.cast.bigint === null) {\n    // Cast boolean to string by default\n    options.cast.bigint = (value) => \"\" + value;\n  }\n  // Normalize option cast.boolean\n  if (options.cast.boolean === undefined || options.cast.boolean === null) {\n    // Cast boolean to string by default\n    options.cast.boolean = (value) => (value ? \"1\" : \"\");\n  }\n  // Normalize option cast.date\n  if (options.cast.date === undefined || options.cast.date === null) {\n    // Cast date to timestamp string by default\n    options.cast.date = (value) => \"\" + value.getTime();\n  }\n  // Normalize option cast.number\n  if (options.cast.number === undefined || options.cast.number === null) {\n    // Cast number to string using native casting by default\n    options.cast.number = (value) => \"\" + value;\n  }\n  // Normalize option cast.object\n  if (options.cast.object === undefined || options.cast.object === null) {\n    // Stringify object as JSON by default\n    options.cast.object = (value) => JSON.stringify(value);\n  }\n  // Normalize option cast.string\n  if (options.cast.string === undefined || options.cast.string === null) {\n    // Leave string untouched\n    options.cast.string = function (value) {\n      return value;\n    };\n  }\n  // Normalize option `on_record`\n  if (\n    options.on_record !== undefined &&\n    typeof options.on_record !== \"function\"\n  ) {\n    return [Error(`Invalid Option: \"on_record\" must be a function.`)];\n  }\n  // Normalize option `record_delimiter`\n  if (\n    options.record_delimiter === undefined ||\n    options.record_delimiter === null\n  ) {\n    options.record_delimiter = \"\\n\";\n  } else if (isBuffer$1(options.record_delimiter)) {\n    options.record_delimiter = options.record_delimiter.toString();\n  } else if (typeof options.record_delimiter !== \"string\") {\n    return [\n      Error(\n        `Invalid Option: record_delimiter must be a buffer or a string, got ${JSON.stringify(options.record_delimiter)}`,\n      ),\n    ];\n  }\n  switch (options.record_delimiter) {\n    case \"unix\":\n      options.record_delimiter = \"\\n\";\n      break;\n    case \"mac\":\n      options.record_delimiter = \"\\r\";\n      break;\n    case \"windows\":\n      options.record_delimiter = \"\\r\\n\";\n      break;\n    case \"ascii\":\n      options.record_delimiter = \"\\u001e\";\n      break;\n    case \"unicode\":\n      options.record_delimiter = \"\\u2028\";\n      break;\n  }\n  return [undefined, options];\n};\n\nconst bom_utf8 = Buffer.from([239, 187, 191]);\n\nconst stringifier = function (options, state, info) {\n  return {\n    options: options,\n    state: state,\n    info: info,\n    __transform: function (chunk, push) {\n      // Chunk validation\n      if (!Array.isArray(chunk) && typeof chunk !== \"object\") {\n        return Error(\n          `Invalid Record: expect an array or an object, got ${JSON.stringify(chunk)}`,\n        );\n      }\n      // Detect columns from the first record\n      if (this.info.records === 0) {\n        if (Array.isArray(chunk)) {\n          if (\n            this.options.header === true &&\n            this.options.columns === undefined\n          ) {\n            return Error(\n              \"Undiscoverable Columns: header option requires column option or object records\",\n            );\n          }\n        } else if (this.options.columns === undefined) {\n          const [err, columns] = normalize_columns(Object.keys(chunk));\n          if (err) return;\n          this.options.columns = columns;\n        }\n      }\n      // Emit the header\n      if (this.info.records === 0) {\n        this.bom(push);\n        const err = this.headers(push);\n        if (err) return err;\n      }\n      // Emit and stringify the record if an object or an array\n      try {\n        // this.emit('record', chunk, this.info.records);\n        if (this.options.on_record) {\n          this.options.on_record(chunk, this.info.records);\n        }\n      } catch (err) {\n        return err;\n      }\n      // Convert the record into a string\n      let err, chunk_string;\n      if (this.options.eof) {\n        [err, chunk_string] = this.stringify(chunk);\n        if (err) return err;\n        if (chunk_string === undefined) {\n          return;\n        } else {\n          chunk_string = chunk_string + this.options.record_delimiter;\n        }\n      } else {\n        [err, chunk_string] = this.stringify(chunk);\n        if (err) return err;\n        if (chunk_string === undefined) {\n          return;\n        } else {\n          if (this.options.header || this.info.records) {\n            chunk_string = this.options.record_delimiter + chunk_string;\n          }\n        }\n      }\n      // Emit the csv\n      this.info.records++;\n      push(chunk_string);\n    },\n    stringify: function (chunk, chunkIsHeader = false) {\n      if (typeof chunk !== \"object\") {\n        return [undefined, chunk];\n      }\n      const { columns } = this.options;\n      const record = [];\n      // Record is an array\n      if (Array.isArray(chunk)) {\n        // We are getting an array but the user has specified output columns. In\n        // this case, we respect the columns indexes\n        if (columns) {\n          chunk.splice(columns.length);\n        }\n        // Cast record elements\n        for (let i = 0; i < chunk.length; i++) {\n          const field = chunk[i];\n          const [err, value] = this.__cast(field, {\n            index: i,\n            column: i,\n            records: this.info.records,\n            header: chunkIsHeader,\n          });\n          if (err) return [err];\n          record[i] = [value, field];\n        }\n        // Record is a literal object\n        // `columns` is always defined: it is either provided or discovered.\n      } else {\n        for (let i = 0; i < columns.length; i++) {\n          const field = get(chunk, columns[i].key);\n          const [err, value] = this.__cast(field, {\n            index: i,\n            column: columns[i].key,\n            records: this.info.records,\n            header: chunkIsHeader,\n          });\n          if (err) return [err];\n          record[i] = [value, field];\n        }\n      }\n      let csvrecord = \"\";\n      for (let i = 0; i < record.length; i++) {\n        let options, err;\n\n        let [value, field] = record[i];\n        if (typeof value === \"string\") {\n          options = this.options;\n        } else if (is_object(value)) {\n          options = value;\n          value = options.value;\n          delete options.value;\n          if (\n            typeof value !== \"string\" &&\n            value !== undefined &&\n            value !== null\n          ) {\n            if (err)\n              return [\n                Error(\n                  `Invalid Casting Value: returned value must return a string, null or undefined, got ${JSON.stringify(value)}`,\n                ),\n              ];\n          }\n          options = { ...this.options, ...options };\n          [err, options] = normalize_options(options);\n          if (err !== undefined) {\n            return [err];\n          }\n        } else if (value === undefined || value === null) {\n          options = this.options;\n        } else {\n          return [\n            Error(\n              `Invalid Casting Value: returned value must return a string, an object, null or undefined, got ${JSON.stringify(value)}`,\n            ),\n          ];\n        }\n        const {\n          delimiter,\n          escape,\n          quote,\n          quoted,\n          quoted_empty,\n          quoted_string,\n          quoted_match,\n          record_delimiter,\n          escape_formulas,\n        } = options;\n        if (\"\" === value && \"\" === field) {\n          let quotedMatch =\n            quoted_match &&\n            quoted_match.filter((quoted_match) => {\n              if (typeof quoted_match === \"string\") {\n                return value.indexOf(quoted_match) !== -1;\n              } else {\n                return quoted_match.test(value);\n              }\n            });\n          quotedMatch = quotedMatch && quotedMatch.length > 0;\n          const shouldQuote =\n            quotedMatch ||\n            true === quoted_empty ||\n            (true === quoted_string && false !== quoted_empty);\n          if (shouldQuote === true) {\n            value = quote + value + quote;\n          }\n          csvrecord += value;\n        } else if (value) {\n          if (typeof value !== \"string\") {\n            return [\n              Error(\n                `Formatter must return a string, null or undefined, got ${JSON.stringify(value)}`,\n              ),\n            ];\n          }\n          const containsdelimiter =\n            delimiter.length && value.indexOf(delimiter) >= 0;\n          const containsQuote = quote !== \"\" && value.indexOf(quote) >= 0;\n          const containsEscape = value.indexOf(escape) >= 0 && escape !== quote;\n          const containsRecordDelimiter = value.indexOf(record_delimiter) >= 0;\n          const quotedString = quoted_string && typeof field === \"string\";\n          let quotedMatch =\n            quoted_match &&\n            quoted_match.filter((quoted_match) => {\n              if (typeof quoted_match === \"string\") {\n                return value.indexOf(quoted_match) !== -1;\n              } else {\n                return quoted_match.test(value);\n              }\n            });\n          quotedMatch = quotedMatch && quotedMatch.length > 0;\n          // See https://github.com/adaltas/node-csv/pull/387\n          // More about CSV injection or formula injection, when websites embed\n          // untrusted input inside CSV files:\n          // https://owasp.org/www-community/attacks/CSV_Injection\n          // http://georgemauer.net/2017/10/07/csv-injection.html\n          // Apple Numbers unicode normalization is empirical from testing\n          if (escape_formulas) {\n            switch (value[0]) {\n              case \"=\":\n              case \"+\":\n              case \"-\":\n              case \"@\":\n              case \"\\t\":\n              case \"\\r\":\n              case \"\\uFF1D\": // Unicode '='\n              case \"\\uFF0B\": // Unicode '+'\n              case \"\\uFF0D\": // Unicode '-'\n              case \"\\uFF20\": // Unicode '@'\n                value = `'${value}`;\n                break;\n            }\n          }\n          const shouldQuote =\n            containsQuote === true ||\n            containsdelimiter ||\n            containsRecordDelimiter ||\n            quoted ||\n            quotedString ||\n            quotedMatch;\n          if (shouldQuote === true && containsEscape === true) {\n            const regexp =\n              escape === \"\\\\\"\n                ? new RegExp(escape + escape, \"g\")\n                : new RegExp(escape, \"g\");\n            value = value.replace(regexp, escape + escape);\n          }\n          if (containsQuote === true) {\n            const regexp = new RegExp(quote, \"g\");\n            value = value.replace(regexp, escape + quote);\n          }\n          if (shouldQuote === true) {\n            value = quote + value + quote;\n          }\n          csvrecord += value;\n        } else if (\n          quoted_empty === true ||\n          (field === \"\" && quoted_string === true && quoted_empty !== false)\n        ) {\n          csvrecord += quote + quote;\n        }\n        if (i !== record.length - 1) {\n          csvrecord += delimiter;\n        }\n      }\n      return [undefined, csvrecord];\n    },\n    bom: function (push) {\n      if (this.options.bom !== true) {\n        return;\n      }\n      push(bom_utf8);\n    },\n    headers: function (push) {\n      if (this.options.header === false) {\n        return;\n      }\n      if (this.options.columns === undefined) {\n        return;\n      }\n      let err;\n      let headers = this.options.columns.map((column) => column.header);\n      if (this.options.eof) {\n        [err, headers] = this.stringify(headers, true);\n        headers += this.options.record_delimiter;\n      } else {\n        [err, headers] = this.stringify(headers);\n      }\n      if (err) return err;\n      push(headers);\n    },\n    __cast: function (value, context) {\n      const type = typeof value;\n      try {\n        if (type === \"string\") {\n          // Fine for 99% of the cases\n          return [undefined, this.options.cast.string(value, context)];\n        } else if (type === \"bigint\") {\n          return [undefined, this.options.cast.bigint(value, context)];\n        } else if (type === \"number\") {\n          return [undefined, this.options.cast.number(value, context)];\n        } else if (type === \"boolean\") {\n          return [undefined, this.options.cast.boolean(value, context)];\n        } else if (value instanceof Date) {\n          return [undefined, this.options.cast.date(value, context)];\n        } else if (type === \"object\" && value !== null) {\n          return [undefined, this.options.cast.object(value, context)];\n        } else {\n          return [undefined, value, value];\n        }\n      } catch (err) {\n        return [err];\n      }\n    },\n  };\n};\n\nconst stringify = function (records, opts = {}) {\n  const data = [];\n  const [err, options] = normalize_options(opts);\n  if (err !== undefined) throw err;\n  const state = {\n    stop: false,\n  };\n  // Information\n  const info = {\n    records: 0,\n  };\n  const api = stringifier(options, state, info);\n  for (const record of records) {\n    const err = api.__transform(record, function (record) {\n      data.push(record);\n    });\n    if (err !== undefined) throw err;\n  }\n  if (data.length === 0) {\n    api.bom((d) => {\n      data.push(d);\n    });\n    const err = api.headers((headers) => {\n      data.push(headers);\n    });\n    if (err !== undefined) throw err;\n  }\n  return data.join(\"\");\n};\n\n/*\nStream Transform\n\nPlease look at the [project documentation](https://csv.js.org/transform/) for\nadditional information.\n*/\n\n\nconst Transformer = function (options = {}, handler) {\n  this.options = options;\n  if (options.consume === undefined || options.consume === null) {\n    this.options.consume = false;\n  }\n  this.options.objectMode = true;\n  if (options.parallel === undefined || options.parallel === null) {\n    this.options.parallel = 100;\n  }\n  if (options.params === undefined || options.params === null) {\n    options.params = null;\n  }\n  this.handler = handler;\n  Stream.Transform.call(this, this.options);\n  this.state = {\n    running: 0,\n    started: 0,\n    finished: 0,\n    paused: false,\n  };\n  return this;\n};\n\nutil.inherits(Transformer, Stream.Transform);\n\nTransformer.prototype._transform = function (chunk, _, cb) {\n  this.state.started++;\n  this.state.running++;\n  // Accept additionnal chunks to be processed in parallel\n  if (!this.state.paused && this.state.running < this.options.parallel) {\n    cb();\n    cb = null; // Cancel further callback execution\n  }\n  try {\n    let l = this.handler.length;\n    if (this.options.params !== null) {\n      l--;\n    }\n    if (l === 1) {\n      // sync\n      const result = this.handler.call(this, chunk, this.options.params);\n      if (result && result.then) {\n        result.then((result) => {\n          this.__done(null, [result], cb);\n        });\n        result.catch((err) => {\n          this.__done(err);\n        });\n      } else {\n        this.__done(null, [result], cb);\n      }\n    } else if (l === 2) {\n      // async\n      const callback = (err, ...chunks) => this.__done(err, chunks, cb);\n      this.handler.call(this, chunk, callback, this.options.params);\n    } else {\n      throw Error(\"Invalid handler arguments\");\n    }\n    return false;\n  } catch (err) {\n    this.__done(err);\n  }\n};\nTransformer.prototype._flush = function (cb) {\n  if (this.state.running === 0) {\n    cb();\n  } else {\n    this._ending = function () {\n      cb();\n    };\n  }\n};\nTransformer.prototype.__done = function (err, chunks, cb) {\n  this.state.running--;\n  if (err) {\n    return this.destroy(err);\n    // return this.emit('error', err);\n  }\n  this.state.finished++;\n  for (let chunk of chunks) {\n    if (typeof chunk === \"number\") {\n      chunk = `${chunk}`;\n    }\n    // We dont push empty string\n    // See https://nodejs.org/api/stream.html#stream_readable_push\n    if (chunk !== undefined && chunk !== null && chunk !== \"\") {\n      this.state.paused = !this.push(chunk);\n    }\n  }\n  // Chunk has been processed\n  if (cb) {\n    cb();\n  }\n  if (this._ending && this.state.running === 0) {\n    this._ending();\n  }\n};\n\n/*\nStream Transform - sync module\n\nPlease look at the [project documentation](https://csv.js.org/transform/) for\nadditional information.\n*/\n\n\nconst transform = function () {\n  // Import arguments normalization\n  let handler, records;\n  let options = {};\n  for (const i in arguments) {\n    const argument = arguments[i];\n    let type = typeof argument;\n    if (argument === null) {\n      type = \"null\";\n    } else if (type === \"object\" && Array.isArray(argument)) {\n      type = \"array\";\n    }\n    if (type === \"array\") {\n      records = argument;\n    } else if (type === \"object\") {\n      options = { ...argument };\n    } else if (type === \"function\") {\n      handler = argument;\n    } else if (type !== \"null\") {\n      throw new Error(\n        `Invalid Arguments: got ${JSON.stringify(argument)} at position ${i}`,\n      );\n    }\n  }\n  // Validate arguments\n  let expected_handler_length = 1;\n  if (options.params) {\n    expected_handler_length++;\n  }\n  if (handler.length > expected_handler_length) {\n    throw Error(\"Invalid Handler: only synchonous handlers are supported\");\n  }\n  // Start transformation\n  const chunks = [];\n  const transformer = new Transformer(options, handler);\n  transformer.push = function (chunk) {\n    chunks.push(chunk);\n  };\n  for (const record of records) {\n    transformer._transform(record, null, function () {});\n  }\n  return chunks;\n};\n\nexport { generate, parse, stringify, transform };\n"],"names":["global$1","global","self","window","lookup","revLookup","Arr","Uint8Array","Array","inited","init","code","i","charCodeAt","encodeChunk","uint8","start","end","tmp","num","output","push","join","fromByteArray","len","length","extraBytes","parts","maxChunkLength","len2","read$1","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","toString","isArray$1","isArray","arr","call","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","internalIsBuffer","checked","copy","val","type","data","fromObject","assertSize","size","b","_isBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","poolSize","_augment","Symbol","species","alloc","fill","allocUnsafeSlow","isBuffer","isBuffer$1","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","subarray","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","b64","l","placeHolders","L","toByteArray","trim","replace","stringtrim","base64clean","src","dst","isFastBuffer","isSlowBuffer","constructor","EventHandlers","EventEmitter","$getMaxListeners","_maxListeners","defaultMaxListeners","_addListener","listener","prepend","events","existing","_events","newListener","emit","_eventsCount","unshift","warned","w","name","emitter","count","console","warn","_onceWrap","fired","g","removeListener","listenerCount$1","evlistener","arrayClone","defaultSetTimout","defaultClearTimeout","Object","create","usingDomains","domain","active","getPrototypeOf","setMaxListeners","getMaxListeners","er","handler","args","doError","error","err","context","domainEmitter","domainThrown","isFn","listeners","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","addListener","on","prependListener","once","prependOnceListener","position","originalListener","index","k","pop","spliceOne","removeAllListeners","key","keys","unwrapListeners","listenerCount","eventNames","Reflect","ownKeys","cachedSetTimeout","cachedClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","nextTick","Item","noop","off","performance","performanceNow","now","mozNow","msNow","oNow","webkitNow","Date","getTime","startTime","process","title","browser","env","argv","version","versions","binding","cwd","chdir","umask","hrtime","previousTimestamp","clocktime","seconds","nanoseconds","platform","release","config","uptime","inherits$1","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","formatRegExp","format","f","isString","objects","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","noDeprecation","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","RegExp","test","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","forEach","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","hasOwnProperty","formatProperty","formatArray","map","reduce","prev","cur","reduceToSingleString","desc","getOwnPropertyDescriptor","get","split","line","ar","re","objectToString","o","pad","months","origin","add","prop","util","inherits","time","getHours","getMinutes","getSeconds","getDate","getMonth","maybeBuf","isPrimitive","isSymbol","isNullOrUndefined","BufferList","head","tail","v","entry","next","shift","clear","p","isBufferEncoding","StringDecoder","assertEncoding","surrogateSize","detectIncompleteChar","utf16DetectIncompleteChar","base64DetectIncompleteChar","passThroughWrite","charBuffer","charReceived","charLength","charStr","available","charCode","substring","cr","enc","Readable","ReadableState","debug","options","stream","objectMode","Duplex","readableObjectMode","hwm","highWaterMark","defaultHwm","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","_readableState","readable","_read","readableAddChunk","state","chunk","addToFront","chunkInvalid","emitReadable","onEofChunk","_e","skipAdd","maybeReadMore_","maybeReadMore","needMoreData","isPaused","setEncoding","MAX_HWM","howMuchToRead","computeNewHighWaterMark","emitReadable_","flow","nReadingNextTick","resume_","fromList","hasStrings","nb","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","nop","WriteReq","cb","callback","WritableState","defineProperty","getBuffer","writableObjectMode","needDrain","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","_writableState","writecb","writelen","onwriteStateUpdate","pendingcb","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","corkedRequestsFree","CorkedRequest","Writable","_write","writev","_writev","doWrite","onwriteDrain","finishMaybe","holder","finish","prefinish","need","_this","nOrig","doRead","pipe","dest","pipeOpts","endFn","onend","cleanup","onunpipe","ondrain","pipeOnDrain","cleanedUp","onclose","onfinish","onerror","ondata","increasedAwaitDrain","pause","unpipe","event","resume","dests","_i","splice","ev","wrap","paused","method","bind","_fromList","current","writeAfterEnd","valid","validChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","allowHalfOpen","onEndNT","TransformState","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","Transform","transform","_transform","flush","_flush","done","ws","PassThrough","Stream","source","_isStdio","didOnEnd","destroy","random","seed","PI","types","ascii","column","nb_chars","ceil","maxWordLength","char","int","bool","Generator","object_mode","high_water_mark","dft","columns","delimiter","duration","eof","fixedSize","rowDelimiter","sleep","accepted_header_types","filter","t","normalize_options$2","start_time","fixed_size_buffer","count_written","count_created","init_state$1","setImmediate","__read","close","recordsLength","record","recordLength","result","__push","CsvError$1","CsvError","message","contexts","super","captureStackTrace","parse","normalize_columns_array","normalizedColumns","disabled","ResizeableBuffer","resize","clone","append","reset","init_state","bomSkipped","bufBytesStart","castField","cast_function","commenting","enabled","from_line","escaping","escapeIsQuote","escape","quote","expectedRecordLength","field","firstLineToHeaders","cast_first_line_to_header","needMoreDataSize","comment","previousBuf","quoting","stop","rawBuffer","recordHasError","record_length","recordDelimiterMaxLength","record_delimiter","trimChars","wasQuoting","wasRowDelimiter","timchars","normalize_options$1","opt","bom","cast","cast_date","date","group_columns_by_name","comment_no_infix","delimiter_json","isInteger","ignore_last_delimiters","info","max_record_size","objname","on_record","on_skip","raw","rd","relax_column_count","relax_column_count_less","relax_column_count_more","relax_quotes","skip_empty_lines","skip_records_with_empty_values","skip_records_with_error","rtrim","ltrim","to","to_line","isRecordEmpty","every","boms","utf8","utf16le","records","parser","original_options","comment_lines","empty_lines","invalid_field_length","lines","__needMoreData","bufLen","nextBuf","bomLength","__autoDiscoverRecordDelimiter","chr","__isEscape","__isQuote","nextChr","isNextChrTrimable","__isCharTrimable","isNextChrComment","__compareBytes","isNextChrDelimiter","__isDelimiter","isNextChrRecordDelimiter","__isRecordDelimiter","__error","__infoField","Boolean","recordDelimiterLength","__resetField","__resetRecord","errField","__onField","errRecord","__onRecord","delimiterLength","lappend","rappend","__firstLineToColumns","finalErr","extRecord","assign","__infoRecord","headers","normalizedHeaders","trimRight","__cast","__isFloat","parseFloat","loop1","timchar","isTrim","sourceBuf","targetBuf","targetPos","sourceLength","del","rdLength","rds","loop","__infoDataSet","header","isColumns","transform$1","err1","err2","Transformer","consume","parallel","params","running","started","then","__done","catch","chunks","_ending","argument","expected_handler_length","transformer"],"sourceRoot":""}